{"version":3,"sources":["../../src/Logic/Rename/index.js","../../src/Logic/Context/index.js"],"names":["applyVariable","target","className","props","output","resource","classnames","variable","useGlobalContext","contextFunctions","functions","currentVariable","Object","currentFunctions","value"],"mappings":"yVAYA,EAAeA,aAPA,SAAC,SAAyE,EAAzE,WAAyE,EAAzE,QAAyE,EAAxDC,OAAwD,EAAzE,UAAgDC,EAAyB,EAAzBA,UAAcC,EAAW,iBAC/EC,EAAS,eAAC,EAAQC,GACxB,OAAO,0CAAgBH,UAAWI,IAAWJ,EAAW,wBACpD,wBADJ,Q,0HCMJ,EAAeF,aATC,SAAC,GAAsC,IAAtC,EAAsC,EAAtC,WAAsC,EAAtC,UAAuBO,EAAe,EAAfA,SACtC,EAAoFC,cAA9E,EAAN,EAAQD,SAAsCE,EAA9C,EAAmCC,UAAnC,mBACMC,EAAkBC,mBAAxB,GACMC,EAAmBD,mBAAzB,GACA,OAAO,uBAAUE,MAAOF,OAAA,YAAgC,CAAEL,SAAF,EAA6BG,UAAWG,KAAhG","file":"static/js/18.6047bfe0.chunk.js","sourcesContent":["import React from 'react';\nimport Context from '../Context';\nimport {applyVariable} from '../../util';\nimport classnames from 'classnames';\n\nconst Rename = ({resource, name, target = 'variable', children, className, ...props}) => {\n    const output = {[name]: resource};\n    return <div {...props} className={classnames(className, 'view-render-rename')}>\n        <Context {...output}>{children}</Context>\n    </div>;\n};\n\nexport default applyVariable(Rename);","import React from 'react';\nimport { Provider, useGlobalContext } from '../../context';\nimport { applyVariable } from '../../util';\n\nconst Context = ({ children, functions, variable }) => {\n  const { variable: contextVariable, functions: contextFunctions, ...otherContext } = useGlobalContext();\n  const currentVariable = Object.assign({}, contextVariable, variable);\n  const currentFunctions = Object.assign({}, contextFunctions, functions);\n  return <Provider value={Object.assign({}, otherContext, { variable: currentVariable, functions: currentFunctions })}>\n    {children}\n  </Provider>;\n};\n\nexport default applyVariable(Context);"],"sourceRoot":""}