{"version":3,"sources":["../../src/Logic/Remote/index.js","../../src/Logic/Context/index.js"],"names":["applyVariable","spin","className","props","useState","useEffect","setLoading","Promise","resource","data","setData","e","console","setError","status","title","subTitle","error","classnames","variable","$item","useGlobalContext","contextFunctions","functions","currentVariable","Object","currentFunctions","value"],"mappings":"mWAiCA,EAAeA,aA3BA,SAAC,SAA2D,EAA3D,WAA2D,EAA/CC,YAAZ,aAA2D,EAA3D,SAAiCC,EAA0B,EAA1BA,UAAcC,EAAY,iBACzE,EAA8BC,oBAA9B,sBAAM,EAAN,KAAM,EAAN,KACA,EAA0BA,oBAA1B,sBAAM,EAAN,KAAM,EAAN,KACA,EAAwBA,mBAAxB,yBAAM,EAAN,KAAM,EAAN,KAYA,OAXAC,qBAAU,WACRC,MACAC,gBAAoC,oBAAbC,EAA0BA,IAAjDD,YAA0EE,YACxEC,QACEC,YACFC,iBACAC,EAASF,EAATE,YAJFN,SAKW,WACTD,WAED,CAVHD,IAWA,EACS,sBAAP,GAEF,EACS,uBAAQS,OAAR,QAAuBC,MAAvB,2BAAoCC,SAAUC,IAGhD,0CAAgBf,UAAWgB,IAAWhB,EAAW,wBACtD,uBAASiB,SAAU,CAAEC,MAAOX,IAD9B,Q,0HCfF,EAAeT,aATC,SAAC,GAAsC,IAAtC,EAAsC,EAAtC,WAAsC,EAAtC,UAAuBmB,EAAe,EAAfA,SACtC,EAAoFE,cAA9E,EAAN,EAAQF,SAAsCG,EAA9C,EAAmCC,UAAnC,mBACMC,EAAkBC,mBAAxB,GACMC,EAAmBD,mBAAzB,GACA,OAAO,uBAAUE,MAAOF,OAAA,YAAgC,CAAEN,SAAF,EAA6BI,UAAWG,KAAhG","file":"static/js/22.cd0c5b56.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Context from '../Context';\nimport { Spin, Result } from 'antd';\nimport { applyVariable } from '../../util';\nimport classnames from 'classnames';\n\nconst Remote = ({ resource, spin = {}, children, className, ...props }) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    Promise.resolve(typeof resource === 'function' ? resource() : null).then((data) => {\n      setData(data);\n    }, (e) => {\n      console.error(e);\n      setError(e.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [resource]);\n  if (loading) {\n    return <Spin {...spin}/>;\n  }\n  if (error) {\n    return <Result status=\"error\" title=\"加载异常\" subTitle={error}/>;\n  }\n\n  return <div {...props} className={classnames(className, 'view-render-remote')}>\n    <Context variable={{ $item: data }}>{children}</Context>\n  </div>;\n};\n\nexport default applyVariable(Remote);","import React from 'react';\nimport { Provider, useGlobalContext } from '../../context';\nimport { applyVariable } from '../../util';\n\nconst Context = ({ children, functions, variable }) => {\n  const { variable: contextVariable, functions: contextFunctions, ...otherContext } = useGlobalContext();\n  const currentVariable = Object.assign({}, contextVariable, variable);\n  const currentFunctions = Object.assign({}, contextFunctions, functions);\n  return <Provider value={Object.assign({}, otherContext, { variable: currentVariable, functions: currentFunctions })}>\n    {children}\n  </Provider>;\n};\n\nexport default applyVariable(Context);"],"sourceRoot":""}