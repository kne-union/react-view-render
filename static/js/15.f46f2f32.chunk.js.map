{"version":3,"sources":["../../src/Logic/Mapping/index.js","../../src/util.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../src/Logic/Context/index.js"],"names":["applyVariable","className","props","item","expression","classnames","variable","$item","escape","value","WrappedComponent","originProps","useGlobalContext","components","emitter","output","extract","Object","key","extractProps","newProps","currentVariable","propsValue","parsedPropsValue","name","path","test","dotIndexList","map","sign","index","dotIndex","Math","parseVariable","functions","newFunction","Function","args","otherContext","content","lib","get","useEffect","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","length","i","arr2","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","contextFunctions","currentFunctions"],"mappings":"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","file":"static/js/15.f46f2f32.chunk.js","sourcesContent":["import React from 'react';\nimport Context from '../Context';\nimport { applyVariable } from '../../util';\nimport classnames from 'classnames';\n\nconst Mapping = ({ resource, expression, children, className, ...props }) => {\n  const item = typeof expression === 'function' ? expression(resource) : null;\n  return <div {...props} className={classnames(className, 'view-render-mapping')}>\n    <Context variable={{ $item: item }}>{children}</Context>\n  </div>;\n};\n\nexport default applyVariable(Mapping);","import React, {useEffect} from 'react';\nimport {useGlobalContext, Provider} from './context';\nimport Render from './index';\nimport get from 'lodash/get';\n\nconst escape = (value) => {\n    if (typeof value === 'string' && value.indexOf('\\\\$') === 0) {\n        return value.replace('\\\\$', '$');\n    }\n    return value;\n};\n\nconst parseVariable = (value) => {\n    if (typeof value !== 'string') {\n        return {\n            name: value,\n            path: ''\n        };\n    }\n    if (!/[.\\[]/.test(value)) {\n        return {\n            name: value,\n            path: ''\n        };\n    }\n    const dotIndexList = ['[', '.'].map((sign) => value.indexOf(sign)).filter((index) => index > -1);\n    if (dotIndexList.length === 0) {\n        return {\n            name: value,\n            path: ''\n        };\n    }\n    const dotIndex = Math.min(...dotIndexList);\n    return {\n        name: value.substr(0, dotIndex),\n        path: value.substr(dotIndex).replace(/^\\./, '')\n    };\n};\n\nexport const extractProps = (props = {}) => {\n    const output = {\n        props: {}, extract: {}\n    };\n    Object.keys(props).forEach((key) => {\n        if (key.charAt(0) === '$') {\n            output.extract[key] = props[key];\n        } else {\n            output.props[escape(key)] = props[key];\n        }\n    });\n\n    return output;\n};\n\nexport const applyVariable = (WrappedComponent) => {\n    return (originProps) => {\n        const {variable, functions, components, ...otherContext} = useGlobalContext();\n        const {emitter} = otherContext;\n        const {props, extract} = extractProps(originProps);\n        const newProps = {}, currentVariable = Object.assign({}, variable, extract);\n        Object.keys(props).forEach((key) => {\n            const propsValue = props[key], parsedPropsValue = parseVariable(props[key]);\n\n            if (currentVariable.hasOwnProperty(propsValue)) {\n                newProps[key] = currentVariable[propsValue];\n                return;\n            }\n\n            if (currentVariable.hasOwnProperty(parsedPropsValue.name)) {\n                newProps[key] = get(currentVariable[parsedPropsValue.name], parsedPropsValue.path);\n                return;\n            }\n\n            if (functions.hasOwnProperty(propsValue)) {\n                if (typeof functions[propsValue] === 'string') {\n                    newProps[key] = (...args) => {\n                        const newFunction = new Function('args', 'variable', 'functions', 'lib', functions[propsValue]);\n                        return newFunction(args, currentVariable, functions, otherContext.lib);\n                    };\n                    return;\n                }\n                if (typeof functions[propsValue] === 'function') {\n                    newProps[key] = functions[propsValue];\n                    return;\n                }\n                return;\n            }\n\n            if (components.hasOwnProperty(propsValue)) {\n                newProps[key] =\n                    <Render content={components[propsValue]} lib={otherContext.lib} emitter={otherContext.emitter}/>;\n                return;\n            }\n\n            newProps[key] = escape(propsValue);\n        });\n        useEffect(() => {\n            emitter && emitter.emit('component-appended', currentVariable.$id);\n            return () => {\n                emitter && emitter.emit('component-removed', currentVariable.$id);\n            };\n        }, [emitter]);\n        if (Object.keys(extract).length > 0) {\n            return <Provider\n                value={Object.assign({}, otherContext, {functions, components, variable: currentVariable})}>\n                <WrappedComponent {...newProps}/>\n            </Provider>;\n        }\n        return <WrappedComponent {...newProps}/>;\n    };\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import React from 'react';\nimport { Provider, useGlobalContext } from '../../context';\nimport { applyVariable } from '../../util';\n\nconst Context = ({ children, functions, variable }) => {\n  const { variable: contextVariable, functions: contextFunctions, ...otherContext } = useGlobalContext();\n  const currentVariable = Object.assign({}, contextVariable, variable);\n  const currentFunctions = Object.assign({}, contextFunctions, functions);\n  return <Provider value={Object.assign({}, otherContext, { variable: currentVariable, functions: currentFunctions })}>\n    {children}\n  </Provider>;\n};\n\nexport default applyVariable(Context);"],"sourceRoot":""}