{"ast":null,"code":"import React, { createContext, useContext, useMemo, useRef, useEffect, useState, useCallback, useImperativeHandle, forwardRef } from 'react';\nimport isPlainObject from 'lodash/isPlainObject';\nimport getValues from 'lodash/values';\nimport isArray from 'lodash/isArray';\nimport fbemitter from 'fbemitter';\nimport compose from '@kne/compose';\nimport _get from 'lodash/get';\nimport _uniqBy from 'lodash/uniqBy';\nimport _last from 'lodash/last';\nimport _set from 'lodash/set';\nimport uniqueId from 'lodash/uniqueId';\nimport { useDebouncedCallback } from 'use-debounce';\nvar context = createContext({});\nvar Provider = context.Provider;\n\nvar useFormContext = function useFormContext() {\n  return useContext(context);\n};\n\nvar isNotEmpty = function isNotEmpty(value) {\n  if (isPlainObject(value)) {\n    var values = getValues(value);\n    return values.length > 0 && values.some(function (item) {\n      return !!item;\n    });\n  } else if (isArray(value)) {\n    return value.length > 0;\n  } else if (typeof value === 'number') {\n    return !isNaN(value);\n  } else {\n    return !(value === undefined || value === null || value === '' || value.length === 0);\n  }\n};\n\nvar isEmpty = function isEmpty(value) {\n  return !isNotEmpty(value);\n};\n\nvar filterEmpty = function filterEmpty(value) {\n  if (value === void 0) {\n    value = {};\n  }\n\n  var output = {};\n  Object.keys(value).forEach(function (key) {\n    var current = value[key];\n\n    if (isNotEmpty(current)) {\n      output[key] = current;\n    }\n  });\n  return output;\n};\n\nvar RULES = {\n  REQ: function REQ(value) {\n    return {\n      result: isNotEmpty(value),\n      errMsg: ''\n    };\n  },\n  TEL: function TEL(value) {\n    return {\n      result: /^1[0-9]{10}$/.test(value),\n      errMsg: '请输入有效的手机号'\n    };\n  },\n  EMAIL: function EMAIL(value) {\n    return {\n      result: /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(value),\n      errMsg: '请输入有效的邮箱'\n    };\n  },\n  LEN: function LEN(value, start, end) {\n    value = value.toString();\n\n    if (end === start && value.length !== Number(end)) {\n      return {\n        result: false,\n        errMsg: \"%s\\u957F\\u5EA6\\u5FC5\\u987B\\u7B49\\u4E8E\" + end\n      };\n    }\n\n    if (value.length < start) {\n      return {\n        result: false,\n        errMsg: \"%s\\u957F\\u5EA6\\u5FC5\\u987B\\u5927\\u4E8E\" + start\n      };\n    }\n\n    if (end && value.length > end) {\n      return {\n        result: false,\n        errMsg: \"%s\\u957F\\u5EA6\\u5FC5\\u987B\\u5C0F\\u4E8E\" + end\n      };\n    }\n\n    return {\n      result: true\n    };\n  }\n};\n\nvar presetRules = function presetRules(newRules) {\n  if (newRules === void 0) {\n    newRules = {};\n  }\n\n  Object.assign(RULES, newRules);\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar EventEmitter = fbemitter.EventEmitter;\n\nvar FormEventEmitter = /*#__PURE__*/function (_EventEmitter) {\n  _inheritsLoose(FormEventEmitter, _EventEmitter);\n\n  function FormEventEmitter(debug) {\n    var _this;\n\n    _this = _EventEmitter.call(this) || this;\n    _this.debug = debug;\n    return _this;\n  }\n\n  var _proto = FormEventEmitter.prototype;\n\n  _proto.emit = function emit() {\n    var _EventEmitter$prototy;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (this.debug) {\n      var _console;\n\n      (_console = console).log.apply(_console, ['[react-form][debug]:'].concat(args));\n    }\n\n    (_EventEmitter$prototy = _EventEmitter.prototype.emit).call.apply(_EventEmitter$prototy, [this].concat(args));\n  };\n\n  return FormEventEmitter;\n}(EventEmitter);\n\nvar useEvent = function useEvent(debug) {\n  var debugRef = useRef(debug);\n  return useMemo(function () {\n    var emitter = new FormEventEmitter(debugRef.current);\n    return {\n      addListener: function addListener() {\n        return emitter.addListener.apply(emitter, arguments);\n      },\n      emit: function emit() {\n        return emitter.emit.apply(emitter, arguments);\n      },\n      removeAllListeners: function removeAllListeners() {\n        return emitter.removeAllListeners.apply(emitter, arguments);\n      },\n      listeners: function listeners() {\n        return emitter.listeners.apply(emitter, arguments);\n      },\n      once: function once() {\n        return emitter.once.apply(emitter, arguments);\n      }\n    };\n  }, []);\n};\n\nvar fieldAddCreator = function fieldAddCreator(_ref) {\n  var formStateRef = _ref.formStateRef,\n      setFormState = _ref.setFormState;\n  return function (_ref2) {\n    var _Object$assign;\n\n    var name = _ref2.name;\n    var fieldItem = Object.assign({}, formStateRef.current[name]);\n\n    if (!fieldItem.field) {\n      fieldItem.field = {\n        name: name\n      };\n      fieldItem.data = {};\n    }\n\n    setFormState(Object.assign({}, formStateRef.current, (_Object$assign = {}, _Object$assign[name] = fieldItem, _Object$assign)));\n  };\n};\n\nvar interceptors = {\n  input: [],\n  output: []\n};\n\ninterceptors.input.use = function (name, func) {\n  return interceptors.input.push({\n    name: name,\n    exec: func\n  });\n};\n\ninterceptors.output.use = function (name, func) {\n  return interceptors.output.push({\n    name: name,\n    exec: func\n  });\n};\n\nvar baseInterceptors = interceptors;\n\nvar runInterceptors = function runInterceptors(interceptors, type, names) {\n  if (!Array.isArray(names)) {\n    names = [names];\n  }\n\n  var currentInterceptors = _uniqBy(baseInterceptors[type].concat(_get(interceptors, type, [])).filter(function (_ref) {\n    var name = _ref.name;\n    return names.indexOf(name) > -1;\n  }).reverse(), function (_ref2) {\n    var name = _ref2.name;\n    return name;\n  });\n\n  if (currentInterceptors.length === 0) {\n    return function (value) {\n      return value;\n    };\n  }\n\n  return compose.apply(void 0, currentInterceptors.map(function (_ref3) {\n    var exec = _ref3.exec;\n    return exec;\n  }));\n};\n\nvar fieldEditCreator = function fieldEditCreator(_ref) {\n  var formStateRef = _ref.formStateRef,\n      setFormState = _ref.setFormState,\n      initDataRef = _ref.initDataRef,\n      otherProps = _ref.otherProps;\n  return function (_ref2) {\n    var _Object$assign;\n\n    var name = _ref2.name,\n        rule = _ref2.rule,\n        label = _ref2.label,\n        interceptor = _ref2.interceptor,\n        value = _ref2.value,\n        noTrim = _ref2.noTrim,\n        index = _ref2.index,\n        groupName = _ref2.groupName,\n        groupIndex = _ref2.groupIndex,\n        fieldRef = _ref2.fieldRef;\n    var fieldItem = Object.assign({}, formStateRef.current[name]);\n    var fieldItemData = Object.assign({}, fieldItem.data[index], {\n      index: groupIndex,\n      SymbolIndex: index,\n      label: label,\n      noTrim: noTrim,\n      groupName: groupName,\n      fieldRef: fieldRef,\n      interceptor: interceptor\n    });\n\n    if (!fieldItemData.value) {\n      fieldItemData.value = runInterceptors(otherProps.current.interceptors, 'input', interceptor)(value || function () {\n        if (groupName && _last(groupName.split('.')) === name) {\n          return _get(initDataRef.current, groupName + \"[\\\"\" + groupIndex + \"\\\"]\");\n        }\n\n        if (groupName) {\n          return _get(initDataRef.current, groupName + \"[\\\"\" + groupIndex + \"\\\"].\" + name);\n        }\n\n        return _get(initDataRef.current, name);\n      }());\n    }\n\n    fieldItem.data[index] = Object.assign({}, fieldItemData, {\n      rule: rule,\n      index: groupIndex,\n      SymbolIndex: index,\n      noTrim: noTrim,\n      groupName: groupName,\n      fieldRef: fieldRef,\n      interceptor: interceptor\n    });\n    setFormState(Object.assign({}, formStateRef.current, (_Object$assign = {}, _Object$assign[name] = fieldItem, _Object$assign)));\n  };\n};\n\nvar fieldRemoveCreator = function fieldRemoveCreator(_ref) {\n  var formStateRef = _ref.formStateRef,\n      setFormState = _ref.setFormState;\n  return function (_ref2) {\n    var name = _ref2.name,\n        index = _ref2.index;\n    var state = Object.assign({}, formStateRef.current);\n    var fieldItem = Object.assign({}, formStateRef.current[name]);\n\n    if (fieldItem.data) {\n      delete fieldItem.data[index];\n\n      if (Object.getOwnPropertySymbols(fieldItem.data).length === 0) {\n        delete state[name];\n      } else {\n        state[name] = fieldItem;\n      }\n    }\n\n    setFormState(state);\n  };\n}; // A type of promise-like that resolves synchronously and supports only one observer\n\n\nvar _Pact = /*#__PURE__*/function () {\n  function _Pact() {}\n\n  _Pact.prototype.then = function (onFulfilled, onRejected) {\n    var result = new _Pact();\n    var state = this.s;\n\n    if (state) {\n      var callback = state & 1 ? onFulfilled : onRejected;\n\n      if (callback) {\n        try {\n          _settle(result, 1, callback(this.v));\n        } catch (e) {\n          _settle(result, 2, e);\n        }\n\n        return result;\n      } else {\n        return this;\n      }\n    }\n\n    this.o = function (_this) {\n      try {\n        var value = _this.v;\n\n        if (_this.s & 1) {\n          _settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n        } else if (onRejected) {\n          _settle(result, 1, onRejected(value));\n        } else {\n          _settle(result, 2, value);\n        }\n      } catch (e) {\n        _settle(result, 2, e);\n      }\n    };\n\n    return result;\n  };\n\n  return _Pact;\n}(); // Settles a pact synchronously\n\n\nfunction _settle(pact, state, value) {\n  if (!pact.s) {\n    if (value instanceof _Pact) {\n      if (value.s) {\n        if (state & 1) {\n          state = value.s;\n        }\n\n        value = value.v;\n      } else {\n        value.o = _settle.bind(null, pact, state);\n        return;\n      }\n    }\n\n    if (value && value.then) {\n      value.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n      return;\n    }\n\n    pact.s = state;\n    pact.v = value;\n    var observer = pact.o;\n\n    if (observer) {\n      observer(pact);\n    }\n  }\n}\n\nfunction _isSettledPact(thenable) {\n  return thenable instanceof _Pact && thenable.s & 1;\n} // Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\n\n\nfunction _forTo(array, body, check) {\n  var i = -1,\n      pact,\n      reject;\n\n  function _cycle(result) {\n    try {\n      while (++i < array.length && (!check || !check())) {\n        result = body(i);\n\n        if (result && result.then) {\n          if (_isSettledPact(result)) {\n            result = result.v;\n          } else {\n            result.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n            return;\n          }\n        }\n      }\n\n      if (pact) {\n        _settle(pact, 1, result);\n      } else {\n        pact = result;\n      }\n    } catch (e) {\n      _settle(pact || (pact = new _Pact()), 2, e);\n    }\n  }\n\n  _cycle();\n\n  return pact;\n}\n\nvar _iteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\")) : \"@@iterator\"; // Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\n\n\nfunction _forOf(target, body, check) {\n  if (typeof target[_iteratorSymbol] === \"function\") {\n    var _cycle = function _cycle(result) {\n      try {\n        while (!(step = iterator.next()).done && (!check || !check())) {\n          result = body(step.value);\n\n          if (result && result.then) {\n            if (_isSettledPact(result)) {\n              result = result.v;\n            } else {\n              result.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n              return;\n            }\n          }\n        }\n\n        if (pact) {\n          _settle(pact, 1, result);\n        } else {\n          pact = result;\n        }\n      } catch (e) {\n        _settle(pact || (pact = new _Pact()), 2, e);\n      }\n    };\n\n    var iterator = target[_iteratorSymbol](),\n        step,\n        pact,\n        reject;\n\n    _cycle();\n\n    if (iterator.return) {\n      var _fixup = function _fixup(value) {\n        try {\n          if (!step.done) {\n            iterator.return();\n          }\n        } catch (e) {}\n\n        return value;\n      };\n\n      if (pact && pact.then) {\n        return pact.then(_fixup, function (e) {\n          throw _fixup(e);\n        });\n      }\n\n      _fixup();\n    }\n\n    return pact;\n  } // No support for Symbol.iterator\n\n\n  if (!(\"length\" in target)) {\n    throw new TypeError(\"Object is not iterable\");\n  } // Handle live collections properly\n\n\n  var values = [];\n\n  for (var i = 0; i < target.length; i++) {\n    values.push(target[i]);\n  }\n\n  return _forTo(values, function (i) {\n    return body(values[i]);\n  }, check);\n}\n\nvar _asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\")) : \"@@asyncIterator\";\n\nvar ruleValidate = function ruleValidate(_ref) {\n  var filed = _ref.filed,\n      value = _ref.value,\n      formRules = _ref.formRules,\n      getFormData = _ref.getFormData;\n\n  try {\n    var _exit3 = false;\n\n    var _temp5 = function _temp5(_result) {\n      var _exit2 = false;\n      if (_exit3) return _result;\n\n      function _temp2(_result4) {\n        return _exit2 ? _result4 : {\n          result: true,\n          errMsg: ''\n        };\n      }\n\n      if (typeof filed.rule === 'object' && filed.rule instanceof RegExp) {\n        return {\n          result: filed.rule.test(value),\n          errMsg: ''\n        };\n      }\n\n      var _temp = function () {\n        if (typeof filed.rule === 'string') {\n          var rules = filed.rule.split(' ').filter(function (str) {\n            return str.length > 0;\n          });\n          return _forOf(rules, function (currentRule) {\n            var _currentRule$split = currentRule.split('-'),\n                key = _currentRule$split[0],\n                args = _currentRule$split.slice(1);\n\n            var exec = formRules[key.toUpperCase()];\n            return function () {\n              if (typeof exec === 'function') {\n                if (currentRule !== 'REQ') {\n                  var emptyRes = formRules['REQ'].apply(formRules, [value].concat(args, [getFormData]));\n\n                  if (emptyRes.result !== true) {\n                    _exit2 = true;\n                    return {\n                      result: true,\n                      errMsg: ''\n                    };\n                  }\n                }\n\n                return Promise.resolve(exec.apply(void 0, [value].concat(args, [getFormData]))).then(function (res) {\n                  if (res.result !== true) {\n                    _exit2 = true;\n                    return {\n                      result: false,\n                      errMsg: res.errMsg\n                    };\n                  }\n                });\n              } else {\n                console.error(\"\\u6821\\u9A8C\\u89C4\\u5219\" + currentRule + \"\\u4E0D\\u5728\\u5F53\\u524Dform\\u7684rules\\u91CC\\u9762\\uFF0C\\u8BF7\\u786E\\u8BA4\" + filed.name + \"\\u7684\\u6821\\u9A8C\\u89C4\\u5219\" + filed.rule + \"\\u662F\\u5426\\u6B63\\u786E\");\n              }\n            }();\n          }, function () {\n            return _exit2;\n          });\n        }\n      }();\n\n      return _temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp);\n    };\n\n    var _temp6 = function () {\n      if (typeof filed.rule === 'function') {\n        _exit3 = true;\n        return Promise.resolve(filed.rule(value));\n      }\n    }();\n\n    return Promise.resolve(_temp6 && _temp6.then ? _temp6.then(_temp5) : _temp5(_temp6));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nvar createSetFieldInfo = function createSetFieldInfo(_ref) {\n  var formStateRef = _ref.formStateRef;\n  return function (_ref2) {\n    var _Object$assign;\n\n    var name = _ref2.name,\n        index = _ref2.index,\n        key = _ref2.key,\n        value = _ref2.value;\n    var prevState = formStateRef.current;\n    var field = Object.assign({}, prevState[name]);\n    var fieldData = Object.assign({}, field.data);\n    var fieldDataItem = Object.assign({}, fieldData[index]);\n    fieldDataItem[key] = value;\n    fieldData[index] = fieldDataItem;\n    field.data = fieldData;\n    return Object.assign({}, prevState, (_Object$assign = {}, _Object$assign[name] = field, _Object$assign));\n  };\n};\n\nvar getFields = function getFields(data, callback) {\n  var output = {};\n  Object.keys(data).forEach(function (name) {\n    var field = data[name].data;\n    var fieldData = Object.getOwnPropertySymbols(field);\n    fieldData.forEach(function (index) {\n      var item = field[index],\n          groupName = item.groupName;\n\n      if (groupName) {\n        if (!_get(output, groupName)) {\n          _set(output, groupName, []);\n        }\n\n        var targetIndex = item.index;\n\n        if (!_get(output, groupName)[targetIndex]) {\n          _set(output, groupName + \"[\" + targetIndex + \"]\", {});\n        }\n\n        if (_last(groupName.split('.')) === name) {\n          _set(output, groupName + \"[\" + targetIndex + \"]\", callback(item, data[name].field));\n\n          return;\n        }\n\n        _set(output, groupName + \"[\" + targetIndex + \"].\" + name, callback(item, data[name].field));\n\n        return;\n      }\n\n      _set(output, \"\" + name, callback(item, data[name].field));\n    });\n  });\n  return output;\n};\n\nvar computedFormData = function computedFormData(data, interceptors) {\n  return getFields(data, function (item) {\n    if (item.value === void 0) {\n      return item.value;\n    }\n\n    return runInterceptors(interceptors, 'output', item.interceptor)(item.value);\n  });\n};\n\nvar parseFormData = function parseFormData(data, formData, interceptors) {\n  data = Object.assign({}, data);\n  formData = Object.assign({}, formData);\n  Object.keys(data).forEach(function (name) {\n    var field = data[name].data;\n    var fieldData = Object.getOwnPropertySymbols(field);\n    fieldData.forEach(function (index) {\n      var item = Object.assign({}, field[index]),\n          groupName = item.groupName;\n      var targetIndex = item.index;\n\n      var value = function () {\n        if (groupName && _last(groupName.split('.')) === name) {\n          return _get(formData, groupName + \"[\" + targetIndex + \"]\");\n        }\n\n        if (groupName) {\n          return _get(formData, groupName + \"[\" + targetIndex + \"].\" + name);\n        }\n\n        return _get(formData, name);\n      }();\n\n      if (value !== void 0) {\n        item.value = runInterceptors(interceptors, 'input', item.interceptor)(value);\n        item.validate = {\n          status: 0,\n          msg: ''\n        };\n        data[name].data[index] = item;\n      }\n    });\n  });\n  return data;\n};\n\nvar computedIsPass = function computedIsPass(data) {\n  return Object.keys(data).every(function (name) {\n    var field = data[name].data;\n    return Object.getOwnPropertySymbols(field).every(function (index) {\n      var item = field[index];\n      return _get(item, 'validate.status') === 1;\n    });\n  });\n};\n\nvar computedError = function computedError(data) {\n  var output = [];\n  Object.keys(data).forEach(function (name) {\n    var field = data[name].data;\n    Object.getOwnPropertySymbols(field).forEach(function (index) {\n      var item = field[index];\n\n      if (_get(item, 'validate.status') === 2) {\n        var targetIndex = item.index,\n            groupName = item.groupName,\n            fieldRef = item.fieldRef;\n        output.push(Object.assign({}, item.validate, {\n          name: name,\n          groupName: groupName,\n          fieldRef: fieldRef,\n          index: targetIndex\n        }));\n      }\n    });\n  });\n  return output;\n};\n\nvar fieldValidateCreator = function fieldValidateCreator(_ref) {\n  var formStateRef = _ref.formStateRef,\n      setFormState = _ref.setFormState,\n      otherProps = _ref.otherProps,\n      taskQueue = _ref.taskQueue,\n      emitter = _ref.emitter;\n  var setFieldInfo = createSetFieldInfo({\n    formStateRef: formStateRef\n  });\n  return function (_ref2) {\n    var name = _ref2.name,\n        index = _ref2.index;\n    var item = formStateRef.current[name];\n    setFormState(setFieldInfo({\n      name: name,\n      index: index,\n      key: 'validate',\n      value: {\n        status: 3,\n        msg: ''\n      }\n    }));\n\n    var value = _get(item.data[index], 'value'),\n        noTrim = _get(item.data[index], 'noTrim');\n\n    var trimValue = value;\n\n    if (typeof value === 'string' && noTrim !== true) {\n      trimValue = value.trim();\n\n      if (value !== trimValue) {\n        emitter.emit('form-field-data-change', {\n          name: name,\n          value: trimValue,\n          index: index\n        });\n      }\n    }\n\n    taskQueue.append({\n      id: index,\n      runner: function runner() {\n        return ruleValidate({\n          filed: Object.assign({}, item.field, {\n            rule: item.data[index].rule\n          }),\n          value: trimValue,\n          formRules: otherProps.current.rules,\n          getFormData: function getFormData() {\n            return computedFormData(formStateRef.current);\n          }\n        });\n      },\n      complete: function complete(validate) {\n        var validateRes = {\n          status: validate.result === true ? 1 : 2,\n          msg: validate.errMsg\n        };\n        setFormState(setFieldInfo({\n          name: name,\n          index: index,\n          key: 'validate',\n          value: validateRes\n        }));\n        emitter.emit('form-field-validate-complete', {\n          name: name,\n          value: trimValue,\n          index: index,\n          validate: validateRes\n        });\n      }\n    });\n  };\n};\n\nvar fieldDataChangeCreator = function fieldDataChangeCreator(_ref) {\n  var formStateRef = _ref.formStateRef,\n      setFormState = _ref.setFormState;\n  var setFieldInfo = createSetFieldInfo({\n    formStateRef: formStateRef\n  });\n  return function (_ref2) {\n    var name = _ref2.name,\n        value = _ref2.value,\n        index = _ref2.index;\n    setFormState(setFieldInfo({\n      name: name,\n      index: index,\n      key: 'value',\n      value: value\n    }));\n    setFormState(setFieldInfo({\n      name: name,\n      index: index,\n      key: 'validate',\n      value: {\n        status: 0,\n        msg: ''\n      }\n    }));\n  };\n};\n\nvar validateAllFieldsCreator = function validateAllFieldsCreator(_ref) {\n  var formStateRef = _ref.formStateRef,\n      taskQueue = _ref.taskQueue,\n      emitter = _ref.emitter;\n  return function () {\n    Object.keys(formStateRef.current).forEach(function (name) {\n      var field = formStateRef.current[name];\n      Object.getOwnPropertySymbols(field.data).forEach(function (index) {\n        emitter.emit('form-field-validate', {\n          name: name,\n          index: index\n        });\n      });\n    });\n    return Promise.all(taskQueue.queue.map(function (task) {\n      return task.target;\n    }));\n  };\n};\n\nvar dataSetCreator = function dataSetCreator(_ref) {\n  var setFormState = _ref.setFormState,\n      formStateRef = _ref.formStateRef,\n      initDataRef = _ref.initDataRef,\n      otherProps = _ref.otherProps,\n      taskQueue = _ref.taskQueue,\n      emitter = _ref.emitter;\n  var validateAllFields = validateAllFieldsCreator({\n    formStateRef: formStateRef,\n    taskQueue: taskQueue,\n    emitter: emitter\n  });\n  return function (_ref2) {\n    var data = _ref2.data,\n        _ref2$runValidate = _ref2.runValidate,\n        runValidate = _ref2$runValidate === void 0 ? true : _ref2$runValidate;\n    initDataRef.current = data;\n    setFormState(parseFormData(formStateRef.current, data, otherProps.current.interceptors));\n    runValidate && validateAllFields();\n  };\n};\n\nvar dataResetCreator = function dataResetCreator(_ref) {\n  var initDataRef = _ref.initDataRef,\n      setFormState = _ref.setFormState,\n      formStateRef = _ref.formStateRef;\n  return function () {\n    initDataRef.current = {};\n    var data = Object.assign({}, formStateRef.current);\n    Object.keys(data).forEach(function (name) {\n      var fieldData = data[name].data;\n      Object.getOwnPropertySymbols(data[name].data).forEach(function (index) {\n        delete fieldData[index].validate;\n        delete fieldData[index].value;\n      });\n    });\n    setFormState(data);\n  };\n};\n\nvar dataSetFieldCreator = function dataSetFieldCreator(_ref) {\n  var setFormState = _ref.setFormState,\n      formStateRef = _ref.formStateRef;\n  return function (_ref2) {\n    var _Object$assign;\n\n    var name = _ref2.name,\n        value = _ref2.value;\n    var groupName = value.groupName;\n    var groupIndex = value.groupIndex;\n    var data = Object.assign({}, formStateRef.current);\n\n    var fieldData = _get(data[name], 'data');\n\n    if (!groupName) {\n      fieldData = {};\n      Object.getOwnPropertySymbols(fieldData).forEach(function (index) {\n        fieldData[index] = Object.assign({}, fieldData[index], value);\n      });\n    } else {\n      var index = Object.getOwnPropertySymbols(fieldData).find(function (index) {\n        var data = _get(fieldData, \"[\" + index + \"]\");\n\n        return _get(data, 'groupName') === groupName && _get(data, 'groupIndex') === groupIndex;\n      });\n      fieldData[index] = Object.assign({}, fieldData[index], value);\n    }\n\n    setFormState(Object.assign({}, data, (_Object$assign = {}, _Object$assign[name] = fieldData, _Object$assign)));\n  };\n};\n\nvar submitCreator = function submitCreator(_ref) {\n  var formStateRef = _ref.formStateRef,\n      taskQueue = _ref.taskQueue,\n      otherProps = _ref.otherProps,\n      emitter = _ref.emitter;\n  var validateAllFields = validateAllFieldsCreator({\n    formStateRef: formStateRef,\n    taskQueue: taskQueue,\n    emitter: emitter\n  });\n  return function (args) {\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n\n    var _otherProps$current = otherProps.current,\n        onPrevSubmit = _otherProps$current.onPrevSubmit,\n        onError = _otherProps$current.onError,\n        onSubmit = _otherProps$current.onSubmit,\n        interceptors = _otherProps$current.interceptors;\n    validateAllFields().then(function () {\n      try {\n        var _exit3 = false;\n\n        var _temp6 = function _temp6(_result) {\n          var _exit2 = false;\n          if (_exit3) return _result;\n\n          function _temp3(_onPrevSubmit) {\n            function _temp2(_onSubmit) {\n              _onSubmit;\n              emitter.emit('form-submit-success', formData);\n              return true;\n            }\n\n            if (onPrevSubmit && _onPrevSubmit === false) {\n              emitter.emit('form-prev-submit-error');\n              _exit2 = true;\n              return false;\n            }\n\n            return onSubmit ? Promise.resolve(onSubmit.apply(void 0, [formData].concat(args))).then(_temp2) : _temp2(onSubmit);\n          }\n\n          var formData = computedFormData(formState, interceptors);\n          emitter.emit('form-prev-submit');\n          return onPrevSubmit ? Promise.resolve(onPrevSubmit.apply(void 0, [formData].concat(args))).then(_temp3) : _temp3(onPrevSubmit);\n        };\n\n        var formState = formStateRef.current;\n        var isPass = computedIsPass(formState);\n\n        var _temp7 = function () {\n          if (!isPass) {\n            var _temp8 = function _temp8(_onError) {\n              _onError;\n              _exit3 = true;\n              return false;\n            };\n\n            var errors = computedError(formState);\n            emitter.emit('form-submit-error', errors);\n            return onError ? Promise.resolve(onError.apply(void 0, [errors].concat(args))).then(_temp8) : _temp8(onError);\n          }\n        }();\n\n        return Promise.resolve(_temp7 && _temp7.then ? _temp7.then(_temp6) : _temp6(_temp7));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }).then(function (res) {\n      emitter.emit('form-submit-end', res);\n    }, function (e) {\n      console.error(e);\n      emitter.emit('form-error', e);\n    }).then(function () {\n      emitter.emit('form-submit-complete');\n    });\n  };\n};\n\nvar Task = /*#__PURE__*/function () {\n  function Task(_ref) {\n    var _this = this;\n\n    var id = _ref.id,\n        runner = _ref.runner,\n        complete = _ref.complete;\n    this.id = id;\n    this.isCancel = false;\n    this.target = Promise.race([Promise.resolve(runner()), new Promise(function (resolve) {\n      _this.resolve = resolve;\n    })]).then(function (res) {\n      if (_this.isCancel) {\n        return new Promise(function () {});\n      }\n\n      return res;\n    });\n    this.target.then(function () {\n      return Promise.resolve(complete.apply(void 0, arguments));\n    });\n  }\n\n  var _proto = Task.prototype;\n\n  _proto.cancel = function cancel() {\n    if (this.isCancel === true) {\n      return;\n    }\n\n    this.isCancel = true;\n    this.resolve.apply(this, arguments);\n  };\n\n  return Task;\n}();\n\nvar TaskQueue = /*#__PURE__*/function () {\n  function TaskQueue() {\n    this.queue = [];\n  }\n\n  var _proto2 = TaskQueue.prototype;\n\n  _proto2.append = function append(taskConfig) {\n    var _this2 = this;\n\n    var proxyTaskComplete = new Proxy(taskConfig.complete, {\n      apply: function apply(target, thisArg, argumentsList) {\n        var res = target.apply(thisArg, argumentsList);\n\n        _this2.queue.splice(index, 1);\n\n        return res;\n      }\n    });\n    taskConfig.complete = proxyTaskComplete;\n    var task = new Task(taskConfig);\n    var currentTask = this.queue.find(function (_ref2) {\n      var id = _ref2.id;\n      return task.id === id;\n    });\n\n    if (currentTask) {\n      var currentIndex = this.queue.indexOf(currentTask);\n      currentTask.cancel();\n      this.queue.splice(currentIndex, 1);\n    }\n\n    var index = this.queue.push(task);\n  };\n\n  return TaskQueue;\n}();\n\nvar usePropsRef = function usePropsRef(props) {\n  var propsRef = useRef({});\n  Object.keys(props).forEach(function (name) {\n    propsRef.current[name] = props[name];\n  });\n  return propsRef;\n};\n\nvar useFormEvent = function useFormEvent(_ref) {\n  var debug = _ref.debug,\n      interceptors = _ref.interceptors,\n      rules = _ref.rules,\n      formStateRef = _ref.formStateRef,\n      initDataRef = _ref.initDataRef,\n      setFormState = _ref.setFormState,\n      onPrevSubmit = _ref.onPrevSubmit,\n      onError = _ref.onError,\n      onSubmit = _ref.onSubmit;\n  var emitter = useEvent(debug);\n  var otherProps = usePropsRef({\n    onPrevSubmit: onPrevSubmit,\n    onError: onError,\n    onSubmit: onSubmit,\n    rules: rules,\n    interceptors: interceptors\n  });\n  otherProps.current = {\n    onPrevSubmit: onPrevSubmit,\n    onError: onError,\n    onSubmit: onSubmit,\n    rules: rules,\n    interceptors: interceptors\n  };\n  useEffect(function () {\n    var taskQueue = new TaskQueue();\n    emitter.addListener('form-field-add', fieldAddCreator({\n      formStateRef: formStateRef,\n      setFormState: setFormState\n    }));\n    emitter.addListener('form-field-edit', fieldEditCreator({\n      formStateRef: formStateRef,\n      initDataRef: initDataRef,\n      setFormState: setFormState,\n      otherProps: otherProps\n    }));\n    emitter.addListener('form-field-remove', fieldRemoveCreator({\n      formStateRef: formStateRef,\n      setFormState: setFormState\n    }));\n    emitter.addListener('form-field-validate', fieldValidateCreator({\n      formStateRef: formStateRef,\n      setFormState: setFormState,\n      taskQueue: taskQueue,\n      otherProps: otherProps,\n      emitter: emitter\n    }));\n    emitter.addListener('form-field-data-change', fieldDataChangeCreator({\n      formStateRef: formStateRef,\n      setFormState: setFormState\n    }));\n    emitter.addListener('form-data-set', dataSetCreator({\n      setFormState: setFormState,\n      formStateRef: formStateRef,\n      initDataRef: initDataRef,\n      otherProps: otherProps,\n      taskQueue: taskQueue,\n      emitter: emitter\n    }));\n    emitter.addListener('form-data-reset', dataResetCreator({\n      initDataRef: initDataRef,\n      setFormState: setFormState,\n      formStateRef: formStateRef\n    }));\n    emitter.addListener('form-data-set-field', dataSetFieldCreator({\n      setFormState: setFormState,\n      formStateRef: formStateRef\n    }));\n    emitter.addListener('form-submit', submitCreator({\n      formStateRef: formStateRef,\n      taskQueue: taskQueue,\n      otherProps: otherProps,\n      onPrevSubmit: otherProps.current.onPrevSubmit,\n      onError: otherProps.current.onError,\n      onSubmit: otherProps.current.onSubmit,\n      rules: otherProps.current.rules,\n      emitter: emitter\n    }));\n    return function () {\n      emitter.removeAllListeners();\n    };\n  }, [emitter, formStateRef, initDataRef, otherProps, setFormState]);\n  return emitter;\n};\n\nvar useFormState = function useFormState(props) {\n  var _useState = useState({}),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var stateRef = useRef({});\n  var dataRef = useRef({});\n  var propsRef = useRef(props);\n  propsRef.current = props;\n  var formData = useMemo(function () {\n    return computedFormData(state, propsRef.current.interceptors);\n  }, [state]);\n  var fields = useMemo(function () {\n    return getFields(state, function (item, field) {\n      return {\n        field: item,\n        label: field.label,\n        name: field.name,\n        rule: field.rule\n      };\n    });\n  }, [state]);\n  var isPass = useMemo(function () {\n    return computedIsPass(state);\n  }, [state]);\n  var setFormState = useCallback(function (state) {\n    if (typeof state === 'function') {\n      setState(function (oldState) {\n        var newState = state(oldState);\n        stateRef.current = newState;\n        return newState;\n      });\n    } else {\n      stateRef.current = state;\n      setState(state);\n    }\n  }, []);\n  stateRef.current = state;\n  dataRef.current = formData;\n  return {\n    formState: state,\n    formStateRef: stateRef,\n    formData: formData,\n    fields: fields,\n    isPass: isPass,\n    formDataRef: dataRef,\n    setFormState: setFormState\n  };\n};\n\nvar useOpenApi = function useOpenApi(_ref, ref) {\n  var emitter = _ref.emitter,\n      fields = _ref.fields,\n      formState = _ref.formState,\n      formData = _ref.formData,\n      isPass = _ref.isPass;\n  useImperativeHandle(ref, function () {\n    return {\n      emitter: emitter,\n      submit: function submit() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        emitter.emit('form-submit', args);\n      },\n\n      get isPass() {\n        return isPass;\n      },\n\n      get data() {\n        return formData;\n      },\n\n      get fields() {\n        return fields;\n      },\n\n      get formState() {\n        return formState;\n      },\n\n      set data(data) {\n        emitter.emit('form-data-set', {\n          data: data\n        });\n      },\n\n      reset: function reset() {\n        emitter.emit('form-data-reset');\n      },\n      onReady: function onReady(callback) {\n        emitter.addListener('form-mount', function () {\n          callback && callback();\n        });\n      },\n      onDestroy: function onDestroy(callback) {\n        emitter.addListener('form-unmount', function () {\n          callback && callback();\n        });\n      },\n      validateField: function validateField(name, groupName) {\n        var field = formState[name];\n        var index = Object.getOwnPropertySymbols(field.data).find(function (index) {\n          var item = field.data[index];\n          return !groupName || groupName === item.groupName;\n        });\n\n        if (!index) {\n          console.error(\"group[\" + groupName + \"]\\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u5B57\\u6BB5[\" + name + \"]\");\n          return;\n        }\n\n        emitter.emit('form-field-validate', {\n          name: name,\n          index: index\n        });\n      },\n      setFieldValidate: function setFieldValidate(_ref2) {\n        var name = _ref2.name,\n            value = _ref2.value,\n            groupName = _ref2.groupName,\n            groupIndex = _ref2.groupIndex;\n        emitter.emit('form-data-set-field', {\n          name: name,\n          value: {\n            groupName: groupName,\n            groupIndex: groupIndex,\n            validate: value\n          }\n        });\n      }\n    };\n  }, [emitter, fields, formState, isPass, formData]);\n};\n\nvar context$1 = createContext();\nvar Provider$1 = context$1.Provider;\n\nvar useGroupContext = function useGroupContext() {\n  return useContext(context$1);\n};\n\nvar GroupRoot = function GroupRoot(_ref) {\n  var children = _ref.children;\n  var groupId = useMemo(function () {\n    return Symbol(uniqueId(\"group_\"));\n  }, []);\n\n  var _useState = useState({}),\n      groupMap = _useState[0],\n      setGroupMap = _useState[1];\n\n  var _useFormContext = useFormContext(),\n      emitter = _useFormContext.emitter;\n\n  useEffect(function () {\n    var sub1 = emitter.addListener('form-group-add', function (_ref2) {\n      var id = _ref2.id,\n          parentId = _ref2.parentId;\n      setGroupMap(function (oldGroupMap) {\n        var newGroupMap = Object.assign({}, oldGroupMap);\n\n        if (!newGroupMap[parentId]) {\n          newGroupMap[parentId] = [];\n        }\n\n        var newList = newGroupMap[parentId].slice(0);\n        newList.push(id);\n        newGroupMap[parentId] = newList;\n        return newGroupMap;\n      });\n    });\n    var sub2 = emitter.addListener('form-group-remove', function (_ref3) {\n      var id = _ref3.id,\n          parentId = _ref3.parentId;\n      setGroupMap(function (oldGroupMap) {\n        var newGroupMap = Object.assign({}, oldGroupMap);\n        var newList = newGroupMap[parentId].slice(0);\n        var index = newList.indexOf(id);\n        newList.splice(index, 1);\n        newGroupMap[parentId] = newList;\n        return newGroupMap;\n      });\n    });\n    return function () {\n      sub1.remove();\n      sub2.remove();\n    };\n  }, [emitter]);\n  return /*#__PURE__*/React.createElement(Provider$1, {\n    value: {\n      id: groupId,\n      groupMap: groupMap\n    }\n  }, children);\n};\n\nvar Group = function Group(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n\n  var _useFormContext = useFormContext(),\n      formIsMount = _useFormContext.formIsMount,\n      emitter = _useFormContext.emitter;\n\n  var groupId = useMemo(function () {\n    return Symbol(uniqueId(\"group_\"));\n  }, []);\n\n  var _useGroupContext = useGroupContext(),\n      parentId = _useGroupContext.id,\n      parentIndex = _useGroupContext.index,\n      groupMap = _useGroupContext.groupMap,\n      parentName = _useGroupContext.name;\n\n  var index = useMemo(function () {\n    return _get(groupMap, parentId, []).indexOf(groupId);\n  }, [groupId, parentId, groupMap]);\n  var groupName = useMemo(function () {\n    if (index > -1 && parentName) {\n      return parentName + \"[\" + parentIndex + \"].\" + name;\n    }\n\n    return name;\n  }, [parentName, name, index, parentIndex]);\n  useEffect(function () {\n    var isEmit = false;\n\n    if (formIsMount) {\n      isEmit = true;\n      emitter.emit('form-group-add', {\n        id: groupId,\n        parentId: parentId\n      });\n    }\n\n    return function () {\n      isEmit && emitter.emit('form-group-remove', {\n        id: groupId,\n        parentId: parentId\n      });\n    };\n  }, [formIsMount, emitter, groupId, parentId]);\n  return /*#__PURE__*/React.createElement(Provider$1, {\n    value: {\n      id: groupId,\n      name: groupName,\n      groupMap: groupMap,\n      index: index\n    }\n  }, children);\n};\n\nvar useGroup = useGroupContext;\nvar Form = forwardRef(function (props, ref) {\n  var onPrevSubmit = props.onPrevSubmit,\n      rules = props.rules,\n      interceptors = props.interceptors,\n      noFilter = props.noFilter,\n      data = props.data,\n      onError = props.onError,\n      onSubmit = props.onSubmit,\n      debug = props.debug,\n      children = props.children;\n\n  var _useFormState = useFormState(props),\n      formState = _useFormState.formState,\n      formStateRef = _useFormState.formStateRef,\n      formData = _useFormState.formData,\n      fields = _useFormState.fields,\n      isPass = _useFormState.isPass,\n      formDataRef = _useFormState.formDataRef,\n      setFormState = _useFormState.setFormState;\n\n  var _useState = useState(false),\n      formIsMount = _useState[0],\n      setFormIsMount = _useState[1];\n\n  var formRules = Object.assign({}, RULES, rules);\n  var initDataRef = useRef(data);\n  var emitter = useFormEvent({\n    onPrevSubmit: onPrevSubmit,\n    rules: formRules,\n    interceptors: interceptors,\n    noFilter: noFilter,\n    data: data,\n    onError: onError,\n    onSubmit: onSubmit,\n    debug: debug,\n    formState: formState,\n    formStateRef: formStateRef,\n    formData: formData,\n    formDataRef: formDataRef,\n    setFormState: setFormState,\n    initDataRef: initDataRef\n  });\n  useEffect(function () {\n    setFormIsMount(true);\n    initDataRef.current && emitter.emit('form-data-set', {\n      data: initDataRef.current\n    });\n    emitter.emit('form-mount');\n    return function () {\n      emitter.emit('form-unmount');\n    };\n  }, [emitter]);\n  useOpenApi({\n    emitter: emitter,\n    fields: fields,\n    interceptors: interceptors,\n    isPass: isPass,\n    formData: formData,\n    formState: formState\n  }, ref);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      formState: formState,\n      formData: formData,\n      setFormState: setFormState,\n      emitter: emitter,\n      fields: fields,\n      isPass: isPass,\n      formIsMount: formIsMount,\n      initDataRef: initDataRef\n    }\n  }, /*#__PURE__*/React.createElement(GroupRoot, null, children));\n});\nForm.defaultProps = {\n  data: {},\n  debug: false,\n  rules: {},\n  interceptors: {}\n};\n\nvar useFieldInit = function useFieldInit(_ref) {\n  var name = _ref.name,\n      rule = _ref.rule,\n      label = _ref.label,\n      interceptor = _ref.interceptor,\n      noTrim = _ref.noTrim,\n      value = _ref.value,\n      index = _ref.index,\n      groupName = _ref.groupName,\n      groupIndex = _ref.groupIndex;\n  var fieldRef = useRef(null);\n\n  var _useFormContext = useFormContext(),\n      formIsMount = _useFormContext.formIsMount,\n      emitter = _useFormContext.emitter;\n\n  useEffect(function () {\n    var isEmit = false;\n\n    if (formIsMount) {\n      isEmit = true;\n      emitter.emit('form-field-add', {\n        name: name,\n        index: index\n      });\n    }\n\n    return function () {\n      isEmit && emitter.emit('form-field-remove', {\n        name: name,\n        index: index\n      });\n    };\n  }, [formIsMount, emitter, name, index]);\n  useEffect(function () {\n    if (formIsMount && groupIndex !== -1) {\n      emitter.emit('form-field-edit', {\n        name: name,\n        rule: rule,\n        label: label,\n        interceptor: interceptor,\n        noTrim: noTrim,\n        index: index,\n        groupName: groupName,\n        groupIndex: groupIndex,\n        value: value,\n        fieldRef: fieldRef\n      });\n    }\n  }, [formIsMount, emitter, name, rule, label, interceptor, noTrim, index, groupName, groupIndex, value, fieldRef]);\n  return fieldRef;\n};\n\nvar useValidate = function useValidate(_ref) {\n  var name = _ref.name,\n      index = _ref.index,\n      time = _ref.time;\n\n  var _useFormContext = useFormContext(),\n      emitter = _useFormContext.emitter;\n\n  var checkValidate = function checkValidate() {\n    emitter.emit('form-field-validate', {\n      name: name,\n      index: index\n    });\n  };\n\n  var _useDebouncedCallback = useDebouncedCallback(checkValidate, time),\n      debouncedCheckValidate = _useDebouncedCallback.callback,\n      cancel = _useDebouncedCallback.cancel;\n\n  useEffect(function () {\n    var subscription = emitter.addListener('form-data-reset', cancel);\n    return function () {\n      subscription && subscription.remove();\n    };\n  }, [emitter, cancel]);\n  return time ? debouncedCheckValidate : checkValidate;\n};\n\nvar isEvent = function isEvent(event) {\n  return event instanceof window.Event || _get(event, 'nativeEvent') instanceof window.Event || typeof _get(event, 'preventDefault') === 'function';\n};\n\nvar getFieldValue = function getFieldValue(event, value) {\n  if (isEvent(event)) {\n    if (value === undefined) {\n      switch (event.target.type) {\n        case 'checkbox':\n        case 'radio':\n          value = event.target.checked;\n          break;\n\n        default:\n          value = event.target.value;\n      }\n    }\n  } else {\n    value = event;\n  }\n\n  return value;\n};\n\nvar useFieldDataChange = function useFieldDataChange(_ref) {\n  var name = _ref.name,\n      index = _ref.index,\n      onChange = _ref.onChange;\n\n  var _useFormContext = useFormContext(),\n      emitter = _useFormContext.emitter;\n\n  var _useState = useState(false),\n      isValueChanged = _useState[0],\n      setIsValueChanged = _useState[1];\n\n  var handlerChange = function handlerChange() {\n    onChange && onChange.apply(void 0, arguments);\n    setIsValueChanged(true);\n    var value = getFieldValue.apply(void 0, arguments);\n    emitter.emit('form-field-data-change', {\n      name: name,\n      value: value,\n      index: index\n    });\n  };\n\n  return {\n    isValueChanged: isValueChanged,\n    onChange: handlerChange\n  };\n};\n\nvar compileErrMsg = function compileErrMsg(errMsg, label) {\n  return typeof errMsg === 'string' ? errMsg.replace('%s', label) : errMsg(label);\n};\n\nvar _excluded = [\"name\", \"rule\", \"label\", \"interceptor\", \"noTrim\", \"debounce\", \"onChange\", \"value\", \"errMsg\"];\n\nvar useField = function useField(_ref) {\n  var name = _ref.name,\n      rule = _ref.rule,\n      label = _ref.label,\n      interceptor = _ref.interceptor,\n      noTrim = _ref.noTrim,\n      _ref$debounce = _ref.debounce,\n      time = _ref$debounce === void 0 ? 0 : _ref$debounce,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      errMsg = _ref.errMsg,\n      args = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _group = useGroup();\n\n  var groupName = _get(_group, 'name');\n\n  var groupIndex = _get(_group, 'index');\n\n  var _useFormContext = useFormContext(),\n      formState = _useFormContext.formState,\n      formData = _useFormContext.formData;\n\n  var index = useMemo(function () {\n    return Symbol(uniqueId(name + \"_\"));\n  }, [name]);\n\n  var field = _get(formState, \"\" + name);\n\n  var fieldData = _get(field, 'data', {})[index];\n\n  var fieldRef = useFieldInit({\n    name: name,\n    rule: rule,\n    label: label,\n    interceptor: interceptor,\n    noTrim: noTrim,\n    value: value,\n    index: index,\n    groupName: groupName,\n    groupIndex: groupIndex\n  });\n  var validate = useValidate({\n    name: name,\n    index: index,\n    time: time\n  });\n\n  var _useFieldDataChange = useFieldDataChange({\n    name: name,\n    index: index,\n    onChange: onChange\n  }),\n      isValueChanged = _useFieldDataChange.isValueChanged,\n      dataChange = _useFieldDataChange.onChange;\n\n  return _extends({}, args, {\n    name: name,\n    label: label,\n    fieldRef: fieldRef,\n    formData: formData,\n    formState: formState,\n    rule: rule,\n    groupName: groupName,\n    groupIndex: groupIndex,\n    onChange: dataChange,\n    isValueChanged: isValueChanged,\n    value: _get(fieldData, 'value'),\n    triggerValidate: validate,\n    errState: _get(fieldData, 'validate.status', 0),\n    errMsg: compileErrMsg(errMsg || _get(fieldData, 'validate.msg', ''), label)\n  });\n};\n\nvar useEmitter = function useEmitter() {\n  var _useFormContext = useFormContext(),\n      emitter = _useFormContext.emitter;\n\n  console.warn('下一个大版本将会删掉该接口，建议不要使用');\n  return emitter;\n};\n\nvar useReset = function useReset() {\n  var _useFormContext = useFormContext(),\n      emitter = _useFormContext.emitter;\n\n  return {\n    onClick: useCallback(function () {\n      emitter.emit('form-data-reset');\n    }, [emitter])\n  };\n};\n\nvar useSubmit = function useSubmit() {\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useFormContext = useFormContext(),\n      isPass = _useFormContext.isPass,\n      emitter = _useFormContext.emitter;\n\n  useEffect(function () {\n    var target = emitter.addListener('form-submit-complete', function () {\n      setIsLoading(false);\n    });\n    return function () {\n      target && target.remove();\n    };\n  }, [emitter]);\n  return {\n    isLoading: isLoading,\n    isPass: isPass,\n    onClick: useCallback(function () {\n      setIsLoading(true);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      emitter.emit('form-submit', args);\n    }, [emitter, setIsLoading])\n  };\n};\n\nvar useFieldInfo = function useFieldInfo() {\n  var _useFormContext = useFormContext(),\n      fields = _useFormContext.fields;\n\n  console.warn('下一个大版本将会删掉该接口，建议不要使用');\n  return fields;\n};\n\nvar context$2 = createContext({});\nvar Provider$2 = context$2.Provider;\nvar GroupList = forwardRef(function (_ref, ref) {\n  var name = _ref.name,\n      children = _ref.children;\n\n  var _useState = useState([]),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _useFormContext = useFormContext(),\n      emitter = _useFormContext.emitter;\n\n  useEffect(function () {\n    var sub = emitter.addListener('form-data-set', function (_ref2) {\n      var data = _ref2.data;\n      setList(function () {\n        return (Array.isArray(data[name]) ? data[name] : []).map(function (value, index) {\n          return index;\n        });\n      });\n    });\n    return function () {\n      sub.remove();\n    };\n  }, [emitter, name]);\n  var onAdd = useCallback(function () {\n    setList(function (list) {\n      if (list.length === 0) {\n        return [0];\n      }\n\n      var newList = list.slice(0);\n      newList.push(list[list.length - 1] + 1);\n      return newList;\n    });\n  }, []);\n  var onRemove = useCallback(function (key) {\n    setList(function (list) {\n      var index = list.indexOf(key);\n      var newList = list.slice(0);\n      newList.splice(index, 1);\n      return newList;\n    });\n  }, []);\n  useImperativeHandle(ref, function () {\n    return {\n      onAdd: onAdd,\n      onRemove: onRemove\n    };\n  });\n  return /*#__PURE__*/React.createElement(GroupRoot, null, /*#__PURE__*/React.createElement(Provider$2, {\n    value: {\n      onAdd: onAdd,\n      onRemove: onRemove\n    }\n  }, list.map(function (key) {\n    return /*#__PURE__*/React.createElement(Group, {\n      key: key,\n      name: name\n    }, children(key, {\n      onAdd: onAdd,\n      onRemove: onRemove\n    }));\n  })));\n});\n\nGroupList.useAction = function () {\n  return useContext(context$2);\n};\n\nvar util = {\n  isNotEmpty: isNotEmpty,\n  isEmpty: isEmpty,\n  filterEmpty: filterEmpty\n};\nexport default Form;\nexport { Group, GroupList, RULES, interceptors, presetRules as preset, useEmitter, useField, useFieldInfo, useFormContext, useReset, useSubmit, util };","map":{"version":3,"sources":["../src/context.js","../src/empty.js","../src/RULES.js","../src/useEvent.js","../src/useFormEvent/fieldAddCreator.js","../src/interceptors.js","../src/useFormEvent/fieldEditCreator.js","../src/useFormEvent/fieldRemoveCreator.js","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/useFormEvent/ruleValidate.js","../src/useFormEvent/createSetFieldInfo.js","../src/util.js","../src/useFormEvent/fieldValidateCreator.js","../src/useFormEvent/fieldDataChangeCreator.js","../src/useFormEvent/validateAllFieldsCreator.js","../src/useFormEvent/dataSetCreator.js","../src/useFormEvent/dataResetCreator.js","../src/useFormEvent/dataSetFieldCreator.js","../src/useFormEvent/submitCreator.js","../src/useFormEvent/TaskQueue.js","../src/useFormEvent/index.js","../src/Form/useFormState.js","../src/Form/useOpenApi.js","../src/Group/context.js","../src/Group/GroupRoot.js","../src/Group/index.js","../src/Form/index.js","../src/useField/useFieldInit.js","../src/useField/useValidate.js","../src/useField/getFieldValue.js","../src/useField/useFieldDataChange.js","../src/useField/compileErrMsg.js","../src/useField/index.js","../src/useEmitter.js","../src/useReset.js","../src/useSubmit.js","../src/useFieldInfo.js","../src/Group/GroupList.js","../src/index.js"],"names":["context","createContext","Provider","useFormContext","useContext","isNotEmpty","isPlainObject","values","getValues","isArray","value","isNaN","isEmpty","filterEmpty","output","Object","current","RULES","REQ","result","errMsg","TEL","EMAIL","LEN","end","Number","start","presetRules","newRules","EventEmitter","fbemitter","FormEventEmitter","emit","args","useEvent","debugRef","useRef","useMemo","emitter","addListener","removeAllListeners","listeners","once","fieldAddCreator","formStateRef","setFormState","name","fieldItem","interceptors","input","exec","func","baseInterceptors","runInterceptors","Array","names","currentInterceptors","_uniqBy","_get","fieldEditCreator","initDataRef","otherProps","rule","label","interceptor","noTrim","index","groupName","groupIndex","fieldRef","fieldItemData","SymbolIndex","_last","fieldRemoveCreator","state","ruleValidate","filed","formRules","getFormData","rules","str","key","currentRule","emptyRes","res","console","createSetFieldInfo","prevState","field","fieldData","fieldDataItem","getFields","data","item","_set","targetIndex","callback","computedFormData","parseFormData","formData","status","msg","computedIsPass","computedError","fieldValidateCreator","taskQueue","setFieldInfo","trimValue","id","runner","complete","validateRes","validate","fieldDataChangeCreator","validateAllFieldsCreator","task","dataSetCreator","validateAllFields","runValidate","dataResetCreator","dataSetFieldCreator","submitCreator","onPrevSubmit","onError","onSubmit","formState","isPass","errors","Task","Promise","cancel","TaskQueue","append","proxyTaskComplete","taskConfig","apply","target","currentTask","currentIndex","usePropsRef","propsRef","props","useFormEvent","debug","useEffect","useFormState","setState","useState","stateRef","dataRef","fields","useCallback","newState","formDataRef","useOpenApi","useImperativeHandle","submit","reset","onReady","onDestroy","validateField","setFieldValidate","useGroupContext","GroupRoot","children","groupId","Symbol","uniqueId","groupMap","setGroupMap","sub1","parentId","newGroupMap","newList","sub2","Group","formIsMount","parentIndex","parentName","isEmit","useGroup","Form","forwardRef","noFilter","setFormIsMount","useFieldInit","useValidate","time","checkValidate","debouncedCheckValidate","useDebouncedCallback","subscription","isEvent","event","window","getFieldValue","useFieldDataChange","onChange","isValueChanged","setIsValueChanged","handlerChange","compileErrMsg","useField","debounce","_group","dataChange","triggerValidate","errState","useEmitter","useReset","onClick","useSubmit","isLoading","setIsLoading","useFieldInfo","GroupList","list","setList","sub","onAdd","onRemove","util"],"mappings":";;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,aAAa,CAA7B,EAA6B,CAA7B;IAGeC,QAAR,GAA+BF,OAA/B,CAAA,Q;;IACMG,cAAc,GAAG,SAAjBA,cAAiB,GAAA;AAAA,SAAMC,UAAU,CAAhB,OAAgB,CAAhB;AAAA,C;;ACFvB,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,KAAA,EAAS;AACjC,MAAIC,aAAa,CAAjB,KAAiB,CAAjB,EAA0B;AACxB,QAAMC,MAAM,GAAGC,SAAS,CAAxB,KAAwB,CAAxB;AACA,WAAOD,MAAM,CAANA,MAAAA,GAAAA,CAAAA,IAAqB,MAAM,CAAN,IAAA,CAAY,UAAA,IAAA,EAAI;AAAA,aAAI,CAAC,CAAL,IAAA;AAA5C,KAA4B,CAA5B;AAFF,GAAA,MAGO,IAAIE,OAAO,CAAX,KAAW,CAAX,EAAoB;AACzB,WAAOC,KAAK,CAALA,MAAAA,GAAP,CAAA;AADK,GAAA,MAEA,IAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AACpC,WAAO,CAACC,KAAK,CAAb,KAAa,CAAb;AADK,GAAA,MAEA;AACL,WAAO,EAAED,KAAK,KAALA,SAAAA,IAAuBA,KAAK,KAA5BA,IAAAA,IAAyCA,KAAK,KAA9CA,EAAAA,IAAyDA,KAAK,CAALA,MAAAA,KAAlE,CAAO,CAAP;AACD;AAVI,CAAA;;AAaA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAAA,KAAA,EAAK;AAAA,SAAI,CAACP,UAAU,CAAf,KAAe,CAAf;AAArB,CAAA;;AAEA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAgB;AAAA,MAAfH,KAAe,KAAA,KAAA,CAAA,EAAA;AAAfA,IAAAA,KAAe,GAAP,EAARA;AAAe;;AACzC,MAAMI,MAAM,GAAZ,EAAA;AACAC,EAAAA,MAAM,CAANA,IAAAA,CAAAA,KAAAA,EAAAA,OAAAA,CAA2B,UAAA,GAAA,EAAO;AAChC,QAAMC,OAAO,GAAGN,KAAK,CAArB,GAAqB,CAArB;;AACA,QAAIL,UAAU,CAAd,OAAc,CAAd,EAAyB;AACvBS,MAAAA,MAAM,CAANA,GAAM,CAANA,GAAAA,OAAAA;AACD;AAJHC,GAAAA;AAMA,SAAA,MAAA;AARK,CAAA;;ACjBP,IAAME,KAAK,GAAG;AACZC,EAAAA,GAAG,EAAE,SAAA,GAAA,CAAA,KAAA,EAAiB;AACpB,WAAO;AACLC,MAAAA,MAAM,EAAEd,UAAU,CADb,KACa,CADb;AAELe,MAAAA,MAAM,EAAE;AAFH,KAAP;AAFU,GAAA;AAOZC,EAAAA,GAAG,EAAE,SAAA,GAAA,CAAA,KAAA,EAAiB;AACpB,WAAO;AACLF,MAAAA,MAAM,EAAE,eAAA,IAAA,CADH,KACG,CADH;AAELC,MAAAA,MAAM,EAAE;AAFH,KAAP;AARU,GAAA;AAaZE,EAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,KAAA,EAAiB;AACtB,WAAO;AACLH,MAAAA,MAAM,EAAE,8DAAA,IAAA,CADH,KACG,CADH;AAELC,MAAAA,MAAM,EAAE;AAFH,KAAP;AAdU,GAAA;AAmBZG,EAAAA,GAAG,EAAE,SAAA,GAAA,CAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAA6B;AAChCb,IAAAA,KAAK,GAAGA,KAAK,CAAbA,QAAQA,EAARA;;AACA,QAAIc,GAAG,KAAHA,KAAAA,IAAiBd,KAAK,CAALA,MAAAA,KAAiBe,MAAM,CAA5C,GAA4C,CAA5C,EAAmD;AACjD,aAAO;AACLN,QAAAA,MAAM,EADD,KAAA;AAELC,QAAAA,MAAM,EAAA,2CAAaI;AAFd,OAAP;AAID;;AACD,QAAId,KAAK,CAALA,MAAAA,GAAJ,KAAA,EAA0B;AACxB,aAAO;AACLS,QAAAA,MAAM,EADD,KAAA;AAELC,QAAAA,MAAM,EAAA,2CAAaM;AAFd,OAAP;AAID;;AACD,QAAIF,GAAG,IAAId,KAAK,CAALA,MAAAA,GAAX,GAAA,EAA+B;AAC7B,aAAO;AACLS,QAAAA,MAAM,EADD,KAAA;AAELC,QAAAA,MAAM,EAAA,2CAAaI;AAFd,OAAP;AAID;;AACD,WAAO;AAAEL,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD;AAxCW,CAAd;;AA0CA,IACaQ,WAAW,GAAG,SAAdA,WAAc,CAAA,QAAA,EAAmB;AAAA,MAAlBC,QAAkB,KAAA,KAAA,CAAA,EAAA;AAAlBA,IAAAA,QAAkB,GAAP,EAAXA;AAAkB;;AAC5Cb,EAAAA,MAAM,CAANA,MAAAA,CAAAA,KAAAA,EAAAA,QAAAA;AADK,CADP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA,IAAQc,YAAR,GAAyBC,SAAzB,CAAA,YAAA;;IAEMC,gBAAAA,GAAAA,aAAAA,UAAAA,aAAAA,EAAAA;;;AACJ,WAAA,gBAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AACjB,IAAA,KAAA,GAAA,aAAA,CAAA,IAAA,CAAA,IAAA,KAAA,IAAA;AACA,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AAFiB,WAAA,KAAA;AAGlB;;;;SAEDC,I,GAAAA,SAAAA,IAAAA,GAAc;AAAA,QAAA,qBAAA;;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANC,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAANA,MAAAA,IAAM,CAAA,IAAA,CAANA,GAAM,SAAA,CAAA,IAAA,CAANA;AAAM;;AACZ,QAAI,KAAJ,KAAA,EAAgB;AAAA,UAAA,QAAA;;AACd,OAAA,QAAA,GAAA,OAAA,EAAA,GAAA,CAAA,KAAA,CAAA,QAAA,EAAA,CAAA,sBAAA,EAAA,MAAA,CAAA,IAAA,CAAA;AACD;;AACD,KAAA,qBAAA,GAAA,aAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA;AACD,G;;;CAXGF,CAAyBF,YAAzBE,C;;AAcN,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAA,KAAA,EAAS;AACxB,MAAMC,QAAQ,GAAGC,MAAM,CAAvB,KAAuB,CAAvB;AACA,SAAOC,OAAO,CAAC,YAAM;AACnB,QAAMC,OAAO,GAAG,IAAA,gBAAA,CAAqBH,QAAQ,CAA7C,OAAgB,CAAhB;AACA,WAAO;AACLI,MAAAA,WAAW,EAAE,SAAA,WAAA,GAAA;AAAA,eAAaD,OAAO,CAAPA,WAAAA,CAAAA,KAAAA,CAAAA,OAAAA,EAAb,SAAaA,CAAb;AADR,OAAA;AAELN,MAAAA,IAAI,EAAE,SAAA,IAAA,GAAA;AAAA,eAAaM,OAAO,CAAPA,IAAAA,CAAAA,KAAAA,CAAAA,OAAAA,EAAb,SAAaA,CAAb;AAFD,OAAA;AAGLE,MAAAA,kBAAkB,EAAE,SAAA,kBAAA,GAAA;AAAA,eAAaF,OAAO,CAAPA,kBAAAA,CAAAA,KAAAA,CAAAA,OAAAA,EAAb,SAAaA,CAAb;AAHf,OAAA;AAILG,MAAAA,SAAS,EAAE,SAAA,SAAA,GAAA;AAAA,eAAaH,OAAO,CAAPA,SAAAA,CAAAA,KAAAA,CAAAA,OAAAA,EAAb,SAAaA,CAAb;AAJN,OAAA;AAKLI,MAAAA,IAAI,EAAE,SAAA,IAAA,GAAA;AAAA,eAAaJ,OAAO,CAAPA,IAAAA,CAAAA,KAAAA,CAAAA,OAAAA,EAAb,SAAaA,CAAb;AAAA;AALD,KAAP;AAFY,GAAA,EAAd,EAAc,CAAd;AAFF,CAAA;;ACnBA,IAAMK,eAAe,GACnB,SADIA,eACJ,CAAA,IAAA,EAAA;AAAA,MAAGC,YAAH,GAAA,IAAA,CAAA,YAAA;AAAA,MAAiBC,YAAjB,GAAA,IAAA,CAAA,YAAA;AAAA,SACA,UAAA,KAAA,EAAc;AAAA,QAAA,cAAA;;AAAA,QAAXC,IAAW,GAAA,KAAA,CAAXA,IAAW;AACZ,QAAMC,SAAS,GAAGhC,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB6B,YAAY,CAAZA,OAAAA,CAApC,IAAoCA,CAAlB7B,CAAlB;;AACA,QAAI,CAACgC,SAAS,CAAd,KAAA,EAAsB;AACpBA,MAAAA,SAAS,CAATA,KAAAA,GAAkB;AAAED,QAAAA,IAAI,EAAJA;AAAF,OAAlBC;AACAA,MAAAA,SAAS,CAATA,IAAAA,GAAAA,EAAAA;AACD;;AACDF,IAAAA,YAAY,CAAC9B,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB6B,YAAY,CAA9B7B,OAAAA,GAAAA,cAAAA,GAAAA,EAAAA,EAAAA,cAAAA,CAAAA,IAAAA,CAAAA,GAAAA,SAAAA,EAAb8B,cAAa9B,EAAD,CAAZ8B;AAPF,GAAA;AADF,CAAA;;ACIA,IAAMG,YAAY,GAAG;AACnBC,EAAAA,KAAK,EADc,EAAA;AAEnBnC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKAkC,YAAY,CAAZA,KAAAA,CAAAA,GAAAA,GAAyB,UAAA,IAAA,EAAA,IAAA,EAAgB;AACvC,SAAO,YAAY,CAAZ,KAAA,CAAA,IAAA,CAAwB;AAC7BF,IAAAA,IAAI,EADyB,IAAA;AAE7BI,IAAAA,IAAI,EAAEC;AAFuB,GAAxB,CAAP;AADFH,CAAAA;;AAOAA,YAAY,CAAZA,MAAAA,CAAAA,GAAAA,GAA0B,UAAA,IAAA,EAAA,IAAA,EAAgB;AACxC,SAAO,YAAY,CAAZ,MAAA,CAAA,IAAA,CAAyB;AAC9BF,IAAAA,IAAI,EAD0B,IAAA;AAE9BI,IAAAA,IAAI,EAAEC;AAFwB,GAAzB,CAAP;AADFH,CAAAA;;AASA,IAAMI,gBAAgB,GAAtB,YAAA;;AAEO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAA,YAAA,EAAA,IAAA,EAAA,KAAA,EAA+B;AAC5D,MAAI,CAACC,KAAK,CAALA,OAAAA,CAAL,KAAKA,CAAL,EAA2B;AACzBC,IAAAA,KAAK,GAAG,CAARA,KAAQ,CAARA;AACD;;AAED,MAAMC,mBAAmB,GAAGC,OAAO,CACjC,gBAAgB,CAAhB,IAAgB,CAAhB,CAAA,MAAA,CACUC,IAAI,CAAA,YAAA,EAAA,IAAA,EADd,EACc,CADd,EAAA,MAAA,CAEU,UAAA,IAAA,EAAA;AAAA,QAAGZ,IAAH,GAAA,IAAA,CAAA,IAAA;AAAA,WAAcS,KAAK,CAALA,OAAAA,CAAAA,IAAAA,IAAsB,CAApC,CAAA;AAFV,GAAA,EADiC,OACjC,EADiC,EAKjC,UAAA,KAAA,EAAA;AAAA,QAAGT,IAAH,GAAA,KAAA,CAAA,IAAA;AAAA,WAAA,IAAA;AALF,GAAmC,CAAnC;;AAQA,MAAIU,mBAAmB,CAAnBA,MAAAA,KAAJ,CAAA,EAAsC;AACpC,WAAO,UAAA,KAAA,EAAK;AAAA,aAAA,KAAA;AAAZ,KAAA;AACD;;AACD,SAAO,OAAO,CAAP,KAAA,CAAA,KAAA,CAAA,EAAW,mBAAmB,CAAnB,GAAA,CAAwB,UAAA,KAAA,EAAA;AAAA,QAAGN,IAAH,GAAA,KAAA,CAAA,IAAA;AAAA,WAAA,IAAA;AAA1C,GAAkB,CAAX,CAAP;AAhBK,CAAA;;ACvBP,IAAMS,gBAAgB,GACpB,SADIA,gBACJ,CAAA,IAAA,EAAA;AAAA,MAAGf,YAAH,GAAA,IAAA,CAAA,YAAA;AAAA,MAAiBC,YAAjB,GAAA,IAAA,CAAA,YAAA;AAAA,MAA+Be,WAA/B,GAAA,IAAA,CAAA,WAAA;AAAA,MAA4CC,UAA5C,GAAA,IAAA,CAAA,UAAA;AAAA,SACA,UAAA,KAAA,EAA+F;AAAA,QAAA,cAAA;;AAAA,QAA5Ff,IAA4F,GAAA,KAAA,CAA5FA,IAA4F;AAAA,QAAtFgB,IAAsF,GAAA,KAAA,CAAtFA,IAAsF;AAAA,QAAhFC,KAAgF,GAAA,KAAA,CAAhFA,KAAgF;AAAA,QAAzEC,WAAyE,GAAA,KAAA,CAAzEA,WAAyE;AAAA,QAA5DtD,KAA4D,GAAA,KAAA,CAA5DA,KAA4D;AAAA,QAArDuD,MAAqD,GAAA,KAAA,CAArDA,MAAqD;AAAA,QAA7CC,KAA6C,GAAA,KAAA,CAA7CA,KAA6C;AAAA,QAAtCC,SAAsC,GAAA,KAAA,CAAtCA,SAAsC;AAAA,QAA3BC,UAA2B,GAAA,KAAA,CAA3BA,UAA2B;AAAA,QAAfC,QAAe,GAAA,KAAA,CAAfA,QAAe;AAC7F,QAAMtB,SAAS,GAAGhC,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB6B,YAAY,CAAZA,OAAAA,CAApC,IAAoCA,CAAlB7B,CAAlB;AACA,QAAMuD,aAAa,GAAG,MAAM,CAAN,MAAA,CAAA,EAAA,EAAkBvB,SAAS,CAATA,IAAAA,CAAlB,KAAkBA,CAAlB,EAAyC;AAC7DmB,MAAAA,KAAK,EADwD,UAAA;AAE7DK,MAAAA,WAAW,EAFkD,KAAA;AAG7DR,MAAAA,KAAK,EAHwD,KAAA;AAI7DE,MAAAA,MAAM,EAJuD,MAAA;AAK7DE,MAAAA,SAAS,EALoD,SAAA;AAM7DE,MAAAA,QAAQ,EANqD,QAAA;AAO7DL,MAAAA,WAAW,EAAXA;AAP6D,KAAzC,CAAtB;;AAUA,QAAI,CAACM,aAAa,CAAlB,KAAA,EAA0B;AACxBA,MAAAA,aAAa,CAAbA,KAAAA,GAAsB,eAAe,CACnCT,UAAU,CAAVA,OAAAA,CADmC,YAAA,EAAA,OAAA,EAAf,WAAe,CAAf,CAKpBnD,KAAK,IACF,YAAM;AACL,YAAIyD,SAAS,IAAIK,KAAK,CAACL,SAAS,CAATA,KAAAA,CAANK,GAAML,CAAD,CAALK,KAAjB,IAAA,EAAuD;AACrD,iBAAOd,IAAI,CAACE,WAAW,CAAZ,OAAA,EAAyBO,SAAzB,GAAA,KAAyBA,GAAzB,UAAyBA,GAApC,KAAW,CAAX;AACD;;AACD,YAAA,SAAA,EAAe;AACb,iBAAOT,IAAI,CAACE,WAAW,CAAZ,OAAA,EAAyBO,SAAzB,GAAA,KAAyBA,GAAzB,UAAyBA,GAAzB,MAAyBA,GAApC,IAAW,CAAX;AACD;;AACD,eAAOT,IAAI,CAACE,WAAW,CAAZ,OAAA,EAAX,IAAW,CAAX;AAbNU,OAMK,EANiB,CAAtBA;AAgBD;;AAEDvB,IAAAA,SAAS,CAATA,IAAAA,CAAAA,KAAAA,IAAwB,MAAM,CAAN,MAAA,CAAA,EAAA,EAAA,aAAA,EAAiC;AACvDe,MAAAA,IAAI,EADmD,IAAA;AAEvDI,MAAAA,KAAK,EAFkD,UAAA;AAGvDK,MAAAA,WAAW,EAH4C,KAAA;AAIvDN,MAAAA,MAAM,EAJiD,MAAA;AAKvDE,MAAAA,SAAS,EAL8C,SAAA;AAMvDE,MAAAA,QAAQ,EAN+C,QAAA;AAOvDL,MAAAA,WAAW,EAAXA;AAPuD,KAAjC,CAAxBjB;AAUAF,IAAAA,YAAY,CAAC9B,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB6B,YAAY,CAA9B7B,OAAAA,GAAAA,cAAAA,GAAAA,EAAAA,EAAAA,cAAAA,CAAAA,IAAAA,CAAAA,GAAAA,SAAAA,EAAb8B,cAAa9B,EAAD,CAAZ8B;AA1CF,GAAA;AADF,CAAA;;ACJA,IAAM4B,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EAAA;AAAA,MAAG7B,YAAH,GAAA,IAAA,CAAA,YAAA;AAAA,MAAiBC,YAAjB,GAAA,IAAA,CAAA,YAAA;AAAA,SAAoC,UAAA,KAAA,EAAqB;AAAA,QAAlBC,IAAkB,GAAA,KAAA,CAAlBA,IAAkB;AAAA,QAAZoB,KAAY,GAAA,KAAA,CAAZA,KAAY;AAClF,QAAMQ,KAAK,GAAG3D,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB6B,YAAY,CAA5C,OAAc7B,CAAd;AACA,QAAMgC,SAAS,GAAGhC,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB6B,YAAY,CAAZA,OAAAA,CAApC,IAAoCA,CAAlB7B,CAAlB;;AACA,QAAIgC,SAAS,CAAb,IAAA,EAAoB;AAClB,aAAOA,SAAS,CAATA,IAAAA,CAAP,KAAOA,CAAP;;AACA,UAAIhC,MAAM,CAANA,qBAAAA,CAA6BgC,SAAS,CAAtChC,IAAAA,EAAAA,MAAAA,KAAJ,CAAA,EAA+D;AAC7D,eAAO2D,KAAK,CAAZ,IAAY,CAAZ;AADF,OAAA,MAEO;AACLA,QAAAA,KAAK,CAALA,IAAK,CAALA,GAAAA,SAAAA;AACD;AACF;;AACD7B,IAAAA,YAAY,CAAZA,KAAY,CAAZA;AAXyB,GAAA;AAA3B,CAAA,C,CCAA;;;AACO,IAAM,KAAK,GAAA,aAAiB,YAAW;AAC7C,WAAS,KAAT,GAAiB,CAAE;;AACnB,EAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB,GAAuB,UAAS,WAAT,EAAsB,UAAtB,EAAkC;AACxD,QAAM,MAAM,GAAG,IAAI,KAAJ,EAAf;AACA,QAAM,KAAK,GAAG,KAAK,CAAnB;;AACA,QAAI,KAAJ,EAAW;AACV,UAAM,QAAQ,GAAG,KAAK,GAAG,CAAR,GAAY,WAAZ,GAA0B,UAA3C;;AACA,UAAI,QAAJ,EAAc;AACb,YAAI;AACH,UAAA,OAAO,CAAC,MAAD,EAAS,CAAT,EAAY,QAAQ,CAAC,KAAK,CAAN,CAApB,CAAP;AACA,SAFD,CAEE,OAAO,CAAP,EAAU;AACX,UAAA,OAAO,CAAC,MAAD,EAAS,CAAT,EAAY,CAAZ,CAAP;AACA;;AACD,eAAO,MAAP;AACA,OAPD,MAOO;AACN,eAAO,IAAP;AACA;AACD;;AACD,SAAK,CAAL,GAAS,UAAS,KAAT,EAAgB;AACxB,UAAI;AACH,YAAM,KAAK,GAAG,KAAK,CAAC,CAApB;;AACA,YAAI,KAAK,CAAC,CAAN,GAAU,CAAd,EAAiB;AAChB,UAAA,OAAO,CAAC,MAAD,EAAS,CAAT,EAAY,WAAW,GAAG,WAAW,CAAC,KAAD,CAAd,GAAwB,KAA/C,CAAP;AACA,SAFD,MAEO,IAAI,UAAJ,EAAgB;AACtB,UAAA,OAAO,CAAC,MAAD,EAAS,CAAT,EAAY,UAAU,CAAC,KAAD,CAAtB,CAAP;AACA,SAFM,MAEA;AACN,UAAA,OAAO,CAAC,MAAD,EAAS,CAAT,EAAY,KAAZ,CAAP;AACA;AACD,OATD,CASE,OAAO,CAAP,EAAU;AACX,QAAA,OAAO,CAAC,MAAD,EAAS,CAAT,EAAY,CAAZ,CAAP;AACA;AACD,KAbD;;AAcA,WAAO,MAAP;AACF,GA/BC;;AAgCA,SAAO,KAAP;AACA,CAnCiC,EAA3B,C,CAqCP;;;AACO,SAAS,OAAT,CAAiB,IAAjB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC;AAC3C,MAAI,CAAC,IAAI,CAAC,CAAV,EAAa;AACZ,QAAI,KAAK,YAAY,KAArB,EAA4B;AAC3B,UAAI,KAAK,CAAC,CAAV,EAAa;AACZ,YAAI,KAAK,GAAG,CAAZ,EAAe;AACd,UAAA,KAAK,GAAG,KAAK,CAAC,CAAd;AACA;;AACD,QAAA,KAAK,GAAG,KAAK,CAAC,CAAd;AACA,OALD,MAKO;AACN,QAAA,KAAK,CAAC,CAAN,GAAU,OAAO,CAAC,IAAR,CAAa,IAAb,EAAmB,IAAnB,EAAyB,KAAzB,CAAV;AACA;AACA;AACD;;AACD,QAAI,KAAK,IAAI,KAAK,CAAC,IAAnB,EAAyB;AACxB,MAAA,KAAK,CAAC,IAAN,CAAW,OAAO,CAAC,IAAR,CAAa,IAAb,EAAmB,IAAnB,EAAyB,KAAzB,CAAX,EAA4C,OAAO,CAAC,IAAR,CAAa,IAAb,EAAmB,IAAnB,EAAyB,CAAzB,CAA5C;AACA;AACA;;AACD,IAAA,IAAI,CAAC,CAAL,GAAS,KAAT;AACA,IAAA,IAAI,CAAC,CAAL,GAAS,KAAT;AACA,QAAM,QAAQ,GAAG,IAAI,CAAC,CAAtB;;AACA,QAAI,QAAJ,EAAc;AACb,MAAA,QAAQ,CAAC,IAAD,CAAR;AACA;AACD;AACD;;AAEM,SAAS,cAAT,CAAwB,QAAxB,EAAkC;AACxC,SAAO,QAAQ,YAAY,KAApB,IAA6B,QAAQ,CAAC,CAAT,GAAa,CAAjD;AACA,C,CA8CD;;;AACO,SAAS,MAAT,CAAgB,KAAhB,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC;AAC1C,MAAI,CAAC,GAAG,CAAC,CAAT;AAAA,MAAY,IAAZ;AAAA,MAAkB,MAAlB;;AACA,WAAS,MAAT,CAAgB,MAAhB,EAAwB;AACvB,QAAI;AACH,aAAO,EAAE,CAAF,GAAM,KAAK,CAAC,MAAZ,KAAuB,CAAC,KAAD,IAAU,CAAC,KAAK,EAAvC,CAAP,EAAmD;AAClD,QAAA,MAAM,GAAG,IAAI,CAAC,CAAD,CAAb;;AACA,YAAI,MAAM,IAAI,MAAM,CAAC,IAArB,EAA2B;AAC1B,cAAI,cAAc,CAAC,MAAD,CAAlB,EAA4B;AAC3B,YAAA,MAAM,GAAG,MAAM,CAAC,CAAhB;AACA,WAFD,MAEO;AACN,YAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,MAAM,KAAK,MAAM,GAAG,OAAO,CAAC,IAAR,CAAa,IAAb,EAAmB,IAAI,GAAG,IAAI,KAAJ,EAA1B,EAAuC,CAAvC,CAAd,CAA1B;AACA;AACA;AACD;AACD;;AACD,UAAI,IAAJ,EAAU;AACT,QAAA,OAAO,CAAC,IAAD,EAAO,CAAP,EAAU,MAAV,CAAP;AACA,OAFD,MAEO;AACN,QAAA,IAAI,GAAG,MAAP;AACA;AACD,KAjBD,CAiBE,OAAO,CAAP,EAAU;AACX,MAAA,OAAO,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,KAAJ,EAAZ,CAAL,EAA+B,CAA/B,EAAkC,CAAlC,CAAP;AACA;AACD;;AACD,EAAA,MAAM;;AACN,SAAO,IAAP;AACA;;AAwBM,IAAM,eAAe,GAAA,aAAiB,OAAO,MAAP,KAAkB,WAAlB,GAAiC,MAAM,CAAC,QAAP,KAAoB,MAAM,CAAC,QAAP,GAAkB,MAAM,CAAC,iBAAD,CAA5C,CAAjC,GAAqG,YAA3I,C,CAEP;AACA;;;AACO,SAAS,MAAT,CAAgB,MAAhB,EAAwB,IAAxB,EAA8B,KAA9B,EAAqC;AAC3C,MAAI,OAAO,MAAM,CAAC,eAAD,CAAb,KAAmC,UAAvC,EAAmD;AAAA,QAEzC,MAFyC,GAElD,SAAS,MAAT,CAAgB,MAAhB,EAAwB;AACvB,UAAI;AACH,eAAO,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAT,EAAR,EAAyB,IAA1B,KAAmC,CAAC,KAAD,IAAU,CAAC,KAAK,EAAnD,CAAP,EAA+D;AAC9D,UAAA,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAN,CAAb;;AACA,cAAI,MAAM,IAAI,MAAM,CAAC,IAArB,EAA2B;AAC1B,gBAAI,cAAc,CAAC,MAAD,CAAlB,EAA4B;AAC3B,cAAA,MAAM,GAAG,MAAM,CAAC,CAAhB;AACA,aAFD,MAEO;AACN,cAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,MAAM,KAAK,MAAM,GAAG,OAAO,CAAC,IAAR,CAAa,IAAb,EAAmB,IAAI,GAAG,IAAI,KAAJ,EAA1B,EAAuC,CAAvC,CAAd,CAA1B;AACA;AACA;AACD;AACD;;AACD,YAAI,IAAJ,EAAU;AACT,UAAA,OAAO,CAAC,IAAD,EAAO,CAAP,EAAU,MAAV,CAAP;AACA,SAFD,MAEO;AACN,UAAA,IAAI,GAAG,MAAP;AACA;AACD,OAjBD,CAiBE,OAAO,CAAP,EAAU;AACX,QAAA,OAAO,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,KAAJ,EAAZ,CAAL,EAA+B,CAA/B,EAAkC,CAAlC,CAAP;AACA;AACD,KAvBiD;;AAClD,QAAI,QAAQ,GAAG,MAAM,CAAC,eAAD,CAAN,EAAf;AAAA,QAA0C,IAA1C;AAAA,QAAgD,IAAhD;AAAA,QAAsD,MAAtD;;AAuBA,IAAA,MAAM;;AACN,QAAI,QAAQ,CAAC,MAAb,EAAqB;AACpB,UAAI,MAAM,GAAG,SAAT,MAAS,CAAS,KAAT,EAAgB;AAC5B,YAAI;AACH,cAAI,CAAC,IAAI,CAAC,IAAV,EAAgB;AACf,YAAA,QAAQ,CAAC,MAAT;AACA;AACD,SAJD,CAIE,OAAM,CAAN,EAAS,CACV;;AACD,eAAO,KAAP;AACJ,OARG;;AASA,UAAI,IAAI,IAAI,IAAI,CAAC,IAAjB,EAAuB;AACtB,eAAO,IAAI,CAAC,IAAL,CAAU,MAAV,EAAkB,UAAS,CAAT,EAAY;AACpC,gBAAM,MAAM,CAAC,CAAD,CAAZ;AACA,SAFM,CAAP;AAGA;;AACD,MAAA,MAAM;AACN;;AACD,WAAO,IAAP;AACA,GA5C0C,CA6C5C;;;AACC,MAAI,EAAE,YAAY,MAAd,CAAJ,EAA2B;AAC1B,UAAM,IAAI,SAAJ,CAAc,wBAAd,CAAN;AACA,GAhD0C,CAiD5C;;;AACC,MAAI,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACvC,IAAA,MAAM,CAAC,IAAP,CAAY,MAAM,CAAC,CAAD,CAAlB;AACA;;AACD,SAAO,MAAM,CAAC,MAAD,EAAS,UAAS,CAAT,EAAY;AAAE,WAAO,IAAI,CAAC,MAAM,CAAC,CAAD,CAAP,CAAX;AAAyB,GAAhD,EAAkD,KAAlD,CAAb;AACA;;AAEM,IAAM,oBAAoB,GAAA,aAAiB,OAAO,MAAP,KAAkB,WAAlB,GAAiC,MAAM,CAAC,aAAP,KAAyB,MAAM,CAAC,aAAP,GAAuB,MAAM,CAAC,sBAAD,CAAtD,CAAjC,GAAoH,iBAA/J;;ACjOP,IAAM8B,YAAY,GAAA,SAAZA,YAAY,CAAA,IAAA,EAAA;AAAA,MAAYC,KAAZ,GAAA,IAAA,CAAA,KAAA;AAAA,MAAmBlE,KAAnB,GAAA,IAAA,CAAA,KAAA;AAAA,MAA0BmE,SAA1B,GAAA,IAAA,CAAA,SAAA;AAAA,MAAqCC,WAArC,GAAA,IAAA,CAAA,WAAA;;AAAA,MAAuD;AAAA,QAAA,MAAA,GAAA,KAAA;;AAAA,QAAA,MAAA,GAAA,SAAA,MAAA,CAAA,OAAA,EAAA;AAAA,UAAA,MAAA,GAAA,KAAA;AAAA,UAAA,MAAA,EAAA,OAAA,OAAA;;AAAA,eAAA,MAAA,CAAA,QAAA,EAAA;AAAA,eAAA,MAAA,GAAA,QAAA,GAuChE;AACL3D,UAAAA,MAAM,EADD,IAAA;AAELC,UAAAA,MAAM,EAAE;AAFH,SAvCgE;AAAA;;AAIvE,UAAI,OAAOwD,KAAK,CAAZ,IAAA,KAAA,QAAA,IAAkCA,KAAK,CAALA,IAAAA,YAAtC,MAAA,EAAoE;AAClE,eAAO;AACLzD,UAAAA,MAAM,EAAEyD,KAAK,CAALA,IAAAA,CAAAA,IAAAA,CADH,KACGA,CADH;AAELxD,UAAAA,MAAM,EAAE;AAFH,SAAP;AAID;;AATsE,UAAA,KAAA,GAAA,YAAA;AAAA,YAUnE,OAAOwD,KAAK,CAAZ,IAAA,KAVmE,QAAA,EAAA;AAWrE,cAAMG,KAAK,GAAG,KAAK,CAAL,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,MAAA,CAA6B,UAAA,GAAA,EAAG;AAAA,mBAAIC,GAAG,CAAHA,MAAAA,GAAJ,CAAA;AAA9C,WAAc,CAAd;AAXqE,iBAAA,MAAA,CAAA,KAAA,EAAA,UAAA,WAAA,EAYtC;AAC7B,gBAAA,kBAAA,GAAqBE,WAAW,CAAXA,KAAAA,CAArB,GAAqBA,CAArB;AAAA,gBAAKD,GAAL,GAAA,kBAAA,CAAA,CAAA,CAAA;AAAA,gBAAahD,IAAb,GAAA,kBAAA,CAAA,KAAA,CAAA,CAAA,CAAA;;AACA,gBAAMiB,IAAI,GAAG2B,SAAS,CAACI,GAAG,CAA1B,WAAuBA,EAAD,CAAtB;AAF6B,mBAAA,YAAA;AAAA,kBAGzB,OAAA,IAAA,KAHyB,UAAA,EAAA;AAK3B,oBAAIC,WAAW,KAAf,KAAA,EAA2B;AACzB,sBAAMC,QAAQ,GAAGN,SAAS,CAATA,KAAS,CAATA,CAAAA,KAAAA,CAAAA,SAAAA,EAAS,CAAA,KAAA,EAAA,MAAA,CAAA,IAAA,EAAA,CAA1B,WAA0B,CAAA,CAATA,CAAjB;;AACA,sBAAIM,QAAQ,CAARA,MAAAA,KAAJ,IAAA,EAA8B;AAAA,oBAAA,MAAA,GAAA,IAAA;AAAA,2BACrB;AACLhE,sBAAAA,MAAM,EADD,IAAA;AAELC,sBAAAA,MAAM,EAAE;AAFH,qBADqB;AAK7B;AACF;;AAb0B,uBAAA,OAAA,CAAA,OAAA,CAeT8B,IAAI,CAAJA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,KAAAA,EAAAA,MAAAA,CAAAA,IAAAA,EAAAA,CAfS,WAeTA,CAAAA,CAAAA,CAfS,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AAAA,sBAgBvBkC,GAAG,CAAHA,MAAAA,KAhBuB,IAAA,EAAA;AAAA,oBAAA,MAAA,GAAA,IAAA;AAAA,2BAiBlB;AACLjE,sBAAAA,MAAM,EADD,KAAA;AAELC,sBAAAA,MAAM,EAAEgE,GAAG,CAAChE;AAFP,qBAjBkB;AAAA;AAAA,iBAAA,CAAA;AAAA,eAAA,MAAA;AAuB3BiE,gBAAAA,OAAO,CAAPA,KAAAA,CAAAA,6BAAAA,WAAAA,GAAAA,6EAAAA,GAAuDT,KAAK,CAA5DS,IAAAA,GAAAA,gCAAAA,GAAyET,KAAK,CAA9ES,IAAAA,GAAAA,0BAAAA;AAvB2B;AAAA,aAAA,EAAA;AAZsC,WAAA,EAAA,YAAA;AAAA,mBAAA,MAAA;AAAA,WAAA,CAAA;AAAA;AAAA,OAAA,EAAA;;AAAA,aAAA,KAAA,IAAA,KAAA,CAAA,IAAA,GAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA,KAAA,CAAA;AAAA,KAAA;;AAAA,QAAA,MAAA,GAAA,YAAA;AAAA,UACnE,OAAOT,KAAK,CAAZ,IAAA,KADmE,UAAA,EAAA;AAAA,QAAA,MAAA,GAAA,IAAA;AAAA,eAAA,OAAA,CAAA,OAAA,CAExDA,KAAK,CAALA,IAAAA,CAFwD,KAExDA,CAFwD,CAAA;AAAA;AAAA,KAAA,EAAA;;AAAA,WAAA,OAAA,CAAA,OAAA,CAAA,MAAA,IAAA,MAAA,CAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA;AAAvD,GAAA,CAAA,OAAA,CAAA,EAAA;AAAA,WAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AAAA;AAAlB,CAAA;;ACAA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EAAA;AAAA,MAAG1C,YAAH,GAAA,IAAA,CAAA,YAAA;AAAA,SAAsB,UAAA,KAAA,EAAiC;AAAA,QAAA,cAAA;;AAAA,QAA9BE,IAA8B,GAAA,KAAA,CAA9BA,IAA8B;AAAA,QAAxBoB,KAAwB,GAAA,KAAA,CAAxBA,KAAwB;AAAA,QAAjBe,GAAiB,GAAA,KAAA,CAAjBA,GAAiB;AAAA,QAAZvE,KAAY,GAAA,KAAA,CAAZA,KAAY;AAChF,QAAM6E,SAAS,GAAG3C,YAAY,CAA9B,OAAA;AACA,QAAM4C,KAAK,GAAGzE,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkBwE,SAAS,CAAzC,IAAyC,CAA3BxE,CAAd;AACA,QAAM0E,SAAS,GAAG1E,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkByE,KAAK,CAAzC,IAAkBzE,CAAlB;AACA,QAAM2E,aAAa,GAAG3E,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB0E,SAAS,CAAjD,KAAiD,CAA3B1E,CAAtB;AACA2E,IAAAA,aAAa,CAAbA,GAAa,CAAbA,GAAAA,KAAAA;AACAD,IAAAA,SAAS,CAATA,KAAS,CAATA,GAAAA,aAAAA;AACAD,IAAAA,KAAK,CAALA,IAAAA,GAAAA,SAAAA;AACA,WAAOzE,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAAA,SAAAA,GAAAA,cAAAA,GAAAA,EAAAA,EAAAA,cAAAA,CAAAA,IAAAA,CAAAA,GAAAA,KAAAA,EAAP,cAAOA,EAAP;AARyB,GAAA;AAA3B,CAAA;;ACKO,IAAM4E,SAAS,GAAG,SAAZA,SAAY,CAAA,IAAA,EAAA,QAAA,EAAoB;AAC3C,MAAM7E,MAAM,GAAZ,EAAA;AACAC,EAAAA,MAAM,CAANA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA,CAA0B,UAAA,IAAA,EAAQ;AAChC,QAAMyE,KAAK,GAAGI,IAAI,CAAJA,IAAI,CAAJA,CAAd,IAAA;AACA,QAAMH,SAAS,GAAG1E,MAAM,CAANA,qBAAAA,CAAlB,KAAkBA,CAAlB;AACA0E,IAAAA,SAAS,CAATA,OAAAA,CAAkB,UAAA,KAAA,EAAS;AACzB,UAAMI,IAAI,GAAGL,KAAK,CAAlB,KAAkB,CAAlB;AAAA,UACErB,SAAS,GAAG0B,IAAI,CADlB,SAAA;;AAEA,UAAA,SAAA,EAAe;AACb,YAAI,CAACnC,IAAI,CAAA,MAAA,EAAT,SAAS,CAAT,EAA8B;AAC5BoC,UAAAA,IAAI,CAAA,MAAA,EAAA,SAAA,EAAJA,EAAI,CAAJA;AACD;;AACD,YAAMC,WAAW,GAAGF,IAAI,CAAxB,KAAA;;AACA,YAAI,CAACnC,IAAI,CAAA,MAAA,EAAJA,SAAI,CAAJA,CAAL,WAAKA,CAAL,EAA2C;AACzCoC,UAAAA,IAAI,CAAA,MAAA,EAAY3B,SAAZ,GAAA,GAAYA,GAAZ,WAAYA,GAAZ,GAAA,EAAJ2B,EAAI,CAAJA;AACD;;AACD,YAAItB,KAAK,CAACL,SAAS,CAATA,KAAAA,CAANK,GAAML,CAAD,CAALK,KAAJ,IAAA,EAA0C;AACxCsB,UAAAA,IAAI,CAAA,MAAA,EAAY3B,SAAZ,GAAA,GAAYA,GAAZ,WAAYA,GAAZ,GAAA,EAAyC6B,QAAQ,CAAA,IAAA,EAAOJ,IAAI,CAAJA,IAAI,CAAJA,CAA5DE,KAAqD,CAAjD,CAAJA;;AACA;AACD;;AAEDA,QAAAA,IAAI,CAAA,MAAA,EAAY3B,SAAZ,GAAA,GAAYA,GAAZ,WAAYA,GAAZ,IAAYA,GAAZ,IAAA,EAAiD6B,QAAQ,CAAA,IAAA,EAAOJ,IAAI,CAAJA,IAAI,CAAJA,CAApEE,KAA6D,CAAzD,CAAJA;;AACA;AACD;;AAEDA,MAAAA,IAAI,CAAA,MAAA,EAAA,KAAA,IAAA,EAAoBE,QAAQ,CAAA,IAAA,EAAOJ,IAAI,CAAJA,IAAI,CAAJA,CAAvCE,KAAgC,CAA5B,CAAJA;AApBFL,KAAAA;AAHF1E,GAAAA;AA2BA,SAAA,MAAA;AA7BK,CAAA;;AAgCA,IAAMkF,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,IAAA,EAAA,YAAA,EAAwB;AACtD,SAAON,SAAS,CAAA,IAAA,EAAO,UAAA,IAAA,EAAQ;AAC7B,QAAIE,IAAI,CAAJA,KAAAA,KAAe,KAAnB,CAAA,EAA2B;AACzB,aAAOA,IAAI,CAAX,KAAA;AACD;;AACD,WAAOxC,eAAe,CAAA,YAAA,EAAA,QAAA,EAAyBwC,IAAI,CAA5CxC,WAAe,CAAfA,CAA0DwC,IAAI,CAArE,KAAOxC,CAAP;AAJF,GAAgB,CAAhB;AADK,CAAA;;AASA,IAAM6C,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAA,QAAA,EAAA,YAAA,EAAkC;AAC7DN,EAAAA,IAAI,GAAG7E,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAP6E,IAAO7E,CAAP6E;AACAO,EAAAA,QAAQ,GAAGpF,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAXoF,QAAWpF,CAAXoF;AACApF,EAAAA,MAAM,CAANA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA,CAA0B,UAAA,IAAA,EAAQ;AAChC,QAAMyE,KAAK,GAAGI,IAAI,CAAJA,IAAI,CAAJA,CAAd,IAAA;AACA,QAAMH,SAAS,GAAG1E,MAAM,CAANA,qBAAAA,CAAlB,KAAkBA,CAAlB;AAEA0E,IAAAA,SAAS,CAATA,OAAAA,CAAkB,UAAA,KAAA,EAAS;AACzB,UAAMI,IAAI,GAAG9E,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkByE,KAAK,CAApC,KAAoC,CAAvBzE,CAAb;AAAA,UACEoD,SAAS,GAAG0B,IAAI,CADlB,SAAA;AAGA,UAAME,WAAW,GAAGF,IAAI,CAAxB,KAAA;;AACA,UAAMnF,KAAK,GAAI,YAAM;AACnB,YAAIyD,SAAS,IAAIK,KAAK,CAACL,SAAS,CAATA,KAAAA,CAANK,GAAML,CAAD,CAALK,KAAjB,IAAA,EAAuD;AACrD,iBAAOd,IAAI,CAAA,QAAA,EAAcS,SAAd,GAAA,GAAcA,GAAd,WAAcA,GAAzB,GAAW,CAAX;AACD;;AACD,YAAA,SAAA,EAAe;AACb,iBAAOT,IAAI,CAAA,QAAA,EAAcS,SAAd,GAAA,GAAcA,GAAd,WAAcA,GAAd,IAAcA,GAAzB,IAAW,CAAX;AACD;;AACD,eAAOT,IAAI,CAAA,QAAA,EAAX,IAAW,CAAX;AAPF,OAAe,EAAf;;AAUA,UAAIhD,KAAK,KAAK,KAAd,CAAA,EAAsB;AACpBmF,QAAAA,IAAI,CAAJA,KAAAA,GAAaxC,eAAe,CAAA,YAAA,EAAA,OAAA,EAAwBwC,IAAI,CAA3CxC,WAAe,CAAfA,CAAbwC,KAAaxC,CAAbwC;AACAA,QAAAA,IAAI,CAAJA,QAAAA,GAAgB;AACdO,UAAAA,MAAM,EADQ,CAAA;AAEdC,UAAAA,GAAG,EAAE;AAFS,SAAhBR;AAIAD,QAAAA,IAAI,CAAJA,IAAI,CAAJA,CAAAA,IAAAA,CAAAA,KAAAA,IAAAA,IAAAA;AACD;AAtBHH,KAAAA;AAJF1E,GAAAA;AA6BA,SAAA,IAAA;AAhCK,CAAA;;AAmCA,IAAMuF,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAAQ;AACpC,SAAO,MAAM,CAAN,IAAA,CAAA,IAAA,EAAA,KAAA,CAAwB,UAAA,IAAA,EAAQ;AACrC,QAAMd,KAAK,GAAGI,IAAI,CAAJA,IAAI,CAAJA,CAAd,IAAA;AACA,WAAO,MAAM,CAAN,qBAAA,CAAA,KAAA,EAAA,KAAA,CAA0C,UAAA,KAAA,EAAS;AACxD,UAAMC,IAAI,GAAGL,KAAK,CAAlB,KAAkB,CAAlB;AACA,aAAO9B,IAAI,CAAA,IAAA,EAAJA,iBAAI,CAAJA,KAAP,CAAA;AAFF,KAAO,CAAP;AAFF,GAAO,CAAP;AADK,CAAA;;AAUA,IAAM6C,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAQ;AACnC,MAAMzF,MAAM,GAAZ,EAAA;AACAC,EAAAA,MAAM,CAANA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA,CAA0B,UAAA,IAAA,EAAQ;AAChC,QAAMyE,KAAK,GAAGI,IAAI,CAAJA,IAAI,CAAJA,CAAd,IAAA;AACA7E,IAAAA,MAAM,CAANA,qBAAAA,CAAAA,KAAAA,EAAAA,OAAAA,CAA4C,UAAA,KAAA,EAAS;AACnD,UAAM8E,IAAI,GAAGL,KAAK,CAAlB,KAAkB,CAAlB;;AACA,UAAI9B,IAAI,CAAA,IAAA,EAAJA,iBAAI,CAAJA,KAAJ,CAAA,EAAyC;AACvC,YAAMqC,WAAW,GAAGF,IAAI,CAAxB,KAAA;AAAA,YACE1B,SAAS,GAAG0B,IAAI,CADlB,SAAA;AAAA,YAEExB,QAAQ,GAAGwB,IAAI,CAFjB,QAAA;AAGA/E,QAAAA,MAAM,CAANA,IAAAA,CAAY,MAAM,CAAN,MAAA,CAAA,EAAA,EAAkB+E,IAAI,CAAtB,QAAA,EAAiC;AAAE/C,UAAAA,IAAI,EAAN,IAAA;AAAQqB,UAAAA,SAAS,EAAjB,SAAA;AAAmBE,UAAAA,QAAQ,EAA3B,QAAA;AAA6BH,UAAAA,KAAK,EAAE6B;AAApC,SAAjC,CAAZjF;AACD;AAPHC,KAAAA;AAFFA,GAAAA;AAYA,SAAA,MAAA;AAdK,CAAA;;ACtFP,IAAMyF,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,IAAA,EAAoE;AAAA,MAAjE5D,YAAiE,GAAA,IAAA,CAAjEA,YAAiE;AAAA,MAAnDC,YAAmD,GAAA,IAAA,CAAnDA,YAAmD;AAAA,MAArCgB,UAAqC,GAAA,IAAA,CAArCA,UAAqC;AAAA,MAAzB4C,SAAyB,GAAA,IAAA,CAAzBA,SAAyB;AAAA,MAAdnE,OAAc,GAAA,IAAA,CAAdA,OAAc;AAC/F,MAAMoE,YAAY,GAAGpB,kBAAkB,CAAC;AAAE1C,IAAAA,YAAY,EAAZA;AAAF,GAAD,CAAvC;AACA,SAAO,UAAA,KAAA,EAAqB;AAAA,QAAlBE,IAAkB,GAAA,KAAA,CAAlBA,IAAkB;AAAA,QAAZoB,KAAY,GAAA,KAAA,CAAZA,KAAY;AAC1B,QAAM2B,IAAI,GAAGjD,YAAY,CAAZA,OAAAA,CAAb,IAAaA,CAAb;AAEAC,IAAAA,YAAY,CACV6D,YAAY,CAAC;AACX5D,MAAAA,IAAI,EADO,IAAA;AAEXoB,MAAAA,KAAK,EAFM,KAAA;AAGXe,MAAAA,GAAG,EAHQ,UAAA;AAIXvE,MAAAA,KAAK,EAAE;AACL0F,QAAAA,MAAM,EADD,CAAA;AAELC,QAAAA,GAAG,EAAE;AAFA;AAJI,KAAD,CADF,CAAZxD;;AAYA,QAAMnC,KAAK,GAAGgD,IAAI,CAACmC,IAAI,CAAJA,IAAAA,CAAD,KAACA,CAAD,EAAlB,OAAkB,CAAlB;AAAA,QACE5B,MAAM,GAAGP,IAAI,CAACmC,IAAI,CAAJA,IAAAA,CAAD,KAACA,CAAD,EADf,QACe,CADf;;AAEA,QAAIc,SAAS,GAAb,KAAA;;AACA,QAAI,OAAA,KAAA,KAAA,QAAA,IAA6B1C,MAAM,KAAvC,IAAA,EAAkD;AAChD0C,MAAAA,SAAS,GAAGjG,KAAK,CAAjBiG,IAAYjG,EAAZiG;;AACA,UAAIjG,KAAK,KAAT,SAAA,EAAyB;AACvB4B,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,wBAAAA,EAAuC;AAAEQ,UAAAA,IAAI,EAAN,IAAA;AAAQpC,UAAAA,KAAK,EAAb,SAAA;AAA0BwD,UAAAA,KAAK,EAALA;AAA1B,SAAvC5B;AACD;AACF;;AAEDmE,IAAAA,SAAS,CAATA,MAAAA,CAAiB;AACfG,MAAAA,EAAE,EADa,KAAA;AAEfC,MAAAA,MAAM,EAAE,SAAA,MAAA,GAAM;AACZ,eAAOlC,YAAY,CAAC;AAClBC,UAAAA,KAAK,EAAE,MAAM,CAAN,MAAA,CAAA,EAAA,EAAkBiB,IAAI,CAAtB,KAAA,EAA8B;AAAE/B,YAAAA,IAAI,EAAE+B,IAAI,CAAJA,IAAAA,CAAAA,KAAAA,EAAiB/B;AAAzB,WAA9B,CADW;AAElBpD,UAAAA,KAAK,EAFa,SAAA;AAGlBmE,UAAAA,SAAS,EAAEhB,UAAU,CAAVA,OAAAA,CAHO,KAAA;AAIlBiB,UAAAA,WAAW,EAAE,SAAA,WAAA,GAAM;AACjB,mBAAOmB,gBAAgB,CAACrD,YAAY,CAApC,OAAuB,CAAvB;AACD;AANiB,SAAD,CAAnB;AAHa,OAAA;AAYfkE,MAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,QAAA,EAAY;AACpB,YAAMC,WAAW,GAAG;AAClBX,UAAAA,MAAM,EAAEY,QAAQ,CAARA,MAAAA,KAAAA,IAAAA,GAAAA,CAAAA,GADU,CAAA;AAElBX,UAAAA,GAAG,EAAEW,QAAQ,CAAC5F;AAFI,SAApB;AAIAyB,QAAAA,YAAY,CACV6D,YAAY,CAAC;AACX5D,UAAAA,IAAI,EADO,IAAA;AAEXoB,UAAAA,KAAK,EAFM,KAAA;AAGXe,UAAAA,GAAG,EAHQ,UAAA;AAIXvE,UAAAA,KAAK,EAAEqG;AAJI,SAAD,CADF,CAAZlE;AAQAP,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,8BAAAA,EAA6C;AAC3CQ,UAAAA,IAAI,EADuC,IAAA;AAE3CpC,UAAAA,KAAK,EAFsC,SAAA;AAG3CwD,UAAAA,KAAK,EAHsC,KAAA;AAI3C8C,UAAAA,QAAQ,EAAED;AAJiC,SAA7CzE;AAMD;AA/Bc,KAAjBmE;AAzBF,GAAA;AAFF,CAAA;;ACHA,IAAMQ,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAA,IAAA,EAAoC;AAAA,MAAjCrE,YAAiC,GAAA,IAAA,CAAjCA,YAAiC;AAAA,MAAnBC,YAAmB,GAAA,IAAA,CAAnBA,YAAmB;AACjE,MAAM6D,YAAY,GAAGpB,kBAAkB,CAAC;AAAE1C,IAAAA,YAAY,EAAZA;AAAF,GAAD,CAAvC;AACA,SAAO,UAAA,KAAA,EAA4B;AAAA,QAAzBE,IAAyB,GAAA,KAAA,CAAzBA,IAAyB;AAAA,QAAnBpC,KAAmB,GAAA,KAAA,CAAnBA,KAAmB;AAAA,QAAZwD,KAAY,GAAA,KAAA,CAAZA,KAAY;AACjCrB,IAAAA,YAAY,CACV6D,YAAY,CAAC;AACX5D,MAAAA,IAAI,EADO,IAAA;AAEXoB,MAAAA,KAAK,EAFM,KAAA;AAGXe,MAAAA,GAAG,EAHQ,OAAA;AAIXvE,MAAAA,KAAK,EAAEA;AAJI,KAAD,CADF,CAAZmC;AAQAA,IAAAA,YAAY,CACV6D,YAAY,CAAC;AACX5D,MAAAA,IAAI,EADO,IAAA;AAEXoB,MAAAA,KAAK,EAFM,KAAA;AAGXe,MAAAA,GAAG,EAHQ,UAAA;AAIXvE,MAAAA,KAAK,EAAE;AACL0F,QAAAA,MAAM,EADD,CAAA;AAELC,QAAAA,GAAG,EAAE;AAFA;AAJI,KAAD,CADF,CAAZxD;AATF,GAAA;AAFF,CAAA;;ACFA,IAAMqE,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAA,IAAA,EAAA;AAAA,MAAGtE,YAAH,GAAA,IAAA,CAAA,YAAA;AAAA,MAAiB6D,SAAjB,GAAA,IAAA,CAAA,SAAA;AAAA,MAA4BnE,OAA5B,GAAA,IAAA,CAAA,OAAA;AAAA,SAA0C,YAAM;AAC/EvB,IAAAA,MAAM,CAANA,IAAAA,CAAY6B,YAAY,CAAxB7B,OAAAA,EAAAA,OAAAA,CAA0C,UAAA,IAAA,EAAQ;AAChD,UAAMyE,KAAK,GAAG5C,YAAY,CAAZA,OAAAA,CAAd,IAAcA,CAAd;AACA7B,MAAAA,MAAM,CAANA,qBAAAA,CAA6ByE,KAAK,CAAlCzE,IAAAA,EAAAA,OAAAA,CAAiD,UAAA,KAAA,EAAS;AACxDuB,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,qBAAAA,EAAoC;AAAEQ,UAAAA,IAAI,EAAN,IAAA;AAAQoB,UAAAA,KAAK,EAALA;AAAR,SAApC5B;AADFvB,OAAAA;AAFFA,KAAAA;AAMA,WAAO,OAAO,CAAP,GAAA,CAAY,SAAS,CAAT,KAAA,CAAA,GAAA,CAAoB,UAAA,IAAA,EAAI;AAAA,aAAIoG,IAAI,CAAR,MAAA;AAA3C,KAAmB,CAAZ,CAAP;AAP+B,GAAA;AAAjC,CAAA;;ACGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAAiF;AAAA,MAA9EvE,YAA8E,GAAA,IAAA,CAA9EA,YAA8E;AAAA,MAAhED,YAAgE,GAAA,IAAA,CAAhEA,YAAgE;AAAA,MAAlDgB,WAAkD,GAAA,IAAA,CAAlDA,WAAkD;AAAA,MAArCC,UAAqC,GAAA,IAAA,CAArCA,UAAqC;AAAA,MAAzB4C,SAAyB,GAAA,IAAA,CAAzBA,SAAyB;AAAA,MAAdnE,OAAc,GAAA,IAAA,CAAdA,OAAc;AACtG,MAAM+E,iBAAiB,GAAGH,wBAAwB,CAAC;AAAEtE,IAAAA,YAAY,EAAd,YAAA;AAAgB6D,IAAAA,SAAS,EAAzB,SAAA;AAA2BnE,IAAAA,OAAO,EAAPA;AAA3B,GAAD,CAAlD;AACA,SAAO,UAAA,KAAA,EAAkC;AAAA,QAA/BsD,IAA+B,GAAA,KAAA,CAA/BA,IAA+B;AAAA,QAAA,iBAAA,GAAA,KAAA,CAAzB0B,WAAyB;AAAA,QAAzBA,WAAyB,GAAA,iBAAA,KAAA,KAAA,CAAA,GAAX,IAAW,GAAA,iBAAA;AACvC1D,IAAAA,WAAW,CAAXA,OAAAA,GAAAA,IAAAA;AACAf,IAAAA,YAAY,CAACqD,aAAa,CAACtD,YAAY,CAAb,OAAA,EAAA,IAAA,EAA6BiB,UAAU,CAAVA,OAAAA,CAAvDhB,YAA0B,CAAd,CAAZA;AACAyE,IAAAA,WAAW,IAAID,iBAAfC,EAAAA;AAHF,GAAA;AAFF,CAAA;;ACHA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,IAAA,EAAA;AAAA,MAAG3D,WAAH,GAAA,IAAA,CAAA,WAAA;AAAA,MAAgBf,YAAhB,GAAA,IAAA,CAAA,YAAA;AAAA,MAA8BD,YAA9B,GAAA,IAAA,CAAA,YAAA;AAAA,SAAiD,YAAM;AAC9EgB,IAAAA,WAAW,CAAXA,OAAAA,GAAAA,EAAAA;AACA,QAAMgC,IAAI,GAAG7E,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB6B,YAAY,CAA3C,OAAa7B,CAAb;AACAA,IAAAA,MAAM,CAANA,IAAAA,CAAAA,IAAAA,EAAAA,OAAAA,CAA0B,UAAA,IAAA,EAAQ;AAChC,UAAM0E,SAAS,GAAGG,IAAI,CAAJA,IAAI,CAAJA,CAAlB,IAAA;AACA7E,MAAAA,MAAM,CAANA,qBAAAA,CAA6B6E,IAAI,CAAJA,IAAI,CAAJA,CAA7B7E,IAAAA,EAAAA,OAAAA,CAAsD,UAAA,KAAA,EAAS;AAC7D,eAAO0E,SAAS,CAATA,KAAS,CAATA,CAAP,QAAA;AACA,eAAOA,SAAS,CAATA,KAAS,CAATA,CAAP,KAAA;AAFF1E,OAAAA;AAFFA,KAAAA;AAOA8B,IAAAA,YAAY,CAAZA,IAAY,CAAZA;AAVuB,GAAA;AAAzB,CAAA;;ACEA,IAAM2E,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,IAAA,EAAA;AAAA,MAAG3E,YAAH,GAAA,IAAA,CAAA,YAAA;AAAA,MAAiBD,YAAjB,GAAA,IAAA,CAAA,YAAA;AAAA,SAAoC,UAAA,KAAA,EAAqB;AAAA,QAAA,cAAA;;AAAA,QAAlBE,IAAkB,GAAA,KAAA,CAAlBA,IAAkB;AAAA,QAAZpC,KAAY,GAAA,KAAA,CAAZA,KAAY;AACnF,QAAMyD,SAAS,GAAGzD,KAAK,CAAvB,SAAA;AACA,QAAM0D,UAAU,GAAG1D,KAAK,CAAxB,UAAA;AACA,QAAMkF,IAAI,GAAG7E,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB6B,YAAY,CAA3C,OAAa7B,CAAb;;AACA,QAAI0E,SAAS,GAAG/B,IAAI,CAACkC,IAAI,CAAL,IAAK,CAAL,EAApB,MAAoB,CAApB;;AACA,QAAI,CAAJ,SAAA,EAAgB;AACdH,MAAAA,SAAS,GAATA,EAAAA;AACA1E,MAAAA,MAAM,CAANA,qBAAAA,CAAAA,SAAAA,EAAAA,OAAAA,CAAgD,UAAA,KAAA,EAAS;AACvD0E,QAAAA,SAAS,CAATA,KAAS,CAATA,GAAmB1E,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB0E,SAAS,CAA3B1E,KAA2B,CAA3BA,EAAnB0E,KAAmB1E,CAAnB0E;AADF1E,OAAAA;AAFF,KAAA,MAKO;AACL,UAAMmD,KAAK,GAAG,MAAM,CAAN,qBAAA,CAAA,SAAA,EAAA,IAAA,CAA6C,UAAA,KAAA,EAAS;AAClE,YAAM0B,IAAI,GAAGlC,IAAI,CAAA,SAAA,EAAA,MAAA,KAAA,GAAjB,GAAiB,CAAjB;;AACA,eAAOA,IAAI,CAAA,IAAA,EAAJA,WAAI,CAAJA,KAAAA,SAAAA,IAAyCA,IAAI,CAAA,IAAA,EAAJA,YAAI,CAAJA,KAAhD,UAAA;AAFF,OAAc,CAAd;AAIA+B,MAAAA,SAAS,CAATA,KAAS,CAATA,GAAmB1E,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB0E,SAAS,CAA3B1E,KAA2B,CAA3BA,EAAnB0E,KAAmB1E,CAAnB0E;AACD;;AAED5C,IAAAA,YAAY,CAAC9B,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAAA,IAAAA,GAAAA,cAAAA,GAAAA,EAAAA,EAAAA,cAAAA,CAAAA,IAAAA,CAAAA,GAAAA,SAAAA,EAAb8B,cAAa9B,EAAD,CAAZ8B;AAlB0B,GAAA;AAA5B,CAAA;;ACCA,IAAM4E,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAsD;AAAA,MAAnD7E,YAAmD,GAAA,IAAA,CAAnDA,YAAmD;AAAA,MAArC6D,SAAqC,GAAA,IAAA,CAArCA,SAAqC;AAAA,MAA1B5C,UAA0B,GAAA,IAAA,CAA1BA,UAA0B;AAAA,MAAdvB,OAAc,GAAA,IAAA,CAAdA,OAAc;AAC1E,MAAM+E,iBAAiB,GAAGH,wBAAwB,CAAC;AAAEtE,IAAAA,YAAY,EAAd,YAAA;AAAgB6D,IAAAA,SAAS,EAAzB,SAAA;AAA2BnE,IAAAA,OAAO,EAAPA;AAA3B,GAAD,CAAlD;AACA,SAAO,UAAA,IAAA,EAAQ;AACb,QAAI,CAACgB,KAAK,CAALA,OAAAA,CAAL,IAAKA,CAAL,EAA0B;AACxBrB,MAAAA,IAAI,GAAG,CAAPA,IAAO,CAAPA;AACD;;AACD,QAAA,mBAAA,GAA0D4B,UAAU,CAApE,OAAA;AAAA,QAAQ6D,YAAR,GAAA,mBAAA,CAAA,YAAA;AAAA,QAAsBC,OAAtB,GAAA,mBAAA,CAAA,OAAA;AAAA,QAA+BC,QAA/B,GAAA,mBAAA,CAAA,QAAA;AAAA,QAAyC5E,YAAzC,GAAA,mBAAA,CAAA,YAAA;AACAqE,IAAAA,iBAAiB,GAAjBA,IAAAA,CAAAA,YAAAA;AAAAA,UACoB;AAAA,YAAA,MAAA,GAAA,KAAA;;AAAA,YAAA,MAAA,GAAA,SAAA,MAAA,CAAA,OAAA,EAAA;AAAA,cAAA,MAAA,GAAA,KAAA;AAAA,cAAA,MAAA,EAAA,OAAA,OAAA;;AAAA,mBAAA,MAAA,CAAA,aAAA,EAAA;AAAA,qBAAA,MAAA,CAAA,SAAA,EAAA;AAehB,cAAA,SAAA;AACA/E,cAAAA,OAAO,CAAPA,IAAAA,CAAAA,qBAAAA,EAAAA,QAAAA;AACA,qBAAA,IAAA;AAjBgB;;AAWhB,gBAAIoF,YAAY,IAAI,aAAA,KAApB,KAAA,EAAuE;AACrEpF,cAAAA,OAAO,CAAPA,IAAAA,CAAAA,wBAAAA;AADqE,cAAA,MAAA,GAAA,IAAA;AAAA,qBAAA,KAAA;AAGtE;;AAde,mBAehB,QAfgB,GAAA,OAAA,CAAA,OAAA,CAeGsF,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,QAAAA,EAAAA,MAAAA,CAfH,IAeGA,CAAAA,CAfH,EAAA,IAAA,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA,QAAA,CAAA;AAAA;;AAShB,cAAMzB,QAAQ,GAAGF,gBAAgB,CAAA,SAAA,EAAjC,YAAiC,CAAjC;AACA3D,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,kBAAAA;AAVgB,iBAWZoF,YAXY,GAAA,OAAA,CAAA,OAAA,CAWWA,YAAY,CAAZA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,QAAAA,EAAAA,MAAAA,CAXX,IAWWA,CAAAA,CAXX,EAAA,IAAA,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA,YAAA,CAAA;AAAA,SAAA;;AAChB,YAAMG,SAAS,GAAGjF,YAAY,CAA9B,OAAA;AACA,YAAMkF,MAAM,GAAGxB,cAAc,CAA7B,SAA6B,CAA7B;;AAFgB,YAAA,MAAA,GAAA,YAAA;AAAA,cAGZ,CAHY,MAAA,EAAA;AAAA,gBAAA,MAAA,GAAA,SAAA,MAAA,CAAA,QAAA,EAAA;AAMd,cAAA,QAAA;AANc,cAAA,MAAA,GAAA,IAAA;AAAA,qBAAA,KAAA;AAAA,aAAA;;AAId,gBAAMyB,MAAM,GAAGxB,aAAa,CAA5B,SAA4B,CAA5B;AACAjE,YAAAA,OAAO,CAAPA,IAAAA,CAAAA,mBAAAA,EAAAA,MAAAA;AALc,mBAMd,OANc,GAAA,OAAA,CAAA,OAAA,CAMIqF,OAAO,CAAPA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,MAAAA,EAAAA,MAAAA,CANJ,IAMIA,CAAAA,CANJ,EAAA,IAAA,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA,OAAA,CAAA;AAAA;AAAA,SAAA,EAAA;;AAAA,eAAA,OAAA,CAAA,OAAA,CAAA,MAAA,IAAA,MAAA,CAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA;AADpBN,OAAAA,CAAAA,OAAAA,CAAAA,EAAAA;AAAAA,eAAAA,OAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA;AAAAA;AAAAA,KAAAA,EAAAA,IAAAA,CAqBI,UAAA,GAAA,EAAO;AACL/E,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,iBAAAA,EAAAA,GAAAA;AAtBN+E,KAAAA,EAwBI,UAAA,CAAA,EAAK;AACHhC,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,CAAAA;AACA/C,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,YAAAA,EAAAA,CAAAA;AA1BN+E,KAAAA,EAAAA,IAAAA,CA6BQ,YAAM;AACV/E,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,sBAAAA;AA9BJ+E,KAAAA;AALF,GAAA;AAFF,CAAA;;ICHaW,IAAb,GAAA,aAAA,YAAA;AACE,WAAA,IAAA,CAAA,IAAA,EAAsC;AAAA,QAAA,KAAA,GAAA,IAAA;;AAAA,QAAxBpB,EAAwB,GAAA,IAAA,CAAxBA,EAAwB;AAAA,QAApBC,MAAoB,GAAA,IAAA,CAApBA,MAAoB;AAAA,QAAZC,QAAY,GAAA,IAAA,CAAZA,QAAY;AACpC,SAAA,EAAA,GAAA,EAAA;AACA,SAAA,QAAA,GAAA,KAAA;AACA,SAAA,MAAA,GAAc,OAAO,CAAP,IAAA,CAAa,CACzBmB,OAAO,CAAPA,OAAAA,CAAgBpB,MADS,EACzBoB,CADyB,EAEzB,IAAA,OAAA,CAAY,UAAA,OAAA,EAAW;AACrB,MAAA,KAAI,CAAJ,OAAA,GAAA,OAAA;AAHU,KAEZ,CAFyB,CAAb,EAAA,IAAA,CAKN,UAAA,GAAA,EAAO;AACb,UAAI,KAAI,CAAR,QAAA,EAAmB;AACjB,eAAO,IAAA,OAAA,CAAY,YAAM,CAAzB,CAAO,CAAP;AAGD;;AACD,aAAA,GAAA;AAXF,KAAc,CAAd;AAaA,SAAA,MAAA,CAAA,IAAA,CAAiB,YAAa;AAC5B,aAAOA,OAAO,CAAPA,OAAAA,CAAgBnB,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,CAAAA,EAAvB,SAAuBA,CAAhBmB,CAAP;AADF,KAAA;AAGD;;AApBH,MAAA,MAAA,GAAA,IAAA,CAAA,SAAA;;AAAA,EAAA,MAAA,CAAA,MAAA,GAsBEC,SAAAA,MAAAA,GAAgB;AACd,QAAI,KAAA,QAAA,KAAJ,IAAA,EAA4B;AAC1B;AACD;;AACD,SAAA,QAAA,GAAA,IAAA;AACA,SAAA,OAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA;AA3BJ,GAAA;;AAAA,SAAA,IAAA;AAAA,CAAA,E;;AA+BA,IAAaC,SAAb,GAAA,aAAA,YAAA;AACE,WAAA,SAAA,GAAc;AACZ,SAAA,KAAA,GAAA,EAAA;AACD;;AAHH,MAAA,OAAA,GAAA,SAAA,CAAA,SAAA;;AAAA,EAAA,OAAA,CAAA,MAAA,GAKEC,SAAAA,MAAAA,CAAAA,UAAAA,EAAmB;AAAA,QAAA,MAAA,GAAA,IAAA;;AACjB,QAAMC,iBAAiB,GAAG,IAAA,KAAA,CAAUC,UAAU,CAApB,QAAA,EAA+B;AACvDC,MAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,MAAA,EAAA,OAAA,EAAA,aAAA,EAAoC;AACzC,YAAMnD,GAAG,GAAGoD,MAAM,CAANA,KAAAA,CAAAA,OAAAA,EAAZ,aAAYA,CAAZ;;AACA,QAAA,MAAI,CAAJ,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;;AACA,eAAA,GAAA;AACD;AALsD,KAA/B,CAA1B;AAOAF,IAAAA,UAAU,CAAVA,QAAAA,GAAAA,iBAAAA;AACA,QAAMnB,IAAI,GAAG,IAAA,IAAA,CAAb,UAAa,CAAb;AAEA,QAAMsB,WAAW,GAAG,KAAA,KAAA,CAAA,IAAA,CAAgB,UAAA,KAAA,EAAA;AAAA,UAAG7B,EAAH,GAAA,KAAA,CAAA,EAAA;AAAA,aAAYO,IAAI,CAAJA,EAAAA,KAAZ,EAAA;AAApC,KAAoB,CAApB;;AACA,QAAA,WAAA,EAAiB;AACf,UAAMuB,YAAY,GAAG,KAAA,KAAA,CAAA,OAAA,CAArB,WAAqB,CAArB;AACAD,MAAAA,WAAW,CAAXA,MAAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,YAAA,EAAA,CAAA;AACD;;AACD,QAAMvE,KAAK,GAAG,KAAA,KAAA,CAAA,IAAA,CAAd,IAAc,CAAd;AAtBJ,GAAA;;AAAA,SAAA,SAAA;AAAA,CAAA,EAAA;;AClBA,IAAMyE,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAS;AAC3B,MAAMC,QAAQ,GAAGxG,MAAM,CAAvB,EAAuB,CAAvB;AACArB,EAAAA,MAAM,CAANA,IAAAA,CAAAA,KAAAA,EAAAA,OAAAA,CAA2B,UAAA,IAAA,EAAQ;AACjC6H,IAAAA,QAAQ,CAARA,OAAAA,CAAAA,IAAAA,IAAyBC,KAAK,CAA9BD,IAA8B,CAA9BA;AADF7H,GAAAA;AAGA,SAAA,QAAA;AALF,CAAA;;AAQA,IAAM+H,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAA8G;AAAA,MAA3GC,KAA2G,GAAA,IAAA,CAA3GA,KAA2G;AAAA,MAApG/F,YAAoG,GAAA,IAAA,CAApGA,YAAoG;AAAA,MAAtF+B,KAAsF,GAAA,IAAA,CAAtFA,KAAsF;AAAA,MAA/EnC,YAA+E,GAAA,IAAA,CAA/EA,YAA+E;AAAA,MAAjEgB,WAAiE,GAAA,IAAA,CAAjEA,WAAiE;AAAA,MAApDf,YAAoD,GAAA,IAAA,CAApDA,YAAoD;AAAA,MAAtC6E,YAAsC,GAAA,IAAA,CAAtCA,YAAsC;AAAA,MAAxBC,OAAwB,GAAA,IAAA,CAAxBA,OAAwB;AAAA,MAAfC,QAAe,GAAA,IAAA,CAAfA,QAAe;AACjI,MAAMtF,OAAO,GAAGJ,QAAQ,CAAxB,KAAwB,CAAxB;AACA,MAAM2B,UAAU,GAAG8E,WAAW,CAAC;AAC7BjB,IAAAA,YAAY,EADiB,YAAA;AAE7BC,IAAAA,OAAO,EAFsB,OAAA;AAG7BC,IAAAA,QAAQ,EAHqB,QAAA;AAI7B7C,IAAAA,KAAK,EAJwB,KAAA;AAK7B/B,IAAAA,YAAY,EAAZA;AAL6B,GAAD,CAA9B;AAOAa,EAAAA,UAAU,CAAVA,OAAAA,GAAqB;AACnB6D,IAAAA,YAAY,EADO,YAAA;AAEnBC,IAAAA,OAAO,EAFY,OAAA;AAGnBC,IAAAA,QAAQ,EAHW,QAAA;AAInB7C,IAAAA,KAAK,EAJc,KAAA;AAKnB/B,IAAAA,YAAY,EAAZA;AALmB,GAArBa;AAOAmF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMvC,SAAS,GAAG,IAAlB,SAAkB,EAAlB;AACAnE,IAAAA,OAAO,CAAPA,WAAAA,CAAAA,gBAAAA,EAEEK,eAAe,CAAC;AACdC,MAAAA,YAAY,EADE,YAAA;AAEdC,MAAAA,YAAY,EAAZA;AAFc,KAAD,CAFjBP;AAOAA,IAAAA,OAAO,CAAPA,WAAAA,CAAAA,iBAAAA,EAEEqB,gBAAgB,CAAC;AACff,MAAAA,YAAY,EADG,YAAA;AAEfgB,MAAAA,WAAW,EAFI,WAAA;AAGff,MAAAA,YAAY,EAHG,YAAA;AAIfgB,MAAAA,UAAU,EAAVA;AAJe,KAAD,CAFlBvB;AASAA,IAAAA,OAAO,CAAPA,WAAAA,CAAAA,mBAAAA,EAAyCmC,kBAAkB,CAAC;AAAE7B,MAAAA,YAAY,EAAd,YAAA;AAAgBC,MAAAA,YAAY,EAAZA;AAAhB,KAAD,CAA3DP;AACAA,IAAAA,OAAO,CAAPA,WAAAA,CAAAA,qBAAAA,EAEEkE,oBAAoB,CAAC;AACnB5D,MAAAA,YAAY,EADO,YAAA;AAEnBC,MAAAA,YAAY,EAFO,YAAA;AAGnB4D,MAAAA,SAAS,EAHU,SAAA;AAInB5C,MAAAA,UAAU,EAJS,UAAA;AAKnBvB,MAAAA,OAAO,EAAPA;AALmB,KAAD,CAFtBA;AAUAA,IAAAA,OAAO,CAAPA,WAAAA,CAAAA,wBAAAA,EAA8C2E,sBAAsB,CAAC;AAAErE,MAAAA,YAAY,EAAd,YAAA;AAAgBC,MAAAA,YAAY,EAAZA;AAAhB,KAAD,CAApEP;AACAA,IAAAA,OAAO,CAAPA,WAAAA,CAAAA,eAAAA,EAEE8E,cAAc,CAAC;AACbvE,MAAAA,YAAY,EADC,YAAA;AAEbD,MAAAA,YAAY,EAFC,YAAA;AAGbgB,MAAAA,WAAW,EAHE,WAAA;AAIbC,MAAAA,UAAU,EAJG,UAAA;AAKb4C,MAAAA,SAAS,EALI,SAAA;AAMbnE,MAAAA,OAAO,EAAPA;AANa,KAAD,CAFhBA;AAWAA,IAAAA,OAAO,CAAPA,WAAAA,CAAAA,iBAAAA,EAAuCiF,gBAAgB,CAAC;AAAE3D,MAAAA,WAAW,EAAb,WAAA;AAAef,MAAAA,YAAY,EAA3B,YAAA;AAA6BD,MAAAA,YAAY,EAAZA;AAA7B,KAAD,CAAvDN;AACAA,IAAAA,OAAO,CAAPA,WAAAA,CAAAA,qBAAAA,EAA2CkF,mBAAmB,CAAC;AAAE3E,MAAAA,YAAY,EAAd,YAAA;AAAgBD,MAAAA,YAAY,EAAZA;AAAhB,KAAD,CAA9DN;AACAA,IAAAA,OAAO,CAAPA,WAAAA,CAAAA,aAAAA,EAEEmF,aAAa,CAAC;AACZ7E,MAAAA,YAAY,EADA,YAAA;AAEZ6D,MAAAA,SAAS,EAFG,SAAA;AAGZ5C,MAAAA,UAAU,EAHE,UAAA;AAKZ6D,MAAAA,YAAY,EAAE7D,UAAU,CAAVA,OAAAA,CALF,YAAA;AAMZ8D,MAAAA,OAAO,EAAE9D,UAAU,CAAVA,OAAAA,CANG,OAAA;AAOZ+D,MAAAA,QAAQ,EAAE/D,UAAU,CAAVA,OAAAA,CAPE,QAAA;AAQZkB,MAAAA,KAAK,EAAElB,UAAU,CAAVA,OAAAA,CARK,KAAA;AASZvB,MAAAA,OAAO,EAAPA;AATY,KAAD,CAFfA;AAcA,WAAO,YAAM;AACXA,MAAAA,OAAO,CAAPA,kBAAAA;AADF,KAAA;AAzDO,GAAA,EA4DN,CAAA,OAAA,EAAA,YAAA,EAAA,WAAA,EAAA,UAAA,EA5DH0G,YA4DG,CA5DM,CAATA;AA6DA,SAAA,OAAA;AA7EF,CAAA;;AClBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAA,KAAA,EAAS;AAC5B,MAAA,SAAA,GAA0BE,QAAQ,CAAlC,EAAkC,CAAlC;AAAA,MAAOzE,KAAP,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MAAcwE,QAAd,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,MAAME,QAAQ,GAAGhH,MAAM,CAAvB,EAAuB,CAAvB;AACA,MAAMiH,OAAO,GAAGjH,MAAM,CAAtB,EAAsB,CAAtB;AACA,MAAMwG,QAAQ,GAAGxG,MAAM,CAAvB,KAAuB,CAAvB;AACAwG,EAAAA,QAAQ,CAARA,OAAAA,GAAAA,KAAAA;AACA,MAAMzC,QAAQ,GAAG9D,OAAO,CAAC,YAAM;AAC7B,WAAO4D,gBAAgB,CAAA,KAAA,EAAQ2C,QAAQ,CAARA,OAAAA,CAA/B,YAAuB,CAAvB;AADsB,GAAA,EAErB,CAFH,KAEG,CAFqB,CAAxB;AAIA,MAAMU,MAAM,GAAGjH,OAAO,CAAC,YAAM;AAC3B,WAAOsD,SAAS,CAAA,KAAA,EAAQ,UAAA,IAAA,EAAA,KAAA,EAAiB;AACvC,aAAO;AACLH,QAAAA,KAAK,EADA,IAAA;AAELzB,QAAAA,KAAK,EAAEyB,KAAK,CAFP,KAAA;AAGL1C,QAAAA,IAAI,EAAE0C,KAAK,CAHN,IAAA;AAIL1B,QAAAA,IAAI,EAAE0B,KAAK,CAAC1B;AAJP,OAAP;AADF,KAAgB,CAAhB;AADoB,GAAA,EASnB,CATH,KASG,CATmB,CAAtB;AAUA,MAAMgE,MAAM,GAAGzF,OAAO,CAAC,YAAM;AAC3B,WAAOiE,cAAc,CAArB,KAAqB,CAArB;AADoB,GAAA,EAEnB,CAFH,KAEG,CAFmB,CAAtB;AAGA,MAAMzD,YAAY,GAAG0G,WAAW,CAAC,UAAA,KAAA,EAAS;AACxC,QAAI,OAAA,KAAA,KAAJ,UAAA,EAAiC;AAC/BL,MAAAA,QAAQ,CAAC,UAAA,QAAA,EAAY;AACnB,YAAMM,QAAQ,GAAG9E,KAAK,CAAtB,QAAsB,CAAtB;AACA0E,QAAAA,QAAQ,CAARA,OAAAA,GAAAA,QAAAA;AACA,eAAA,QAAA;AAHFF,OAAQ,CAARA;AADF,KAAA,MAMO;AACLE,MAAAA,QAAQ,CAARA,OAAAA,GAAAA,KAAAA;AACAF,MAAAA,QAAQ,CAARA,KAAQ,CAARA;AACD;AAV6B,GAAA,EAAhC,EAAgC,CAAhC;AAYAE,EAAAA,QAAQ,CAARA,OAAAA,GAAAA,KAAAA;AACAC,EAAAA,OAAO,CAAPA,OAAAA,GAAAA,QAAAA;AAEA,SAAO;AACLxB,IAAAA,SAAS,EADJ,KAAA;AAELjF,IAAAA,YAAY,EAFP,QAAA;AAGLuD,IAAAA,QAAQ,EAHH,QAAA;AAILmD,IAAAA,MAAM,EAJD,MAAA;AAKLxB,IAAAA,MAAM,EALD,MAAA;AAML2B,IAAAA,WAAW,EANN,OAAA;AAOL5G,IAAAA,YAAY,EAAZA;AAPK,GAAP;AAtCF,CAAA;;ACDA,IAAM6G,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAA,GAAA,EAAyE;AAAA,MAAtEpH,OAAsE,GAAA,IAAA,CAAtEA,OAAsE;AAAA,MAA7DgH,MAA6D,GAAA,IAAA,CAA7DA,MAA6D;AAAA,MAAvCzB,SAAuC,GAAA,IAAA,CAAvCA,SAAuC;AAAA,MAA5B1B,QAA4B,GAAA,IAAA,CAA5BA,QAA4B;AAAA,MAAlB2B,MAAkB,GAAA,IAAA,CAAlBA,MAAkB;AAC1F6B,EAAAA,mBAAmB,CAAA,GAAA,EAEjB,YAAM;AACJ,WAAO;AACLrH,MAAAA,OAAO,EADF,OAAA;AAELsH,MAAAA,MAAM,EAAE,SAAA,MAAA,GAAa;AAAA,aAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAT3H,IAAS,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAATA,UAAAA,IAAS,CAAA,IAAA,CAATA,GAAS,SAAA,CAAA,IAAA,CAATA;AAAS;;AACnBK,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,aAAAA,EAAAA,IAAAA;AAHG,OAAA;;AAKL,UAAA,MAAA,GAAa;AACX,eAAA,MAAA;AANG,OAAA;;AAQL,UAAA,IAAA,GAAW;AACT,eAAA,QAAA;AATG,OAAA;;AAWL,UAAA,MAAA,GAAa;AACX,eAAA,MAAA;AAZG,OAAA;;AAcL,UAAA,SAAA,GAAgB;AACd,eAAA,SAAA;AAfG,OAAA;;AAiBL,UAAA,IAAA,CAAA,IAAA,EAAe;AACbA,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,eAAAA,EAA8B;AAAEsD,UAAAA,IAAI,EAAJA;AAAF,SAA9BtD;AAlBG,OAAA;;AAoBLuH,MAAAA,KApBK,EAAA,SAAA,KAAA,GAoBG;AACNvH,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,iBAAAA;AArBG,OAAA;AAuBLwH,MAAAA,OAvBK,EAAA,SAAA,OAAA,CAAA,QAAA,EAuBa;AAChBxH,QAAAA,OAAO,CAAPA,WAAAA,CAAAA,YAAAA,EAAkC,YAAM;AACtC0D,UAAAA,QAAQ,IAAIA,QAAZA,EAAAA;AADF1D,SAAAA;AAxBG,OAAA;AA4BLyH,MAAAA,SA5BK,EAAA,SAAA,SAAA,CAAA,QAAA,EA4Be;AAClBzH,QAAAA,OAAO,CAAPA,WAAAA,CAAAA,cAAAA,EAAoC,YAAM;AACxC0D,UAAAA,QAAQ,IAAIA,QAAZA,EAAAA;AADF1D,SAAAA;AA7BG,OAAA;AAiCL0H,MAAAA,aAjCK,EAAA,SAAA,aAAA,CAAA,IAAA,EAAA,SAAA,EAiC0B;AAC7B,YAAMxE,KAAK,GAAGqC,SAAS,CAAvB,IAAuB,CAAvB;AACA,YAAM3D,KAAK,GAAG,MAAM,CAAN,qBAAA,CAA6BsB,KAAK,CAAlC,IAAA,EAAA,IAAA,CAA8C,UAAA,KAAA,EAAS;AACnE,cAAMK,IAAI,GAAGL,KAAK,CAALA,IAAAA,CAAb,KAAaA,CAAb;AACA,iBAAO,CAAA,SAAA,IAAcrB,SAAS,KAAK0B,IAAI,CAAvC,SAAA;AAFF,SAAc,CAAd;;AAIA,YAAI,CAAJ,KAAA,EAAY;AACVR,UAAAA,OAAO,CAAPA,KAAAA,CAAAA,WAAAA,SAAAA,GAAAA,8CAAAA,GAAAA,IAAAA,GAAAA,GAAAA;AACA;AACD;;AACD/C,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,qBAAAA,EAAoC;AAAEQ,UAAAA,IAAI,EAAN,IAAA;AAAQoB,UAAAA,KAAK,EAALA;AAAR,SAApC5B;AA3CG,OAAA;AA6CL2H,MAAAA,gBA7CK,EAAA,SAAA,gBAAA,CAAA,KAAA,EA6CoD;AAAA,YAAtCnH,IAAsC,GAAA,KAAA,CAAtCA,IAAsC;AAAA,YAAhCpC,KAAgC,GAAA,KAAA,CAAhCA,KAAgC;AAAA,YAAzByD,SAAyB,GAAA,KAAA,CAAzBA,SAAyB;AAAA,YAAdC,UAAc,GAAA,KAAA,CAAdA,UAAc;AACvD9B,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,qBAAAA,EAAoC;AAClCQ,UAAAA,IAAI,EAD8B,IAAA;AAElCpC,UAAAA,KAAK,EAAE;AACLyD,YAAAA,SAAS,EADJ,SAAA;AAELC,YAAAA,UAAU,EAFL,UAAA;AAGL4C,YAAAA,QAAQ,EAAEtG;AAHL;AAF2B,SAApC4B;AAQD;AAtDI,KAAP;AAHe,GAAA,EA4DjB,CAAA,OAAA,EAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EA5DFqH,QA4DE,CA5DiB,CAAnBA;AADF,CAAA;;ACAA,IAAM3J,SAAO,GAAGC,aAAhB,EAAA;AAEO,IAAQC,UAAR,GAAqBF,SAArB,CAAA,QAAA;;AAEA,IAAMkK,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,SAAO9J,UAAU,CAAjB,SAAiB,CAAjB;AADK,CAAA;;ACDP,IAAM+J,SAAS,GAAG,SAAZA,SAAY,CAAA,IAAA,EAAkB;AAAA,MAAfC,QAAe,GAAA,IAAA,CAAfA,QAAe;AAClC,MAAMC,OAAO,GAAGhI,OAAO,CAAC,YAAA;AAAA,WAAMiI,MAAM,CAACC,QAAQ,CAArB,QAAqB,CAAT,CAAZ;AAAD,GAAA,EAAvB,EAAuB,CAAvB;;AACA,MAAA,SAAA,GAAgCpB,QAAQ,CAAxC,EAAwC,CAAxC;AAAA,MAAOqB,QAAP,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MAAiBC,WAAjB,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,MAAA,eAAA,GAAoBtK,cAApB,EAAA;AAAA,MAAQmC,OAAR,GAAA,eAAA,CAAA,OAAA;;AACA0G,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM0B,IAAI,GAAG,OAAO,CAAP,WAAA,CAAA,gBAAA,EAAsC,UAAA,KAAA,EAAsB;AAAA,UAAnB9D,EAAmB,GAAA,KAAA,CAAnBA,EAAmB;AAAA,UAAf+D,QAAe,GAAA,KAAA,CAAfA,QAAe;AACvEF,MAAAA,WAAW,CAAC,UAAA,WAAA,EAAe;AACzB,YAAMG,WAAW,GAAG7J,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAApB,WAAoBA,CAApB;;AACA,YAAI,CAAC6J,WAAW,CAAhB,QAAgB,CAAhB,EAA4B;AAC1BA,UAAAA,WAAW,CAAXA,QAAW,CAAXA,GAAAA,EAAAA;AACD;;AACD,YAAMC,OAAO,GAAGD,WAAW,CAAXA,QAAW,CAAXA,CAAAA,KAAAA,CAAhB,CAAgBA,CAAhB;AACAC,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,EAAAA;AACAD,QAAAA,WAAW,CAAXA,QAAW,CAAXA,GAAAA,OAAAA;AACA,eAAA,WAAA;AARFH,OAAW,CAAXA;AADF,KAAa,CAAb;AAYA,QAAMK,IAAI,GAAG,OAAO,CAAP,WAAA,CAAA,mBAAA,EAAyC,UAAA,KAAA,EAAsB;AAAA,UAAnBlE,EAAmB,GAAA,KAAA,CAAnBA,EAAmB;AAAA,UAAf+D,QAAe,GAAA,KAAA,CAAfA,QAAe;AAC1EF,MAAAA,WAAW,CAAC,UAAA,WAAA,EAAe;AACzB,YAAMG,WAAW,GAAG7J,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAApB,WAAoBA,CAApB;AACA,YAAM8J,OAAO,GAAGD,WAAW,CAAXA,QAAW,CAAXA,CAAAA,KAAAA,CAAhB,CAAgBA,CAAhB;AACA,YAAM1G,KAAK,GAAG2G,OAAO,CAAPA,OAAAA,CAAd,EAAcA,CAAd;AACAA,QAAAA,OAAO,CAAPA,MAAAA,CAAAA,KAAAA,EAAAA,CAAAA;AACAD,QAAAA,WAAW,CAAXA,QAAW,CAAXA,GAAAA,OAAAA;AACA,eAAA,WAAA;AANFH,OAAW,CAAXA;AADF,KAAa,CAAb;AAUA,WAAO,YAAM;AACXC,MAAAA,IAAI,CAAJA,MAAAA;AACAI,MAAAA,IAAI,CAAJA,MAAAA;AAFF,KAAA;AAvBO,GAAA,EA2BN,CA3BH9B,OA2BG,CA3BM,CAATA;AA4BA,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAU,IAAA,KAAK,EAAE;AAAEpC,MAAAA,EAAE,EAAJ,OAAA;AAAe4D,MAAAA,QAAQ,EAARA;AAAf;AAAjB,GAAA,EAAP,QAAO,CAAP;AAhCF,CAAA;;ACCA,IAAMO,KAAK,GAAG,SAARA,KAAQ,CAAA,IAAA,EAAwB;AAAA,MAArBjI,IAAqB,GAAA,IAAA,CAArBA,IAAqB;AAAA,MAAfsH,QAAe,GAAA,IAAA,CAAfA,QAAe;;AACpC,MAAA,eAAA,GAAiCjK,cAAjC,EAAA;AAAA,MAAQ6K,WAAR,GAAA,eAAA,CAAA,WAAA;AAAA,MAAqB1I,OAArB,GAAA,eAAA,CAAA,OAAA;;AACA,MAAM+H,OAAO,GAAGhI,OAAO,CAAC,YAAA;AAAA,WAAMiI,MAAM,CAACC,QAAQ,CAArB,QAAqB,CAAT,CAAZ;AAAD,GAAA,EAAvB,EAAuB,CAAvB;;AACA,MAAA,gBAAA,GAAyEL,eAAzE,EAAA;AAAA,MAAYS,QAAZ,GAAA,gBAAA,CAAA,EAAA;AAAA,MAA6BM,WAA7B,GAAA,gBAAA,CAAA,KAAA;AAAA,MAA0CT,QAA1C,GAAA,gBAAA,CAAA,QAAA;AAAA,MAA0DU,UAA1D,GAAA,gBAAA,CAAA,IAAA;;AAEA,MAAMhH,KAAK,GAAG7B,OAAO,CAAC,YAAM;AAC1B,WAAOqB,IAAI,CAAA,QAAA,EAAA,QAAA,EAAJA,EAAI,CAAJA,CAAAA,OAAAA,CAAP,OAAOA,CAAP;AADmB,GAAA,EAElB,CAAA,OAAA,EAAA,QAAA,EAFH,QAEG,CAFkB,CAArB;AAIA,MAAMS,SAAS,GAAG9B,OAAO,CAAC,YAAM;AAC9B,QAAI6B,KAAK,GAAG,CAARA,CAAAA,IAAJ,UAAA,EAA8B;AAC5B,aAAUgH,UAAV,GAAA,GAAUA,GAAV,WAAUA,GAAV,IAAUA,GAAV,IAAA;AACD;;AACD,WAAA,IAAA;AAJuB,GAAA,EAKtB,CAAA,UAAA,EAAA,IAAA,EAAA,KAAA,EALH,WAKG,CALsB,CAAzB;AAOAlC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAImC,MAAM,GAAV,KAAA;;AACA,QAAA,WAAA,EAAiB;AACfA,MAAAA,MAAM,GAANA,IAAAA;AACA7I,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,gBAAAA,EAA+B;AAAEsE,QAAAA,EAAE,EAAJ,OAAA;AAAe+D,QAAAA,QAAQ,EAARA;AAAf,OAA/BrI;AACD;;AACD,WAAO,YAAM;AACX6I,MAAAA,MAAM,IAAI,OAAO,CAAP,IAAA,CAAA,mBAAA,EAAkC;AAAEvE,QAAAA,EAAE,EAAJ,OAAA;AAAe+D,QAAAA,QAAQ,EAARA;AAAf,OAAlC,CAAVQ;AADF,KAAA;AANO,GAAA,EASN,CAAA,WAAA,EAAA,OAAA,EAAA,OAAA,EATHnC,QASG,CATM,CAATA;AAUA,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAU,IAAA,KAAK,EAAE;AAAEpC,MAAAA,EAAE,EAAJ,OAAA;AAAe9D,MAAAA,IAAI,EAAnB,SAAA;AAAgC0H,MAAAA,QAAQ,EAAxC,QAAA;AAA0CtG,MAAAA,KAAK,EAALA;AAA1C;AAAjB,GAAA,EAAP,QAAO,CAAP;AA1BF,CAAA;;AAiCO,IAAMkH,QAAQ,GAAd,eAAA;AC/BP,IAAMC,IAAI,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAgB;AACtC,MAAQ5D,YAAR,GAAkGmB,KAAlG,CAAA,YAAA;AAAA,MAAsB9D,KAAtB,GAAkG8D,KAAlG,CAAA,KAAA;AAAA,MAA6B7F,YAA7B,GAAkG6F,KAAlG,CAAA,YAAA;AAAA,MAA2C0C,QAA3C,GAAkG1C,KAAlG,CAAA,QAAA;AAAA,MAAqDjD,IAArD,GAAkGiD,KAAlG,CAAA,IAAA;AAAA,MAA2DlB,OAA3D,GAAkGkB,KAAlG,CAAA,OAAA;AAAA,MAAoEjB,QAApE,GAAkGiB,KAAlG,CAAA,QAAA;AAAA,MAA8EE,KAA9E,GAAkGF,KAAlG,CAAA,KAAA;AAAA,MAAqFuB,QAArF,GAAkGvB,KAAlG,CAAA,QAAA;;AACA,MAAA,aAAA,GAAyFI,YAAY,CAArG,KAAqG,CAArG;AAAA,MAAQpB,SAAR,GAAA,aAAA,CAAA,SAAA;AAAA,MAAmBjF,YAAnB,GAAA,aAAA,CAAA,YAAA;AAAA,MAAiCuD,QAAjC,GAAA,aAAA,CAAA,QAAA;AAAA,MAA2CmD,MAA3C,GAAA,aAAA,CAAA,MAAA;AAAA,MAAmDxB,MAAnD,GAAA,aAAA,CAAA,MAAA;AAAA,MAA2D2B,WAA3D,GAAA,aAAA,CAAA,WAAA;AAAA,MAAwE5G,YAAxE,GAAA,aAAA,CAAA,YAAA;;AACA,MAAA,SAAA,GAAsCsG,QAAQ,CAA9C,KAA8C,CAA9C;AAAA,MAAO6B,WAAP,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MAAoBQ,cAApB,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,MAAM3G,SAAS,GAAG9D,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAAA,KAAAA,EAAlB,KAAkBA,CAAlB;AACA,MAAM6C,WAAW,GAAGxB,MAAM,CAA1B,IAA0B,CAA1B;AACA,MAAME,OAAO,GAAGwG,YAAY,CAAC;AAC3BpB,IAAAA,YAAY,EADe,YAAA;AAE3B3C,IAAAA,KAAK,EAFsB,SAAA;AAG3B/B,IAAAA,YAAY,EAHe,YAAA;AAI3BuI,IAAAA,QAAQ,EAJmB,QAAA;AAK3B3F,IAAAA,IAAI,EALuB,IAAA;AAM3B+B,IAAAA,OAAO,EANoB,OAAA;AAO3BC,IAAAA,QAAQ,EAPmB,QAAA;AAQ3BmB,IAAAA,KAAK,EARsB,KAAA;AAS3BlB,IAAAA,SAAS,EATkB,SAAA;AAU3BjF,IAAAA,YAAY,EAVe,YAAA;AAW3BuD,IAAAA,QAAQ,EAXmB,QAAA;AAY3BsD,IAAAA,WAAW,EAZgB,WAAA;AAa3B5G,IAAAA,YAAY,EAbe,YAAA;AAc3Be,IAAAA,WAAW,EAAXA;AAd2B,GAAD,CAA5B;AAgBAoF,EAAAA,SAAS,CAAC,YAAM;AACdwC,IAAAA,cAAc,CAAdA,IAAc,CAAdA;AACA5H,IAAAA,WAAW,CAAXA,OAAAA,IAAuB,OAAO,CAAP,IAAA,CAAA,eAAA,EAA8B;AAAEgC,MAAAA,IAAI,EAAEhC,WAAW,CAAC5C;AAApB,KAA9B,CAAvB4C;AACAtB,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,YAAAA;AACA,WAAO,YAAM;AACXA,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,cAAAA;AADF,KAAA;AAJO,GAAA,EAON,CAPH0G,OAOG,CAPM,CAATA;AAQAU,EAAAA,UAAU,CAAC;AAAEpH,IAAAA,OAAO,EAAT,OAAA;AAAWgH,IAAAA,MAAM,EAAjB,MAAA;AAAmBtG,IAAAA,YAAY,EAA/B,YAAA;AAAiC8E,IAAAA,MAAM,EAAvC,MAAA;AAAyC3B,IAAAA,QAAQ,EAAjD,QAAA;AAAmD0B,IAAAA,SAAS,EAATA;AAAnD,GAAD,EAAV6B,GAAU,CAAVA;AACA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,IAAA,KAAK,EAAE;AACL7B,MAAAA,SAAS,EADJ,SAAA;AAEL1B,MAAAA,QAAQ,EAFH,QAAA;AAGLtD,MAAAA,YAAY,EAHP,YAAA;AAILP,MAAAA,OAAO,EAJF,OAAA;AAKLgH,MAAAA,MAAM,EALD,MAAA;AAMLxB,MAAAA,MAAM,EAND,MAAA;AAOLkD,MAAAA,WAAW,EAPN,WAAA;AAQLpH,MAAAA,WAAW,EAAXA;AARK;AADT,GAAA,EAAA,aAWE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EAZJ,QAYI,CAXF,CADF;AA/BF,CAAuB,CAAvB;AAgDAyH,IAAI,CAAJA,YAAAA,GAAoB;AAClBzF,EAAAA,IAAI,EADc,EAAA;AAElBmD,EAAAA,KAAK,EAFa,KAAA;AAGlBhE,EAAAA,KAAK,EAHa,EAAA;AAIlB/B,EAAAA,YAAY,EAAE;AAJI,CAApBqI;;ACrDA,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAAqF;AAAA,MAAlF3I,IAAkF,GAAA,IAAA,CAAlFA,IAAkF;AAAA,MAA5EgB,IAA4E,GAAA,IAAA,CAA5EA,IAA4E;AAAA,MAAtEC,KAAsE,GAAA,IAAA,CAAtEA,KAAsE;AAAA,MAA/DC,WAA+D,GAAA,IAAA,CAA/DA,WAA+D;AAAA,MAAlDC,MAAkD,GAAA,IAAA,CAAlDA,MAAkD;AAAA,MAA1CvD,KAA0C,GAAA,IAAA,CAA1CA,KAA0C;AAAA,MAAnCwD,KAAmC,GAAA,IAAA,CAAnCA,KAAmC;AAAA,MAA5BC,SAA4B,GAAA,IAAA,CAA5BA,SAA4B;AAAA,MAAjBC,UAAiB,GAAA,IAAA,CAAjBA,UAAiB;AACxG,MAAMC,QAAQ,GAAGjC,MAAM,CAAvB,IAAuB,CAAvB;;AACA,MAAA,eAAA,GAAiCjC,cAAjC,EAAA;AAAA,MAAQ6K,WAAR,GAAA,eAAA,CAAA,WAAA;AAAA,MAAqB1I,OAArB,GAAA,eAAA,CAAA,OAAA;;AACA0G,EAAAA,SAAS,CAAC,YAAM;AACd,QAAImC,MAAM,GAAV,KAAA;;AACA,QAAA,WAAA,EAAiB;AACfA,MAAAA,MAAM,GAANA,IAAAA;AACA7I,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,gBAAAA,EAA+B;AAAEQ,QAAAA,IAAI,EAAN,IAAA;AAAQoB,QAAAA,KAAK,EAALA;AAAR,OAA/B5B;AACD;;AACD,WAAO,YAAM;AACX6I,MAAAA,MAAM,IAAI,OAAO,CAAP,IAAA,CAAA,mBAAA,EAAkC;AAAErI,QAAAA,IAAI,EAAN,IAAA;AAAQoB,QAAAA,KAAK,EAALA;AAAR,OAAlC,CAAViH;AADF,KAAA;AANO,GAAA,EASN,CAAA,WAAA,EAAA,OAAA,EAAA,IAAA,EATHnC,KASG,CATM,CAATA;AAWAA,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgC,WAAW,IAAI5G,UAAU,KAAK,CAAlC,CAAA,EAAsC;AACpC9B,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,iBAAAA,EAAgC;AAC9BQ,QAAAA,IAAI,EAD0B,IAAA;AAE9BgB,QAAAA,IAAI,EAF0B,IAAA;AAG9BC,QAAAA,KAAK,EAHyB,KAAA;AAI9BC,QAAAA,WAAW,EAJmB,WAAA;AAK9BC,QAAAA,MAAM,EALwB,MAAA;AAM9BC,QAAAA,KAAK,EANyB,KAAA;AAO9BC,QAAAA,SAAS,EAPqB,SAAA;AAQ9BC,QAAAA,UAAU,EARoB,UAAA;AAS9B1D,QAAAA,KAAK,EATyB,KAAA;AAU9B2D,QAAAA,QAAQ,EAARA;AAV8B,OAAhC/B;AAYD;AAdM,GAAA,EAeN,CAAA,WAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,WAAA,EAAA,MAAA,EAAA,KAAA,EAAA,SAAA,EAAA,UAAA,EAAA,KAAA,EAfH0G,QAeG,CAfM,CAATA;AAgBA,SAAA,QAAA;AA9BF,CAAA;;ACCA,IAAM0C,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAA2B;AAAA,MAAxB5I,IAAwB,GAAA,IAAA,CAAxBA,IAAwB;AAAA,MAAlBoB,KAAkB,GAAA,IAAA,CAAlBA,KAAkB;AAAA,MAAXyH,IAAW,GAAA,IAAA,CAAXA,IAAW;;AAC7C,MAAA,eAAA,GAAoBxL,cAApB,EAAA;AAAA,MAAQmC,OAAR,GAAA,eAAA,CAAA,OAAA;;AACA,MAAMsJ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BtJ,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,qBAAAA,EAAoC;AAAEQ,MAAAA,IAAI,EAAN,IAAA;AAAQoB,MAAAA,KAAK,EAALA;AAAR,KAApC5B;AADF,GAAA;;AAGA,MAAA,qBAAA,GAAqDwJ,oBAAoB,CAAA,aAAA,EAAzE,IAAyE,CAAzE;AAAA,MAAkBD,sBAAlB,GAAA,qBAAA,CAAA,QAAA;AAAA,MAA0C3D,MAA1C,GAAA,qBAAA,CAAA,MAAA;;AACAc,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM+C,YAAY,GAAGzJ,OAAO,CAAPA,WAAAA,CAAAA,iBAAAA,EAArB,MAAqBA,CAArB;AACA,WAAO,YAAM;AACXyJ,MAAAA,YAAY,IAAIA,YAAY,CAA5BA,MAAgBA,EAAhBA;AADF,KAAA;AAFO,GAAA,EAKN,CAAA,OAAA,EALH/C,MAKG,CALM,CAATA;AAOA,SAAO2C,IAAI,GAAA,sBAAA,GAAX,aAAA;AAbF,CAAA;;ACFA,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAAA,KAAA,EAAS;AACvB,SAAOC,KAAK,YAAYC,MAAM,CAAvBD,KAAAA,IAAiCvI,IAAI,CAAA,KAAA,EAAJA,aAAI,CAAJA,YAAsCwI,MAAM,CAA7ED,KAAAA,IAAuF,OAAOvI,IAAI,CAAA,KAAA,EAAX,gBAAW,CAAX,KAA9F,UAAA;AADF,CAAA;;AAIA,IAAMyI,aAAa,GAAG,SAAhBA,aAAgB,CAAA,KAAA,EAAA,KAAA,EAAkB;AACtC,MAAIH,OAAO,CAAX,KAAW,CAAX,EAAoB;AAClB,QAAItL,KAAK,KAAT,SAAA,EAAyB;AACvB,cAAQuL,KAAK,CAALA,MAAAA,CAAR,IAAA;AACE,aAAA,UAAA;AACA,aAAA,OAAA;AACEvL,UAAAA,KAAK,GAAGuL,KAAK,CAALA,MAAAA,CAARvL,OAAAA;AACA;;AACF;AACEA,UAAAA,KAAK,GAAGuL,KAAK,CAALA,MAAAA,CAARvL,KAAAA;AANJ;AAQD;AAVH,GAAA,MAWO;AACLA,IAAAA,KAAK,GAALA,KAAAA;AACD;;AACD,SAAA,KAAA;AAfF,CAAA;;ACFA,IAAM0L,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EAA+B;AAAA,MAA5BtJ,IAA4B,GAAA,IAAA,CAA5BA,IAA4B;AAAA,MAAtBoB,KAAsB,GAAA,IAAA,CAAtBA,KAAsB;AAAA,MAAfmI,QAAe,GAAA,IAAA,CAAfA,QAAe;;AACxD,MAAA,eAAA,GAAoBlM,cAApB,EAAA;AAAA,MAAQmC,OAAR,GAAA,eAAA,CAAA,OAAA;;AACA,MAAA,SAAA,GAA4C6G,QAAQ,CAApD,KAAoD,CAApD;AAAA,MAAOmD,cAAP,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MAAuBC,iBAAvB,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAa;AACjCH,IAAAA,QAAQ,IAAIA,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,CAAAA,EAAZA,SAAYA,CAAZA;AACAE,IAAAA,iBAAiB,CAAjBA,IAAiB,CAAjBA;AACA,QAAM7L,KAAK,GAAGyL,aAAa,CAAbA,KAAAA,CAAAA,KAAAA,CAAAA,EAAd,SAAcA,CAAd;AACA7J,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,wBAAAA,EAAuC;AAAEQ,MAAAA,IAAI,EAAN,IAAA;AAAQpC,MAAAA,KAAK,EAAb,KAAA;AAAewD,MAAAA,KAAK,EAALA;AAAf,KAAvC5B;AAJF,GAAA;;AAOA,SAAO;AACLgK,IAAAA,cAAc,EADT,cAAA;AAELD,IAAAA,QAAQ,EAAEG;AAFL,GAAP;AAVF,CAAA;;ACJA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,MAAA,EAAA,KAAA,EAAmB;AACvC,SAAO,OAAA,MAAA,KAAA,QAAA,GAA6BrL,MAAM,CAANA,OAAAA,CAAAA,IAAAA,EAA7B,KAA6BA,CAA7B,GAA2DA,MAAM,CAAxE,KAAwE,CAAxE;AADF,CAAA;;;;ACUA,IAAMsL,QAAQ,GAAG,SAAXA,QAAW,CAAA,IAAA,EAAsG;AAAA,MAAnG5J,IAAmG,GAAA,IAAA,CAAnGA,IAAmG;AAAA,MAA7FgB,IAA6F,GAAA,IAAA,CAA7FA,IAA6F;AAAA,MAAvFC,KAAuF,GAAA,IAAA,CAAvFA,KAAuF;AAAA,MAAhFC,WAAgF,GAAA,IAAA,CAAhFA,WAAgF;AAAA,MAAnEC,MAAmE,GAAA,IAAA,CAAnEA,MAAmE;AAAA,MAAA,aAAA,GAAA,IAAA,CAA3D0I,QAA2D;AAAA,MAAjDhB,IAAiD,GAAA,aAAA,KAAA,KAAA,CAAA,GAA1C,CAA0C,GAAA,aAAA;AAAA,MAAvCU,QAAuC,GAAA,IAAA,CAAvCA,QAAuC;AAAA,MAA7B3L,KAA6B,GAAA,IAAA,CAA7BA,KAA6B;AAAA,MAAtBU,MAAsB,GAAA,IAAA,CAAtBA,MAAsB;AAAA,MAAXa,IAAW,GAAA,6BAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AACrH,MAAM2K,MAAM,GAAGxB,QAAf,EAAA;;AACA,MAAMjH,SAAS,GAAGT,IAAI,CAAA,MAAA,EAAtB,MAAsB,CAAtB;;AACA,MAAMU,UAAU,GAAGV,IAAI,CAAA,MAAA,EAAvB,OAAuB,CAAvB;;AACA,MAAA,eAAA,GAAgCvD,cAAhC,EAAA;AAAA,MAAQ0H,SAAR,GAAA,eAAA,CAAA,SAAA;AAAA,MAAmB1B,QAAnB,GAAA,eAAA,CAAA,QAAA;;AACA,MAAMjC,KAAK,GAAG7B,OAAO,CAAC,YAAA;AAAA,WAAMiI,MAAM,CAACC,QAAQ,CAAIzH,IAAJ,GAArB,GAAqB,CAAT,CAAZ;AAAD,GAAA,EAAqC,CAA1D,IAA0D,CAArC,CAArB;;AACA,MAAM0C,KAAK,GAAG9B,IAAI,CAAA,SAAA,EAAA,KAAlB,IAAkB,CAAlB;;AACA,MAAM+B,SAAS,GAAG/B,IAAI,CAAA,KAAA,EAAA,MAAA,EAAJA,EAAI,CAAJA,CAAlB,KAAkBA,CAAlB;;AACA,MAAMW,QAAQ,GAAGoH,YAAY,CAAC;AAAE3I,IAAAA,IAAI,EAAN,IAAA;AAAQgB,IAAAA,IAAI,EAAZ,IAAA;AAAcC,IAAAA,KAAK,EAAnB,KAAA;AAAqBC,IAAAA,WAAW,EAAhC,WAAA;AAAkCC,IAAAA,MAAM,EAAxC,MAAA;AAA0CvD,IAAAA,KAAK,EAA/C,KAAA;AAAiDwD,IAAAA,KAAK,EAAtD,KAAA;AAAwDC,IAAAA,SAAS,EAAjE,SAAA;AAAmEC,IAAAA,UAAU,EAAVA;AAAnE,GAAD,CAA7B;AACA,MAAM4C,QAAQ,GAAG0E,WAAW,CAAC;AAAE5I,IAAAA,IAAI,EAAN,IAAA;AAAQoB,IAAAA,KAAK,EAAb,KAAA;AAAeyH,IAAAA,IAAI,EAAJA;AAAf,GAAD,CAA5B;;AACA,MAAA,mBAAA,GAAiDS,kBAAkB,CAAC;AAAEtJ,IAAAA,IAAI,EAAN,IAAA;AAAQoB,IAAAA,KAAK,EAAb,KAAA;AAAemI,IAAAA,QAAQ,EAARA;AAAf,GAAD,CAAnE;AAAA,MAAQC,cAAR,GAAA,mBAAA,CAAA,cAAA;AAAA,MAAkCO,UAAlC,GAAA,mBAAA,CAAA,QAAA;;AACA,SAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE/J,IAAAA,IAAI,EAFN,IAAA;AAGEiB,IAAAA,KAAK,EAHP,KAAA;AAIEM,IAAAA,QAAQ,EAJV,QAAA;AAKE8B,IAAAA,QAAQ,EALV,QAAA;AAME0B,IAAAA,SAAS,EANX,SAAA;AAOE/D,IAAAA,IAAI,EAPN,IAAA;AAQEK,IAAAA,SAAS,EARX,SAAA;AASEC,IAAAA,UAAU,EATZ,UAAA;AAUEiI,IAAAA,QAAQ,EAVV,UAAA;AAWEC,IAAAA,cAAc,EAXhB,cAAA;AAYE5L,IAAAA,KAAK,EAAEgD,IAAI,CAAA,SAAA,EAZb,OAYa,CAZb;AAaEoJ,IAAAA,eAAe,EAbjB,QAAA;AAcEC,IAAAA,QAAQ,EAAErJ,IAAI,CAAA,SAAA,EAAA,iBAAA,EAdhB,CAcgB,CAdhB;AAeEtC,IAAAA,MAAM,EAAEqL,aAAa,CAACrL,MAAM,IAAIsC,IAAI,CAAA,SAAA,EAAA,cAAA,EAAf,EAAe,CAAf,EAAA,KAAA;AAfvB,GAAA,CAAA;AAXF,CAAA;;ACRA,IAAMsJ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAA,eAAA,GAAoB7M,cAApB,EAAA;AAAA,MAAQmC,OAAR,GAAA,eAAA,CAAA,OAAA;;AACA+C,EAAAA,OAAO,CAAPA,IAAAA,CAAAA,sBAAAA;AACA,SAAA,OAAA;AAHF,CAAA;;ACCA,IAAM4H,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAA,eAAA,GAAoB9M,cAApB,EAAA;AAAA,MAAQmC,OAAR,GAAA,eAAA,CAAA,OAAA;;AACA,SAAO;AACL4K,IAAAA,OAAO,EAAE3D,WAAW,CAAC,YAAM;AACzBjH,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,iBAAAA;AADkB,KAAA,EAEjB,CAFiB,OAEjB,CAFiB;AADf,GAAP;AAFF,CAAA;;ACAA,IAAM6K,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAA,SAAA,GAAkChE,QAAQ,CAA1C,KAA0C,CAA1C;AAAA,MAAOiE,SAAP,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MAAkBC,YAAlB,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,MAAA,eAAA,GAA4BlN,cAA5B,EAAA;AAAA,MAAQ2H,MAAR,GAAA,eAAA,CAAA,MAAA;AAAA,MAAgBxF,OAAhB,GAAA,eAAA,CAAA,OAAA;;AACA0G,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMR,MAAM,GAAG,OAAO,CAAP,WAAA,CAAA,sBAAA,EAA4C,YAAM;AAC/D6E,MAAAA,YAAY,CAAZA,KAAY,CAAZA;AADF,KAAe,CAAf;AAGA,WAAO,YAAM;AACX7E,MAAAA,MAAM,IAAIA,MAAM,CAAhBA,MAAUA,EAAVA;AADF,KAAA;AAJO,GAAA,EAON,CAPHQ,OAOG,CAPM,CAATA;AAQA,SAAO;AACLoE,IAAAA,SAAS,EADJ,SAAA;AAELtF,IAAAA,MAAM,EAFD,MAAA;AAGLoF,IAAAA,OAAO,EAAE3D,WAAW,CAClB,YAAa;AACX8D,MAAAA,YAAY,CAAZA,IAAY,CAAZA;;AADW,WAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAATpL,IAAS,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAATA,QAAAA,IAAS,CAAA,IAAA,CAATA,GAAS,SAAA,CAAA,IAAA,CAATA;AAAS;;AAEXK,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,aAAAA,EAAAA,IAAAA;AAHgB,KAAA,EAKlB,CAAA,OAAA,EALkB,YAKlB,CALkB;AAHf,GAAP;AAXF,CAAA;;ACDA,IAAMgL,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAA,eAAA,GAAmBnN,cAAnB,EAAA;AAAA,MAAQmJ,MAAR,GAAA,eAAA,CAAA,MAAA;;AACAjE,EAAAA,OAAO,CAAPA,IAAAA,CAAAA,sBAAAA;AACA,SAAA,MAAA;AAHF,CAAA;;ACGA,IAAMrF,SAAO,GAAGC,aAAa,CAA7B,EAA6B,CAA7B;AAEA,IAAQC,UAAR,GAAqBF,SAArB,CAAA,QAAA;AAEA,IAAMuN,SAAS,GAAGjC,UAAU,CAAC,UAAA,IAAA,EAAA,GAAA,EAA6B;AAAA,MAA1BxI,IAA0B,GAAA,IAAA,CAA1BA,IAA0B;AAAA,MAApBsH,QAAoB,GAAA,IAAA,CAApBA,QAAoB;;AACxD,MAAA,SAAA,GAAwBjB,QAAQ,CAAhC,EAAgC,CAAhC;AAAA,MAAOqE,IAAP,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MAAaC,OAAb,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,MAAA,eAAA,GAAoBtN,cAApB,EAAA;AAAA,MAAQmC,OAAR,GAAA,eAAA,CAAA,OAAA;;AACA0G,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM0E,GAAG,GAAG,OAAO,CAAP,WAAA,CAAA,eAAA,EAAqC,UAAA,KAAA,EAAc;AAAA,UAAX9H,IAAW,GAAA,KAAA,CAAXA,IAAW;AAC7D6H,MAAAA,OAAO,CAAC,YAAM;AACZ,eAAO,CAACnK,KAAK,CAALA,OAAAA,CAAcsC,IAAI,CAAlBtC,IAAkB,CAAlBA,IAA4BsC,IAAI,CAAhCtC,IAAgC,CAAhCA,GAAD,EAAA,EAAA,GAAA,CAAkD,UAAA,KAAA,EAAA,KAAA,EAAA;AAAA,iBAAA,KAAA;AAAzD,SAAO,CAAP;AADFmK,OAAO,CAAPA;AADF,KAAY,CAAZ;AAKA,WAAO,YAAM;AACXC,MAAAA,GAAG,CAAHA,MAAAA;AADF,KAAA;AANO,GAAA,EASN,CAAA,OAAA,EATH1E,IASG,CATM,CAATA;AAWA,MAAM2E,KAAK,GAAGpE,WAAW,CAAC,YAAM;AAC9BkE,IAAAA,OAAO,CAAC,UAAA,IAAA,EAAQ;AACd,UAAID,IAAI,CAAJA,MAAAA,KAAJ,CAAA,EAAuB;AACrB,eAAO,CAAP,CAAO,CAAP;AACD;;AACD,UAAM3C,OAAO,GAAG2C,IAAI,CAAJA,KAAAA,CAAhB,CAAgBA,CAAhB;AACA3C,MAAAA,OAAO,CAAPA,IAAAA,CAAa2C,IAAI,CAACA,IAAI,CAAJA,MAAAA,GAALA,CAAI,CAAJA,GAAb3C,CAAAA;AACA,aAAA,OAAA;AANF4C,KAAO,CAAPA;AADuB,GAAA,EAAzB,EAAyB,CAAzB;AAWA,MAAMG,QAAQ,GAAGrE,WAAW,CAAC,UAAA,GAAA,EAAO;AAClCkE,IAAAA,OAAO,CAAC,UAAA,IAAA,EAAQ;AACd,UAAMvJ,KAAK,GAAGsJ,IAAI,CAAJA,OAAAA,CAAd,GAAcA,CAAd;AACA,UAAM3C,OAAO,GAAG2C,IAAI,CAAJA,KAAAA,CAAhB,CAAgBA,CAAhB;AACA3C,MAAAA,OAAO,CAAPA,MAAAA,CAAAA,KAAAA,EAAAA,CAAAA;AACA,aAAA,OAAA;AAJF4C,KAAO,CAAPA;AAD0B,GAAA,EAA5B,EAA4B,CAA5B;AASA9D,EAAAA,mBAAmB,CAAA,GAAA,EAAM,YAAM;AAC7B,WAAO;AACLgE,MAAAA,KAAK,EADA,KAAA;AAELC,MAAAA,QAAQ,EAARA;AAFK,KAAP;AADFjE,GAAmB,CAAnBA;AAMA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACE,IAAA,KAAK,EAAE;AACLgE,MAAAA,KAAK,EADA,KAAA;AAELC,MAAAA,QAAQ,EAARA;AAFK;AADT,GAAA,EAKG,IAAI,CAAJ,GAAA,CAAS,UAAA,GAAA,EAAG;AAAA,WAAA,aACX,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAO,MAAA,GAAG,EAAV,GAAA;AAAiB,MAAA,IAAI,EAAE9K;AAAvB,KAAA,EACGsH,QAAQ,CAAA,GAAA,EAAM;AAAEuD,MAAAA,KAAK,EAAP,KAAA;AAASC,MAAAA,QAAQ,EAARA;AAAT,KAAN,CADX,CADW;AAPnB,GAOO,CALH,CADF,CADF;AAxCF,CAA4B,CAA5B;;AAyDAL,SAAS,CAATA,SAAAA,GAAsB,YAAM;AAC1B,SAAOnN,UAAU,CAAjB,SAAiB,CAAjB;AADFmN,CAAAA;;ICnDaM,IAAI,GAAG;AAClBxN,EAAAA,UAAU,EADQ,UAAA;AAElBO,EAAAA,OAAO,EAFW,OAAA;AAGlBC,EAAAA,WAAW,EAAXA;AAHkB,C","sourcesContent":["import { createContext, useContext } from 'react';\n\nconst context = createContext({});\n\nexport default context;\nexport const { Provider, Consumer } = context;\nexport const useFormContext = () => useContext(context);\n","import isPlainObject from 'lodash/isPlainObject';\nimport getValues from 'lodash/values';\nimport isArray from 'lodash/isArray';\n\nexport const isNotEmpty = value => {\n  if (isPlainObject(value)) {\n    const values = getValues(value);\n    return values.length > 0 && values.some(item => !!item);\n  } else if (isArray(value)) {\n    return value.length > 0;\n  } else if (typeof value === 'number') {\n    return !isNaN(value);\n  } else {\n    return !(value === undefined || value === null || value === '' || value.length === 0);\n  }\n};\n\nexport const isEmpty = value => !isNotEmpty(value);\n\nexport const filterEmpty = (value = {}) => {\n  const output = {};\n  Object.keys(value).forEach(key => {\n    const current = value[key];\n    if (isNotEmpty(current)) {\n      output[key] = current;\n    }\n  });\n  return output;\n};\n","import { isNotEmpty } from './empty';\n\nconst RULES = {\n  REQ: function (value) {\n    return {\n      result: isNotEmpty(value),\n      errMsg: ''\n    };\n  },\n  TEL: function (value) {\n    return {\n      result: /^1[0-9]{10}$/.test(value),\n      errMsg: '请输入有效的手机号'\n    };\n  },\n  EMAIL: function (value) {\n    return {\n      result: /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(value),\n      errMsg: '请输入有效的邮箱'\n    };\n  },\n  LEN: function (value, start, end) {\n    value = value.toString();\n    if (end === start && value.length !== Number(end)) {\n      return {\n        result: false,\n        errMsg: `%s长度必须等于${end}`\n      };\n    }\n    if (value.length < start) {\n      return {\n        result: false,\n        errMsg: `%s长度必须大于${start}`\n      };\n    }\n    if (end && value.length > end) {\n      return {\n        result: false,\n        errMsg: `%s长度必须小于${end}`\n      };\n    }\n    return { result: true };\n  }\n};\nexport default RULES;\nexport const presetRules = (newRules = {}) => {\n  Object.assign(RULES, newRules);\n};\n","import { useRef, useMemo } from 'react';\nimport fbemitter from 'fbemitter';\n\nconst { EventEmitter } = fbemitter;\n\nclass FormEventEmitter extends EventEmitter {\n  constructor(debug) {\n    super();\n    this.debug = debug;\n  }\n\n  emit(...args) {\n    if (this.debug) {\n      console.log('[react-form][debug]:', ...args);\n    }\n    super.emit(...args);\n  }\n}\n\nconst useEvent = debug => {\n  const debugRef = useRef(debug);\n  return useMemo(() => {\n    const emitter = new FormEventEmitter(debugRef.current);\n    return {\n      addListener: (...args) => emitter.addListener(...args),\n      emit: (...args) => emitter.emit(...args),\n      removeAllListeners: (...args) => emitter.removeAllListeners(...args),\n      listeners: (...args) => emitter.listeners(...args),\n      once: (...args) => emitter.once(...args)\n    };\n  }, []);\n};\n\nexport default useEvent;\n","const fieldAddCreator =\n  ({ formStateRef, setFormState }) =>\n  ({ name }) => {\n    const fieldItem = Object.assign({}, formStateRef.current[name]);\n    if (!fieldItem.field) {\n      fieldItem.field = { name };\n      fieldItem.data = {};\n    }\n    setFormState(Object.assign({}, formStateRef.current, { [name]: fieldItem }));\n  };\n\nexport default fieldAddCreator;\n","import compose from '@kne/compose';\nimport _get from 'lodash/get';\nimport _uniqBy from 'lodash/uniqBy';\n\nconst interceptors = {\n  input: [],\n  output: []\n};\n\ninterceptors.input.use = (name, func) => {\n  return interceptors.input.push({\n    name,\n    exec: func\n  });\n};\n\ninterceptors.output.use = (name, func) => {\n  return interceptors.output.push({\n    name,\n    exec: func\n  });\n};\n\nexport default interceptors;\n\nconst baseInterceptors = interceptors;\n\nexport const runInterceptors = (interceptors, type, names) => {\n  if (!Array.isArray(names)) {\n    names = [names];\n  }\n\n  const currentInterceptors = _uniqBy(\n    baseInterceptors[type]\n      .concat(_get(interceptors, type, []))\n      .filter(({ name }) => names.indexOf(name) > -1)\n      .reverse(),\n    ({ name }) => name\n  );\n\n  if (currentInterceptors.length === 0) {\n    return value => value;\n  }\n  return compose(...currentInterceptors.map(({ exec }) => exec));\n};\n","import { runInterceptors } from '../interceptors';\nimport _last from 'lodash/last';\nimport _get from 'lodash/get';\n\nconst fieldEditCreator =\n  ({ formStateRef, setFormState, initDataRef, otherProps }) =>\n  ({ name, rule, label, interceptor, value, noTrim, index, groupName, groupIndex, fieldRef }) => {\n    const fieldItem = Object.assign({}, formStateRef.current[name]);\n    const fieldItemData = Object.assign({}, fieldItem.data[index], {\n      index: groupIndex,\n      SymbolIndex: index,\n      label,\n      noTrim,\n      groupName,\n      fieldRef,\n      interceptor\n    });\n\n    if (!fieldItemData.value) {\n      fieldItemData.value = runInterceptors(\n        otherProps.current.interceptors,\n        'input',\n        interceptor\n      )(\n        value ||\n          (() => {\n            if (groupName && _last(groupName.split('.')) === name) {\n              return _get(initDataRef.current, `${groupName}[\"${groupIndex}\"]`);\n            }\n            if (groupName) {\n              return _get(initDataRef.current, `${groupName}[\"${groupIndex}\"].${name}`);\n            }\n            return _get(initDataRef.current, name);\n          })()\n      );\n    }\n\n    fieldItem.data[index] = Object.assign({}, fieldItemData, {\n      rule,\n      index: groupIndex,\n      SymbolIndex: index,\n      noTrim,\n      groupName,\n      fieldRef,\n      interceptor\n    });\n\n    setFormState(Object.assign({}, formStateRef.current, { [name]: fieldItem }));\n  };\n\nexport default fieldEditCreator;\n","const fieldRemoveCreator = ({ formStateRef, setFormState }) => ({ name, index }) => {\n  const state = Object.assign({}, formStateRef.current);\n  const fieldItem = Object.assign({}, formStateRef.current[name]);\n  if (fieldItem.data) {\n    delete fieldItem.data[index];\n    if (Object.getOwnPropertySymbols(fieldItem.data).length === 0) {\n      delete state[name];\n    } else {\n      state[name] = fieldItem;\n    }\n  }\n  setFormState(state);\n};\n\nexport default fieldRemoveCreator;\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","const ruleValidate = async ({ filed, value, formRules, getFormData }) => {\n  if (typeof filed.rule === 'function') {\n    return await filed.rule(value);\n  }\n  if (typeof filed.rule === 'object' && filed.rule instanceof RegExp) {\n    return {\n      result: filed.rule.test(value),\n      errMsg: ''\n    };\n  }\n  if (typeof filed.rule === 'string') {\n    const rules = filed.rule.split(' ').filter(str => str.length > 0);\n    for (let currentRule of rules) {\n      let [key, ...args] = currentRule.split('-');\n      const exec = formRules[key.toUpperCase()];\n      if (typeof exec === 'function') {\n        //空值处理 如果不为REQ规则的规则REQ判断不通过返回正确\n        if (currentRule !== 'REQ') {\n          const emptyRes = formRules['REQ'](value, ...args, getFormData);\n          if (emptyRes.result !== true) {\n            return {\n              result: true,\n              errMsg: ''\n            };\n          }\n        }\n\n        const res = await exec(value, ...args, getFormData);\n        if (res.result !== true) {\n          return {\n            result: false,\n            errMsg: res.errMsg\n          };\n        }\n      } else {\n        console.error(`校验规则${currentRule}不在当前form的rules里面，请确认${filed.name}的校验规则${filed.rule}是否正确`);\n      }\n    }\n  }\n  return {\n    result: true,\n    errMsg: ''\n  };\n};\n\nexport default ruleValidate;\n","const createSetFieldInfo = ({ formStateRef }) => ({ name, index, key, value }) => {\n  const prevState = formStateRef.current;\n  const field = Object.assign({}, prevState[name]);\n  const fieldData = Object.assign({}, field.data);\n  const fieldDataItem = Object.assign({}, fieldData[index]);\n  fieldDataItem[key] = value;\n  fieldData[index] = fieldDataItem;\n  field.data = fieldData;\n  return Object.assign({}, prevState, { [name]: field });\n};\n\nexport default createSetFieldInfo;\n","import _get from 'lodash/get';\nimport _set from 'lodash/set';\nimport _last from 'lodash/last';\nimport { runInterceptors } from './interceptors';\n\nexport const getFields = (data, callback) => {\n  const output = {};\n  Object.keys(data).forEach(name => {\n    const field = data[name].data;\n    const fieldData = Object.getOwnPropertySymbols(field);\n    fieldData.forEach(index => {\n      const item = field[index],\n        groupName = item.groupName;\n      if (groupName) {\n        if (!_get(output, groupName)) {\n          _set(output, groupName, []);\n        }\n        const targetIndex = item.index;\n        if (!_get(output, groupName)[targetIndex]) {\n          _set(output, `${groupName}[${targetIndex}]`, {});\n        }\n        if (_last(groupName.split('.')) === name) {\n          _set(output, `${groupName}[${targetIndex}]`, callback(item, data[name].field));\n          return;\n        }\n\n        _set(output, `${groupName}[${targetIndex}].${name}`, callback(item, data[name].field));\n        return;\n      }\n\n      _set(output, `${name}`, callback(item, data[name].field));\n    });\n  });\n\n  return output;\n};\n\nexport const computedFormData = (data, interceptors) => {\n  return getFields(data, item => {\n    if (item.value === void 0) {\n      return item.value;\n    }\n    return runInterceptors(interceptors, 'output', item.interceptor)(item.value);\n  });\n};\n\nexport const parseFormData = (data, formData, interceptors) => {\n  data = Object.assign({}, data);\n  formData = Object.assign({}, formData);\n  Object.keys(data).forEach(name => {\n    const field = data[name].data;\n    const fieldData = Object.getOwnPropertySymbols(field);\n\n    fieldData.forEach(index => {\n      const item = Object.assign({}, field[index]),\n        groupName = item.groupName;\n\n      const targetIndex = item.index;\n      const value = (() => {\n        if (groupName && _last(groupName.split('.')) === name) {\n          return _get(formData, `${groupName}[${targetIndex}]`);\n        }\n        if (groupName) {\n          return _get(formData, `${groupName}[${targetIndex}].${name}`);\n        }\n        return _get(formData, name);\n      })();\n\n      if (value !== void 0) {\n        item.value = runInterceptors(interceptors, 'input', item.interceptor)(value);\n        item.validate = {\n          status: 0,\n          msg: ''\n        };\n        data[name].data[index] = item;\n      }\n    });\n  });\n  return data;\n};\n\nexport const computedIsPass = data => {\n  return Object.keys(data).every(name => {\n    const field = data[name].data;\n    return Object.getOwnPropertySymbols(field).every(index => {\n      const item = field[index];\n      return _get(item, 'validate.status') === 1;\n    });\n  });\n};\n\nexport const computedError = data => {\n  const output = [];\n  Object.keys(data).forEach(name => {\n    const field = data[name].data;\n    Object.getOwnPropertySymbols(field).forEach(index => {\n      const item = field[index];\n      if (_get(item, 'validate.status') === 2) {\n        const targetIndex = item.index,\n          groupName = item.groupName,\n          fieldRef = item.fieldRef;\n        output.push(Object.assign({}, item.validate, { name, groupName, fieldRef, index: targetIndex }));\n      }\n    });\n  });\n  return output;\n};\n","import ruleValidate from './ruleValidate';\nimport createSetFieldInfo from './createSetFieldInfo';\nimport { computedFormData } from '../util';\nimport _get from 'lodash/get';\n\nconst fieldValidateCreator = ({ formStateRef, setFormState, otherProps, taskQueue, emitter }) => {\n  const setFieldInfo = createSetFieldInfo({ formStateRef });\n  return ({ name, index }) => {\n    const item = formStateRef.current[name];\n    // 初始化校验状态\n    setFormState(\n      setFieldInfo({\n        name,\n        index,\n        key: 'validate',\n        value: {\n          status: 3,\n          msg: ''\n        }\n      })\n    );\n    //处理空格的情况\n    const value = _get(item.data[index], 'value'),\n      noTrim = _get(item.data[index], 'noTrim');\n    let trimValue = value;\n    if (typeof value === 'string' && noTrim !== true) {\n      trimValue = value.trim();\n      if (value !== trimValue) {\n        emitter.emit('form-field-data-change', { name, value: trimValue, index });\n      }\n    }\n    //添加任务\n    taskQueue.append({\n      id: index,\n      runner: () => {\n        return ruleValidate({\n          filed: Object.assign({}, item.field, { rule: item.data[index].rule }),\n          value: trimValue,\n          formRules: otherProps.current.rules,\n          getFormData: () => {\n            return computedFormData(formStateRef.current);\n          }\n        });\n      },\n      complete: validate => {\n        const validateRes = {\n          status: validate.result === true ? 1 : 2,\n          msg: validate.errMsg\n        };\n        setFormState(\n          setFieldInfo({\n            name,\n            index,\n            key: 'validate',\n            value: validateRes\n          })\n        );\n        emitter.emit('form-field-validate-complete', {\n          name,\n          value: trimValue,\n          index,\n          validate: validateRes\n        });\n      }\n    });\n  };\n};\n\nexport default fieldValidateCreator;\n","import createSetFieldInfo from './createSetFieldInfo';\n\nconst fieldDataChangeCreator = ({ formStateRef, setFormState }) => {\n  const setFieldInfo = createSetFieldInfo({ formStateRef });\n  return ({ name, value, index }) => {\n    setFormState(\n      setFieldInfo({\n        name,\n        index,\n        key: 'value',\n        value: value\n      })\n    );\n    setFormState(\n      setFieldInfo({\n        name,\n        index,\n        key: 'validate',\n        value: {\n          status: 0,\n          msg: ''\n        }\n      })\n    );\n  };\n};\n\nexport default fieldDataChangeCreator;\n","const validateAllFieldsCreator = ({ formStateRef, taskQueue, emitter }) => () => {\n  Object.keys(formStateRef.current).forEach(name => {\n    const field = formStateRef.current[name];\n    Object.getOwnPropertySymbols(field.data).forEach(index => {\n      emitter.emit('form-field-validate', { name, index });\n    });\n  });\n  return Promise.all(taskQueue.queue.map(task => task.target));\n};\n\nexport default validateAllFieldsCreator;\n","import { parseFormData } from '../util';\nimport validateAllFieldsCreator from './validateAllFieldsCreator';\n\nconst dataSetCreator = ({ setFormState, formStateRef, initDataRef, otherProps, taskQueue, emitter }) => {\n  const validateAllFields = validateAllFieldsCreator({ formStateRef, taskQueue, emitter });\n  return ({ data, runValidate = true }) => {\n    initDataRef.current = data;\n    setFormState(parseFormData(formStateRef.current, data, otherProps.current.interceptors));\n    runValidate && validateAllFields();\n  };\n};\n\nexport default dataSetCreator;\n","const dataResetCreator = ({ initDataRef, setFormState, formStateRef }) => () => {\n  initDataRef.current = {};\n  const data = Object.assign({}, formStateRef.current);\n  Object.keys(data).forEach(name => {\n    const fieldData = data[name].data;\n    Object.getOwnPropertySymbols(data[name].data).forEach(index => {\n      delete fieldData[index].validate;\n      delete fieldData[index].value;\n    });\n  });\n  setFormState(data);\n};\n\nexport default dataResetCreator;\n","import _get from 'lodash/get';\n\nconst dataSetFieldCreator = ({ setFormState, formStateRef }) => ({ name, value }) => {\n  const groupName = value.groupName;\n  const groupIndex = value.groupIndex;\n  const data = Object.assign({}, formStateRef.current);\n  let fieldData = _get(data[name], 'data');\n  if (!groupName) {\n    fieldData = {};\n    Object.getOwnPropertySymbols(fieldData).forEach(index => {\n      fieldData[index] = Object.assign({}, fieldData[index], value);\n    });\n  } else {\n    const index = Object.getOwnPropertySymbols(fieldData).find(index => {\n      const data = _get(fieldData, `[${index}]`);\n      return _get(data, 'groupName') === groupName && _get(data, 'groupIndex') === groupIndex;\n    });\n    fieldData[index] = Object.assign({}, fieldData[index], value);\n  }\n\n  setFormState(Object.assign({}, data, { [name]: fieldData }));\n};\n\nexport default dataSetFieldCreator;\n","import { computedIsPass, computedFormData, computedError } from '../util';\nimport validateAllFieldsCreator from './validateAllFieldsCreator';\n\nconst submitCreator = ({ formStateRef, taskQueue, otherProps, emitter }) => {\n  const validateAllFields = validateAllFieldsCreator({ formStateRef, taskQueue, emitter });\n  return args => {\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n    const { onPrevSubmit, onError, onSubmit, interceptors } = otherProps.current;\n    validateAllFields()\n      .then(async () => {\n        const formState = formStateRef.current;\n        const isPass = computedIsPass(formState);\n        if (!isPass) {\n          const errors = computedError(formState);\n          emitter.emit('form-submit-error', errors);\n          onError && (await onError(errors, ...args));\n          return false;\n        }\n        const formData = computedFormData(formState, interceptors);\n        emitter.emit('form-prev-submit');\n        if (onPrevSubmit && (await onPrevSubmit(formData, ...args)) === false) {\n          emitter.emit('form-prev-submit-error');\n          return false;\n        }\n        onSubmit && (await onSubmit(formData, ...args));\n        emitter.emit('form-submit-success', formData);\n        return true;\n      })\n      .then(\n        res => {\n          emitter.emit('form-submit-end', res);\n        },\n        e => {\n          console.error(e);\n          emitter.emit('form-error', e);\n        }\n      )\n      .then(() => {\n        emitter.emit('form-submit-complete');\n      });\n  };\n};\n\nexport default submitCreator;\n","export class Task {\n  constructor({ id, runner, complete }) {\n    this.id = id;\n    this.isCancel = false;\n    this.target = Promise.race([\n      Promise.resolve(runner()),\n      new Promise(resolve => {\n        this.resolve = resolve;\n      })\n    ]).then(res => {\n      if (this.isCancel) {\n        return new Promise(() => {\n          // 返回 <pending> 状态的promise对象阻止后续的then回调触发\n        });\n      }\n      return res;\n    });\n    this.target.then((...args) => {\n      return Promise.resolve(complete(...args));\n    });\n  }\n\n  cancel(...args) {\n    if (this.isCancel === true) {\n      return;\n    }\n    this.isCancel = true;\n    this.resolve(...args);\n  }\n}\n\nexport class TaskQueue {\n  constructor() {\n    this.queue = [];\n  }\n\n  append(taskConfig) {\n    const proxyTaskComplete = new Proxy(taskConfig.complete, {\n      apply: (target, thisArg, argumentsList) => {\n        const res = target.apply(thisArg, argumentsList);\n        this.queue.splice(index, 1);\n        return res;\n      }\n    });\n    taskConfig.complete = proxyTaskComplete;\n    const task = new Task(taskConfig);\n\n    const currentTask = this.queue.find(({ id }) => task.id === id);\n    if (currentTask) {\n      const currentIndex = this.queue.indexOf(currentTask);\n      currentTask.cancel();\n      this.queue.splice(currentIndex, 1);\n    }\n    const index = this.queue.push(task);\n  }\n}\n\nexport default TaskQueue;\n","import useEvent from '../useEvent';\nimport { useEffect, useRef } from 'react';\nimport fieldAddCreator from './fieldAddCreator';\nimport fieldEditCreator from './fieldEditCreator';\nimport fieldRemoveCreator from './fieldRemoveCreator';\nimport fieldValidateCreator from './fieldValidateCreator';\nimport fieldDataChangeCreator from './fieldDataChangeCreator';\nimport dataSetCreator from './dataSetCreator';\nimport dataResetCreator from './dataResetCreator';\nimport dataSetFieldCreator from './dataSetFieldCreator';\nimport submitCreator from './submitCreator';\nimport { TaskQueue } from './TaskQueue';\n\nconst usePropsRef = props => {\n  const propsRef = useRef({});\n  Object.keys(props).forEach(name => {\n    propsRef.current[name] = props[name];\n  });\n  return propsRef;\n};\n\nconst useFormEvent = ({ debug, interceptors, rules, formStateRef, initDataRef, setFormState, onPrevSubmit, onError, onSubmit }) => {\n  const emitter = useEvent(debug);\n  const otherProps = usePropsRef({\n    onPrevSubmit,\n    onError,\n    onSubmit,\n    rules,\n    interceptors\n  });\n  otherProps.current = {\n    onPrevSubmit,\n    onError,\n    onSubmit,\n    rules,\n    interceptors\n  };\n  useEffect(() => {\n    const taskQueue = new TaskQueue();\n    emitter.addListener(\n      'form-field-add',\n      fieldAddCreator({\n        formStateRef,\n        setFormState\n      })\n    );\n    emitter.addListener(\n      'form-field-edit',\n      fieldEditCreator({\n        formStateRef,\n        initDataRef,\n        setFormState,\n        otherProps\n      })\n    );\n    emitter.addListener('form-field-remove', fieldRemoveCreator({ formStateRef, setFormState }));\n    emitter.addListener(\n      'form-field-validate',\n      fieldValidateCreator({\n        formStateRef,\n        setFormState,\n        taskQueue,\n        otherProps,\n        emitter\n      })\n    );\n    emitter.addListener('form-field-data-change', fieldDataChangeCreator({ formStateRef, setFormState }));\n    emitter.addListener(\n      'form-data-set',\n      dataSetCreator({\n        setFormState,\n        formStateRef,\n        initDataRef,\n        otherProps,\n        taskQueue,\n        emitter\n      })\n    );\n    emitter.addListener('form-data-reset', dataResetCreator({ initDataRef, setFormState, formStateRef }));\n    emitter.addListener('form-data-set-field', dataSetFieldCreator({ setFormState, formStateRef }));\n    emitter.addListener(\n      'form-submit',\n      submitCreator({\n        formStateRef,\n        taskQueue,\n        otherProps,\n\n        onPrevSubmit: otherProps.current.onPrevSubmit,\n        onError: otherProps.current.onError,\n        onSubmit: otherProps.current.onSubmit,\n        rules: otherProps.current.rules,\n        emitter\n      })\n    );\n    return () => {\n      emitter.removeAllListeners();\n    };\n  }, [emitter, formStateRef, initDataRef, otherProps, setFormState]);\n  return emitter;\n};\n\nexport default useFormEvent;\n","import { useCallback, useMemo, useRef, useState } from 'react';\nimport { getFields, computedFormData, computedIsPass } from '../util';\n\nconst useFormState = props => {\n  const [state, setState] = useState({});\n  const stateRef = useRef({});\n  const dataRef = useRef({});\n  const propsRef = useRef(props);\n  propsRef.current = props;\n  const formData = useMemo(() => {\n    return computedFormData(state, propsRef.current.interceptors);\n  }, [state]);\n\n  const fields = useMemo(() => {\n    return getFields(state, (item, field) => {\n      return {\n        field: item,\n        label: field.label,\n        name: field.name,\n        rule: field.rule\n      };\n    });\n  }, [state]);\n  const isPass = useMemo(() => {\n    return computedIsPass(state);\n  }, [state]);\n  const setFormState = useCallback(state => {\n    if (typeof state === 'function') {\n      setState(oldState => {\n        const newState = state(oldState);\n        stateRef.current = newState;\n        return newState;\n      });\n    } else {\n      stateRef.current = state;\n      setState(state);\n    }\n  }, []);\n  stateRef.current = state;\n  dataRef.current = formData;\n\n  return {\n    formState: state,\n    formStateRef: stateRef,\n    formData,\n    fields,\n    isPass,\n    formDataRef: dataRef,\n    setFormState\n  };\n};\n\nexport default useFormState;\n","import { useImperativeHandle } from 'react';\n\nconst useOpenApi = ({ emitter, fields, interceptors, formState, formData, isPass }, ref) => {\n  useImperativeHandle(\n    ref,\n    () => {\n      return {\n        emitter,\n        submit: (...args) => {\n          emitter.emit('form-submit', args);\n        },\n        get isPass() {\n          return isPass;\n        },\n        get data() {\n          return formData;\n        },\n        get fields() {\n          return fields;\n        },\n        get formState() {\n          return formState;\n        },\n        set data(data) {\n          emitter.emit('form-data-set', { data });\n        },\n        reset() {\n          emitter.emit('form-data-reset');\n        },\n        onReady(callback) {\n          emitter.addListener('form-mount', () => {\n            callback && callback();\n          });\n        },\n        onDestroy(callback) {\n          emitter.addListener('form-unmount', () => {\n            callback && callback();\n          });\n        },\n        validateField(name, groupName) {\n          const field = formState[name];\n          const index = Object.getOwnPropertySymbols(field.data).find(index => {\n            const item = field.data[index];\n            return !groupName || groupName === item.groupName;\n          });\n          if (!index) {\n            console.error(`group[${groupName}]中没有找到字段[${name}]`);\n            return;\n          }\n          emitter.emit('form-field-validate', { name, index });\n        },\n        setFieldValidate({ name, value, groupName, groupIndex }) {\n          emitter.emit('form-data-set-field', {\n            name,\n            value: {\n              groupName,\n              groupIndex,\n              validate: value\n            }\n          });\n        }\n      };\n    },\n    [emitter, fields, formState, isPass, formData]\n  );\n};\n\nexport default useOpenApi;\n","import { createContext, useContext } from 'react';\n\nconst context = createContext();\n\nexport const { Provider } = context;\n\nexport const useGroupContext = () => {\n  return useContext(context);\n};\n\nexport default context;\n","import React, { useMemo, useEffect, useState } from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport { Provider } from './context';\nimport { useFormContext } from '../context';\n\nconst GroupRoot = ({ children }) => {\n  const groupId = useMemo(() => Symbol(uniqueId(`group_`)), []);\n  const [groupMap, setGroupMap] = useState({});\n  const { emitter } = useFormContext();\n  useEffect(() => {\n    const sub1 = emitter.addListener('form-group-add', ({ id, parentId }) => {\n      setGroupMap(oldGroupMap => {\n        const newGroupMap = Object.assign({}, oldGroupMap);\n        if (!newGroupMap[parentId]) {\n          newGroupMap[parentId] = [];\n        }\n        const newList = newGroupMap[parentId].slice(0);\n        newList.push(id);\n        newGroupMap[parentId] = newList;\n        return newGroupMap;\n      });\n    });\n    const sub2 = emitter.addListener('form-group-remove', ({ id, parentId }) => {\n      setGroupMap(oldGroupMap => {\n        const newGroupMap = Object.assign({}, oldGroupMap);\n        const newList = newGroupMap[parentId].slice(0);\n        const index = newList.indexOf(id);\n        newList.splice(index, 1);\n        newGroupMap[parentId] = newList;\n        return newGroupMap;\n      });\n    });\n    return () => {\n      sub1.remove();\n      sub2.remove();\n    };\n  }, [emitter]);\n  return <Provider value={{ id: groupId, groupMap }}>{children}</Provider>;\n};\n\nexport default GroupRoot;\n","import React, { useEffect, useMemo } from 'react';\nimport { Provider, useGroupContext } from './context';\nimport { useFormContext } from '../context';\nimport uniqueId from 'lodash/uniqueId';\nimport _get from 'lodash/get';\n\nconst Group = ({ name, children }) => {\n  const { formIsMount, emitter } = useFormContext();\n  const groupId = useMemo(() => Symbol(uniqueId(`group_`)), []);\n  const { id: parentId, index: parentIndex, groupMap, name: parentName } = useGroupContext();\n\n  const index = useMemo(() => {\n    return _get(groupMap, parentId, []).indexOf(groupId);\n  }, [groupId, parentId, groupMap]);\n\n  const groupName = useMemo(() => {\n    if (index > -1 && parentName) {\n      return `${parentName}[${parentIndex}].${name}`;\n    }\n    return name;\n  }, [parentName, name, index, parentIndex]);\n\n  useEffect(() => {\n    let isEmit = false;\n    if (formIsMount) {\n      isEmit = true;\n      emitter.emit('form-group-add', { id: groupId, parentId });\n    }\n    return () => {\n      isEmit && emitter.emit('form-group-remove', { id: groupId, parentId });\n    };\n  }, [formIsMount, emitter, groupId, parentId]);\n  return <Provider value={{ id: groupId, name: groupName, groupMap, index }}>{children}</Provider>;\n};\n\nexport default Group;\n\nexport { default as GroupRoot } from './GroupRoot';\n\nexport const useGroup = useGroupContext;\n","import React, { useRef, forwardRef, useEffect, useState } from 'react';\nimport { Provider } from '../context';\nimport RULES from '../RULES';\nimport useFormEvent from '../useFormEvent';\nimport useFormState from './useFormState';\nimport useOpenApi from './useOpenApi';\nimport { GroupRoot } from '../Group';\n\nconst Form = forwardRef((props, ref) => {\n  const { onPrevSubmit, rules, interceptors, noFilter, data, onError, onSubmit, debug, children } = props;\n  const { formState, formStateRef, formData, fields, isPass, formDataRef, setFormState } = useFormState(props);\n  const [formIsMount, setFormIsMount] = useState(false);\n  const formRules = Object.assign({}, RULES, rules);\n  const initDataRef = useRef(data);\n  const emitter = useFormEvent({\n    onPrevSubmit,\n    rules: formRules,\n    interceptors,\n    noFilter,\n    data,\n    onError,\n    onSubmit,\n    debug,\n    formState,\n    formStateRef,\n    formData,\n    formDataRef,\n    setFormState,\n    initDataRef\n  });\n  useEffect(() => {\n    setFormIsMount(true);\n    initDataRef.current && emitter.emit('form-data-set', { data: initDataRef.current });\n    emitter.emit('form-mount');\n    return () => {\n      emitter.emit('form-unmount');\n    };\n  }, [emitter]);\n  useOpenApi({ emitter, fields, interceptors, isPass, formData, formState }, ref);\n  return (\n    <Provider\n      value={{\n        formState,\n        formData,\n        setFormState,\n        emitter,\n        fields,\n        isPass,\n        formIsMount,\n        initDataRef\n      }}>\n      <GroupRoot>{children}</GroupRoot>\n    </Provider>\n  );\n});\n\nForm.defaultProps = {\n  data: {},\n  debug: false,\n  rules: {},\n  interceptors: {}\n};\n\nexport default Form;\n","import { useEffect, useRef } from 'react';\nimport { useFormContext } from '../context';\n\nconst useFieldInit = ({ name, rule, label, interceptor, noTrim, value, index, groupName, groupIndex }) => {\n  const fieldRef = useRef(null);\n  const { formIsMount, emitter } = useFormContext();\n  useEffect(() => {\n    let isEmit = false;\n    if (formIsMount) {\n      isEmit = true;\n      emitter.emit('form-field-add', { name, index });\n    }\n    return () => {\n      isEmit && emitter.emit('form-field-remove', { name, index });\n    };\n  }, [formIsMount, emitter, name, index]);\n\n  useEffect(() => {\n    if (formIsMount && groupIndex !== -1) {\n      emitter.emit('form-field-edit', {\n        name,\n        rule,\n        label,\n        interceptor,\n        noTrim,\n        index,\n        groupName,\n        groupIndex,\n        value,\n        fieldRef\n      });\n    }\n  }, [formIsMount, emitter, name, rule, label, interceptor, noTrim, index, groupName, groupIndex, value, fieldRef]);\n  return fieldRef;\n};\n\nexport default useFieldInit;\n","import { useEffect } from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useFormContext } from '../context';\n\nconst useValidate = ({ name, index, time }) => {\n  const { emitter } = useFormContext();\n  const checkValidate = () => {\n    emitter.emit('form-field-validate', { name, index });\n  };\n  const { callback: debouncedCheckValidate, cancel } = useDebouncedCallback(checkValidate, time);\n  useEffect(() => {\n    const subscription = emitter.addListener('form-data-reset', cancel);\n    return () => {\n      subscription && subscription.remove();\n    };\n  }, [emitter, cancel]);\n\n  return time ? debouncedCheckValidate : checkValidate;\n};\n\nexport default useValidate;\n","import _get from 'lodash/get';\n\nconst isEvent = event => {\n  return event instanceof window.Event || _get(event, 'nativeEvent') instanceof window.Event || typeof _get(event, 'preventDefault') === 'function';\n};\n\nconst getFieldValue = (event, value) => {\n  if (isEvent(event)) {\n    if (value === undefined) {\n      switch (event.target.type) {\n        case 'checkbox':\n        case 'radio':\n          value = event.target.checked;\n          break;\n        default:\n          value = event.target.value;\n      }\n    }\n  } else {\n    value = event;\n  }\n  return value;\n};\n\nexport default getFieldValue;\n","import { useState } from 'react';\nimport getFieldValue from './getFieldValue';\nimport { useFormContext } from '../context';\n\nconst useFieldDataChange = ({ name, index, onChange }) => {\n  const { emitter } = useFormContext();\n  const [isValueChanged, setIsValueChanged] = useState(false);\n  const handlerChange = (...args) => {\n    onChange && onChange(...args);\n    setIsValueChanged(true);\n    const value = getFieldValue(...args);\n    emitter.emit('form-field-data-change', { name, value, index });\n  };\n\n  return {\n    isValueChanged,\n    onChange: handlerChange\n  };\n};\n\nexport default useFieldDataChange;\n","const compileErrMsg = (errMsg, label) => {\n  return typeof errMsg === 'string' ? errMsg.replace('%s', label) : errMsg(label);\n};\n\nexport default compileErrMsg;\n","import { useMemo } from 'react';\nimport { useGroup } from '../Group';\nimport { useFormContext } from '../context';\nimport uniqueId from 'lodash/uniqueId';\nimport _get from 'lodash/get';\nimport useFieldInit from './useFieldInit';\nimport useValidate from './useValidate';\nimport useFieldDataChange from './useFieldDataChange';\nimport compileErrMsg from './compileErrMsg';\n\nconst useField = ({ name, rule, label, interceptor, noTrim, debounce: time = 0, onChange, value, errMsg, ...args }) => {\n  const _group = useGroup();\n  const groupName = _get(_group, 'name');\n  const groupIndex = _get(_group, 'index');\n  const { formState, formData } = useFormContext();\n  const index = useMemo(() => Symbol(uniqueId(`${name}_`)), [name]);\n  const field = _get(formState, `${name}`);\n  const fieldData = _get(field, 'data', {})[index];\n  const fieldRef = useFieldInit({ name, rule, label, interceptor, noTrim, value, index, groupName, groupIndex });\n  const validate = useValidate({ name, index, time });\n  const { isValueChanged, onChange: dataChange } = useFieldDataChange({ name, index, onChange });\n  return {\n    ...args,\n    name,\n    label,\n    fieldRef,\n    formData,\n    formState,\n    rule,\n    groupName,\n    groupIndex,\n    onChange: dataChange,\n    isValueChanged,\n    value: _get(fieldData, 'value'),\n    triggerValidate: validate,\n    errState: _get(fieldData, 'validate.status', 0),\n    errMsg: compileErrMsg(errMsg || _get(fieldData, 'validate.msg', ''), label)\n  };\n};\n\nexport default useField;\n","import { useFormContext } from './context';\n\nconst useEmitter = () => {\n  const { emitter } = useFormContext();\n  console.warn('下一个大版本将会删掉该接口，建议不要使用');\n  return emitter;\n};\n\nexport default useEmitter;\n","import { useCallback } from 'react';\nimport { useFormContext } from './context';\n\nconst useReset = () => {\n  const { emitter } = useFormContext();\n  return {\n    onClick: useCallback(() => {\n      emitter.emit('form-data-reset');\n    }, [emitter])\n  };\n};\n\nexport default useReset;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useFormContext } from './context';\n\nconst useSubmit = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { isPass, emitter } = useFormContext();\n  useEffect(() => {\n    const target = emitter.addListener('form-submit-complete', () => {\n      setIsLoading(false);\n    });\n    return () => {\n      target && target.remove();\n    };\n  }, [emitter]);\n  return {\n    isLoading,\n    isPass,\n    onClick: useCallback(\n      (...args) => {\n        setIsLoading(true);\n        emitter.emit('form-submit', args);\n      },\n      [emitter, setIsLoading]\n    )\n  };\n};\n\nexport default useSubmit;\n","import { useFormContext } from './context';\n\nconst useFieldInfo = () => {\n  const { fields } = useFormContext();\n  console.warn('下一个大版本将会删掉该接口，建议不要使用');\n  return fields;\n};\n\nexport default useFieldInfo;\n","import React, { useState, createContext, useEffect, useCallback, useContext, useImperativeHandle, forwardRef } from 'react';\nimport { useFormContext } from '../context';\nimport Group from './index';\nimport GroupRoot from './GroupRoot';\n\nconst context = createContext({});\n\nconst { Provider } = context;\n\nconst GroupList = forwardRef(({ name, children }, ref) => {\n  const [list, setList] = useState([]);\n  const { emitter } = useFormContext();\n  useEffect(() => {\n    const sub = emitter.addListener('form-data-set', ({ data }) => {\n      setList(() => {\n        return (Array.isArray(data[name]) ? data[name] : []).map((value, index) => index);\n      });\n    });\n    return () => {\n      sub.remove();\n    };\n  }, [emitter, name]);\n\n  const onAdd = useCallback(() => {\n    setList(list => {\n      if (list.length === 0) {\n        return [0];\n      }\n      const newList = list.slice(0);\n      newList.push(list[list.length - 1] + 1);\n      return newList;\n    });\n  }, []);\n\n  const onRemove = useCallback(key => {\n    setList(list => {\n      const index = list.indexOf(key);\n      const newList = list.slice(0);\n      newList.splice(index, 1);\n      return newList;\n    });\n  }, []);\n\n  useImperativeHandle(ref, () => {\n    return {\n      onAdd,\n      onRemove\n    };\n  });\n  return (\n    <GroupRoot>\n      <Provider\n        value={{\n          onAdd,\n          onRemove\n        }}>\n        {list.map(key => (\n          <Group key={key} name={name}>\n            {children(key, { onAdd, onRemove })}\n          </Group>\n        ))}\n      </Provider>\n    </GroupRoot>\n  );\n});\n\nGroupList.useAction = () => {\n  return useContext(context);\n};\n\nexport default GroupList;\n","import Form from './Form';\nimport { isNotEmpty, isEmpty, filterEmpty } from './empty';\n\nexport default Form;\nexport { default as useField } from './useField';\nexport { default as useEmitter } from './useEmitter';\nexport { default as useReset } from './useReset';\nexport { default as useSubmit } from './useSubmit';\nexport { default as useFieldInfo } from './useFieldInfo';\nexport { default as Group } from './Group';\nexport { default as GroupList } from './Group/GroupList';\nexport { useFormContext } from './context';\nexport { presetRules as preset, default as RULES } from './RULES';\nexport { default as interceptors } from './interceptors';\n\nexport const util = {\n  isNotEmpty,\n  isEmpty,\n  filterEmpty\n};\n"]},"metadata":{},"sourceType":"module"}