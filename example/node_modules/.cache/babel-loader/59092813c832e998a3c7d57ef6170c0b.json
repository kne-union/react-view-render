{"ast":null,"code":"import _defineProperty from \"/Users/linzhipeng/Documents/code_cloud/@kne/react-view-render/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _profileMap;\n\nimport React, { createContext, useContext, useEffect } from 'react';\nimport loadable from '@loadable/component';\nimport ErrorBoundary from '@kne/react-error-boundary';\nimport classnames from 'classnames';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar context = createContext({});\nvar Provider = context.Provider;\n\nvar useGlobalContext = function useGlobalContext() {\n  return useContext(context);\n};\n\nvar components = {\n  List: loadable(function () {\n    return import('./index-6ed61a09.js');\n  }),\n  Text: loadable(function () {\n    return import('./index-2f4378cc.js');\n  }),\n  Row: loadable(function () {\n    return import('./index-e59d0593.js');\n  }),\n  Col: loadable(function () {\n    return import('./index-8bd99aa1.js');\n  }),\n  Space: loadable(function () {\n    return import('./index-e1df82bb.js');\n  }),\n  Condition: loadable(function () {\n    return import('./index-b019260d.js');\n  }),\n  Form: loadable(function () {\n    return import('./index-45492c07.js');\n  }),\n  Input: loadable(function () {\n    return import('./index-93e86442.js');\n  }),\n  InputNumber: loadable(function () {\n    return import('./index-cf5f511c.js');\n  }),\n  RadioGroup: loadable(function () {\n    return import('./index-29234179.js');\n  }),\n  Select: loadable(function () {\n    return import('./index-94361aa1.js');\n  }),\n  Switch: loadable(function () {\n    return import('./index-5d9c1850.js');\n  }),\n  DatePicker: loadable(function () {\n    return import('./index-8418a749.js');\n  }),\n  Cascader: loadable(function () {\n    return import('./index-84891862.js');\n  }),\n  TextArea: loadable(function () {\n    return import('./index-4f195b26.js');\n  }),\n  Avatar: loadable(function () {\n    return import('./index-0fad491f.js');\n  }),\n  Upload: loadable(function () {\n    return import('./index-e473c648.js');\n  }),\n  CheckboxGroup: loadable(function () {\n    return import('./index-251c9f16.js');\n  }),\n  SubmitButton: loadable(function () {\n    return import('./index-86f5f960.js');\n  }),\n  ResetButton: loadable(function () {\n    return import('./index-597a9001.js');\n  }),\n  Remote: loadable(function () {\n    return import('./index-de9affc4.js');\n  }),\n  Mapping: loadable(function () {\n    return import('./index-f8719254.js');\n  }),\n  State: loadable(function () {\n    return import('./index-6278d7a5.js');\n  }),\n  Button: loadable(function () {\n    return import('./index-350ee957.js');\n  }),\n  Img: loadable(function () {\n    return import('./index-0d4a5134.js');\n  }),\n  Div: loadable(function () {\n    return import('./index-0a810391.js');\n  })\n};\nvar id$o = \"Button\";\nvar name$o = \"按钮\";\nvar property$o = {\n  type: {\n    label: \"按钮类型\",\n    \"input-type\": \"$select\",\n    \"input-options\": {\n      options: [{\n        value: \"\",\n        label: \"默认\"\n      }, {\n        value: \"primary\",\n        label: \"主要\"\n      }, {\n        value: \"ghost\",\n        label: \"幽灵\"\n      }, {\n        value: \"dashed\",\n        label: \"虚线\"\n      }, {\n        value: \"link\",\n        label: \"链接\"\n      }, {\n        value: \"text\",\n        label: \"文本\"\n      }]\n    }\n  },\n  size: {\n    \"input-type\": \"$radio\",\n    label: \"尺寸\",\n    \"input-options\": {\n      options: [{\n        label: \"小\",\n        value: \"small\"\n      }, {\n        label: \"中\",\n        value: \"middle\"\n      }, {\n        label: \"大\",\n        value: \"large\"\n      }]\n    }\n  },\n  block: {\n    label: \"是否是块级按钮\",\n    \"input-type\": \"$switch\"\n  },\n  danger: {\n    label: \"是否是危险按钮\",\n    \"input-type\": \"$switch\"\n  },\n  disabled: {\n    label: \"是否失效\",\n    \"input-type\": \"$switch\"\n  },\n  ghost: {\n    label: \"是否是幽灵属性\",\n    \"input-type\": \"$switch\"\n  },\n  href: {\n    label: \"点击跳转地址\",\n    \"input-type\": \"$input\"\n  },\n  htmlType: {\n    label: \"原生type值\",\n    \"input-type\": \"$input\"\n  },\n  loading: {\n    label: \"是否加载状态\",\n    \"input-type\": \"$switch\"\n  },\n  target: {\n    label: \"target(href存在时生效)\",\n    \"input-type\": \"$input\"\n  }\n};\nvar children$h = {\n  allow: [\"Text\", \"Icon\"]\n};\nvar defaultProps$e = {\n  children: \"按钮\"\n};\nvar button = {\n  id: id$o,\n  name: name$o,\n  property: property$o,\n  children: children$h,\n  defaultProps: defaultProps$e\n};\nvar id$n = \"Text\";\nvar name$n = \"文本\";\nvar property$n = {\n  content: {\n    label: \"文本内容\",\n    \"input-type\": \"$input\"\n  }\n};\nvar children$g = {\n  allow: []\n};\nvar text = {\n  id: id$n,\n  name: name$n,\n  property: property$n,\n  children: children$g\n};\nvar id$m = \"Row\";\nvar name$m = \"网格行\";\nvar property$m = {\n  align: {\n    \"input-type\": \"$radio\",\n    \"input-options\": {\n      options: [{\n        label: \"顶部\",\n        value: \"top\"\n      }, {\n        label: \"中间\",\n        value: \"middle\"\n      }, {\n        label: \"底部\",\n        value: \"bottom\"\n      }]\n    },\n    label: \"垂直对齐\"\n  },\n  gutter: {\n    label: \"间距\",\n    \"input-type\": \"$array\",\n    jsonschema: {\n      type: \"array\",\n      items: {\n        type: \"number\"\n      }\n    },\n    \"input-options\": {\n      children: {\n        \"input-type\": \"$number\"\n      }\n    }\n  },\n  justify: {\n    \"input-type\": \"$radio\",\n    \"input-options\": {\n      options: [{\n        label: \"起始\",\n        value: \"start\"\n      }, {\n        label: \"结束\",\n        value: \"end\"\n      }, {\n        label: \"居中\",\n        value: \"center\"\n      }, {\n        label: \"环绕\",\n        value: \"space-around\"\n      }, {\n        label: \"中间\",\n        value: \"space-between\"\n      }]\n    },\n    label: \"水平排列方式\"\n  },\n  wrap: {\n    \"input-type\": \"$switch\",\n    label: \"是否自动换行\"\n  }\n};\nvar children$f = {\n  allow: [\"Col\"]\n};\nvar row = {\n  id: id$m,\n  name: name$m,\n  property: property$m,\n  children: children$f\n};\nvar id$l = \"Img\";\nvar name$l = \"图片\";\nvar property$l = {\n  src: {\n    label: \"图片地址\",\n    \"input-type\": \"$avatar\"\n  },\n  width: {\n    label: \"宽度\",\n    \"input-type\": \"$input\"\n  },\n  height: {\n    label: \"高度\",\n    \"input-type\": \"$input\"\n  }\n};\nvar children$e = {\n  allow: []\n};\nvar defaultProps$d = {\n  src: \"https://static.knxgalaxy.com/upload_assets/platform-manager/0a5e164ceb29fc380d483fbe86d8cbf2.png\",\n  style: {\n    minWidth: \"20px\",\n    minHeight: \"20px\"\n  }\n};\nvar img = {\n  id: id$l,\n  name: name$l,\n  property: property$l,\n  children: children$e,\n  defaultProps: defaultProps$d\n};\nvar id$k = \"Col\";\nvar name$k = \"网格列\";\nvar property$k = {\n  flex: {\n    \"input-type\": \"$input\",\n    label: \"flex布局属性\"\n  },\n  offset: {\n    \"input-type\": \"$number\",\n    label: \"左侧间隔\"\n  },\n  order: {\n    \"input-type\": \"$number\",\n    label: \"栅格顺序\"\n  },\n  pull: {\n    \"input-type\": \"$number\",\n    label: \"栅格向左移动格数\"\n  },\n  push: {\n    \"input-type\": \"$number\",\n    label: \"栅格向右移动格数\"\n  },\n  span: {\n    \"input-type\": \"$number\",\n    label: \"栅格占位格数\"\n  }\n};\nvar children$d = {\n  dependence: [\"Row\"]\n};\nvar col = {\n  id: id$k,\n  name: name$k,\n  property: property$k,\n  children: children$d\n};\nvar id$j = \"List\";\nvar name$j = \"列表\";\nvar property$j = {\n  resource: {\n    \"input-type\": \"$variable\",\n    type: \"array\",\n    label: \"数据源\",\n    required: true\n  },\n  map: {\n    \"input-type\": \"$function\",\n    type: \"function\",\n    name: \"映射\"\n  }\n};\nvar defaultProps$c = {\n  children: \"放置子节点\"\n};\nvar list = {\n  id: id$j,\n  name: name$j,\n  property: property$j,\n  defaultProps: defaultProps$c\n};\nvar id$i = \"Condition\";\nvar name$i = \"条件\";\nvar property$i = {\n  resource: {\n    \"input-type\": \"$variable\",\n    label: \"数据源\",\n    required: true\n  },\n  expression: {\n    \"input-type\": \"$functions\",\n    label: \"判断条件\",\n    required: true\n  }\n};\nvar condition = {\n  id: id$i,\n  name: name$i,\n  property: property$i\n};\nvar id$h = \"Form\";\nvar name$h = \"表单\";\nvar property$h = {\n  onSubmit: {\n    \"input-type\": \"$function\",\n    type: \"function\",\n    label: \"表单提交函数\"\n  }\n};\nvar children$c = {\n  forbid: [\"Form\"]\n};\nvar form = {\n  id: id$h,\n  name: name$h,\n  property: property$h,\n  children: children$c\n};\nvar id$g = \"Input\";\nvar name$g = \"输入框\";\nvar property$g = {\n  label: {\n    \"input-type\": \"$input\",\n    label: \"label\"\n  },\n  name: {\n    \"input-type\": \"$input\",\n    label: \"name\"\n  },\n  rule: {\n    \"input-type\": \"$input\",\n    label: \"验证规则\"\n  },\n  interceptor: {\n    \"input-type\": \"$input\",\n    label: \"拦截器\"\n  },\n  noTrim: {\n    \"input-type\": \"$switch\",\n    label: \"是否不去掉两端空格\"\n  },\n  debounce: {\n    \"input-type\": \"$number\",\n    label: \"去抖动时间\"\n  },\n  allowClear: {\n    \"input-type\": \"$switch\",\n    label: \"可以点击清除图标删除内容\"\n  },\n  bordered: {\n    \"input-type\": \"$switch\",\n    label: \"是否有边框\",\n    \"default-value\": true\n  },\n  disabled: {\n    \"input-type\": \"$switch\",\n    label: \"是否禁用\"\n  },\n  maxLength: {\n    \"input-type\": \"$number\",\n    label: \"最大长度\"\n  },\n  readOnly: {\n    \"input-type\": \"$switch\",\n    label: \"只读\"\n  }\n};\nvar children$b = {\n  allow: [],\n  dependence: [\"Form\"]\n};\nvar defaultProps$b = {\n  placeholder: \"请输入\",\n  name: \"$id\",\n  label: \"输入框\"\n};\nvar input = {\n  id: id$g,\n  name: name$g,\n  property: property$g,\n  children: children$b,\n  defaultProps: defaultProps$b\n};\nvar id$f = \"SubmitButton\";\nvar name$f = \"提交按钮\";\nvar property$f = {\n  type: {\n    label: \"按钮类型\",\n    \"input-type\": \"$select\",\n    \"input-options\": {\n      options: [{\n        value: \"\",\n        label: \"默认\"\n      }, {\n        value: \"primary\",\n        label: \"主要\"\n      }, {\n        value: \"ghost\",\n        label: \"幽灵\"\n      }, {\n        value: \"dashed\",\n        label: \"虚线\"\n      }, {\n        value: \"link\",\n        label: \"链接\"\n      }, {\n        value: \"text\",\n        label: \"文本\"\n      }]\n    }\n  },\n  size: {\n    \"input-type\": \"$radio\",\n    label: \"尺寸\",\n    \"input-options\": {\n      options: [{\n        label: \"小\",\n        value: \"small\"\n      }, {\n        label: \"中\",\n        value: \"middle\"\n      }, {\n        label: \"大\",\n        value: \"large\"\n      }]\n    }\n  },\n  block: {\n    label: \"是否是块级按钮\",\n    \"input-type\": \"$switch\"\n  },\n  danger: {\n    label: \"是否是危险按钮\",\n    \"input-type\": \"$switch\"\n  },\n  disabled: {\n    label: \"是否失效\",\n    \"input-type\": \"$switch\"\n  },\n  ghost: {\n    label: \"是否是幽灵属性\",\n    \"input-type\": \"$switch\"\n  }\n};\nvar children$a = {\n  allow: [\"Text\", \"Icon\"],\n  dependence: [\"Form\"]\n};\nvar defaultProps$a = {\n  children: \"提交\"\n};\nvar submitButton = {\n  id: id$f,\n  name: name$f,\n  property: property$f,\n  children: children$a,\n  defaultProps: defaultProps$a\n};\nvar id$e = \"Avatar\";\nvar name$e = \"头像上传\";\nvar property$e = {\n  label: {\n    \"input-type\": \"$input\",\n    label: \"label\"\n  },\n  name: {\n    \"input-type\": \"$input\",\n    label: \"name\"\n  },\n  rule: {\n    \"input-type\": \"$input\",\n    label: \"验证规则\"\n  },\n  interceptor: {\n    \"input-type\": \"$input\",\n    label: \"拦截器\"\n  },\n  editor: {\n    \"input-type\": \"$object\",\n    label: \"裁剪\",\n    \"input-options\": {\n      open: {\n        \"input-type\": \"$switch\",\n        label: \"是否开启裁剪\"\n      },\n      width: {\n        \"input-type\": \"$number\",\n        label: \"裁剪宽度\"\n      },\n      height: {\n        \"input-type\": \"$number\",\n        label: \"裁剪高度\"\n      },\n      borderRadius: {\n        \"input-type\": \"$number\",\n        label: \"圆角\"\n      },\n      text: {\n        \"input-type\": \"$input\",\n        label: \"确定按钮文案\"\n      }\n    }\n  }\n};\nvar children$9 = {\n  allow: [],\n  dependence: [\"Form\"]\n};\nvar defaultProps$9 = {\n  label: \"头像\",\n  name: \"$id\",\n  editor: {\n    open: true\n  }\n};\nvar avatar = {\n  id: id$e,\n  name: name$e,\n  property: property$e,\n  children: children$9,\n  defaultProps: defaultProps$9\n};\nvar id$d = \"Cascader\";\nvar name$d = \"日历\";\nvar property$d = {\n  label: {\n    \"input-type\": \"$input\",\n    label: \"label\"\n  },\n  name: {\n    \"input-type\": \"$input\",\n    label: \"name\"\n  },\n  rule: {\n    \"input-type\": \"$input\",\n    label: \"验证规则\"\n  },\n  interceptor: {\n    \"input-type\": \"$input\",\n    label: \"拦截器\"\n  }\n};\nvar children$8 = {\n  allow: [],\n  dependence: [\"Form\"]\n};\nvar defaultProps$8 = {\n  placeholder: \"请选择\",\n  name: \"$id\",\n  label: \"日历\"\n};\nvar cascader = {\n  id: id$d,\n  name: name$d,\n  property: property$d,\n  children: children$8,\n  defaultProps: defaultProps$8\n};\nvar id$c = \"DatePicker\";\nvar name$c = \"日期选择\";\nvar property$c = {\n  label: {\n    \"input-type\": \"$input\",\n    label: \"label\"\n  },\n  name: {\n    \"input-type\": \"$input\",\n    label: \"name\"\n  },\n  rule: {\n    \"input-type\": \"$input\",\n    label: \"验证规则\"\n  },\n  interceptor: {\n    \"input-type\": \"$input\",\n    label: \"拦截器\"\n  }\n};\nvar children$7 = {\n  allow: [],\n  dependence: [\"Form\"]\n};\nvar defaultProps$7 = {\n  placeholder: \"请选择\",\n  name: \"$id\",\n  label: \"日期选择\"\n};\nvar datePicker = {\n  id: id$c,\n  name: name$c,\n  property: property$c,\n  children: children$7,\n  defaultProps: defaultProps$7\n};\nvar id$b = \"CheckboxGroup\";\nvar name$b = \"多选框\";\nvar property$b = {\n  label: {\n    \"input-type\": \"$input\",\n    label: \"label\"\n  },\n  name: {\n    \"input-type\": \"$input\",\n    label: \"name\"\n  },\n  rule: {\n    \"input-type\": \"$input\",\n    label: \"验证规则\"\n  },\n  interceptor: {\n    \"input-type\": \"$input\",\n    label: \"拦截器\"\n  },\n  options: {\n    \"input-type\": \"$variable\",\n    label: \"选项\"\n  }\n};\nvar children$6 = {\n  allow: [],\n  dependence: [\"Form\"]\n};\nvar defaultProps$6 = {\n  name: \"$id\",\n  label: \"多选框\"\n};\nvar checkboxGroup = {\n  id: id$b,\n  name: name$b,\n  property: property$b,\n  children: children$6,\n  defaultProps: defaultProps$6\n};\nvar id$a = \"InputNumber\";\nvar name$a = \"数字输入\";\nvar property$a = {\n  label: {\n    \"input-type\": \"$input\",\n    label: \"label\"\n  },\n  name: {\n    \"input-type\": \"$input\",\n    label: \"name\"\n  },\n  rule: {\n    \"input-type\": \"$input\",\n    label: \"验证规则\"\n  },\n  interceptor: {\n    \"input-type\": \"$input\",\n    label: \"拦截器\"\n  },\n  debounce: {\n    \"input-type\": \"$number\",\n    label: \"去抖动时间\"\n  },\n  bordered: {\n    \"input-type\": \"$switch\",\n    label: \"是否有边框\",\n    \"default-value\": true\n  },\n  decimalSeparator: {\n    \"input-type\": \"$input\",\n    label: \"小数点\"\n  },\n  formatter: {\n    \"input-type\": \"$functions\",\n    label: \"格式化\"\n  },\n  parser: {\n    \"input-type\": \"$functions\",\n    label: \"反格式化\"\n  },\n  max: {\n    \"input-type\": \"$number\",\n    label: \"最大值\"\n  },\n  min: {\n    \"input-type\": \"$number\",\n    label: \"最小值\"\n  },\n  precision: {\n    \"input-type\": \"$number\",\n    label: \"数值精度\"\n  },\n  stringMode: {\n    \"input-type\": \"$switch\",\n    label: \"字符串模式\"\n  },\n  readOnly: {\n    \"input-type\": \"$switch\",\n    label: \"只读\"\n  },\n  step: {\n    \"input-type\": \"$number\",\n    label: \"每次改变步数\"\n  },\n  disabled: {\n    \"input-type\": \"$switch\",\n    label: \"是否禁用\"\n  }\n};\nvar children$5 = {\n  allow: [],\n  dependence: [\"Form\"]\n};\nvar defaultProps$5 = {\n  placeholder: \"请输入\",\n  name: \"$id\",\n  label: \"数字输入框\"\n};\nvar inputNumber = {\n  id: id$a,\n  name: name$a,\n  property: property$a,\n  children: children$5,\n  defaultProps: defaultProps$5\n};\nvar id$9 = \"RadioGroup\";\nvar name$9 = \"单选框\";\nvar property$9 = {\n  label: {\n    \"input-type\": \"$input\",\n    label: \"label\"\n  },\n  name: {\n    \"input-type\": \"$input\",\n    label: \"name\"\n  },\n  rule: {\n    \"input-type\": \"$input\",\n    label: \"验证规则\"\n  },\n  interceptor: {\n    \"input-type\": \"$input\",\n    label: \"拦截器\"\n  },\n  options: {\n    \"input-type\": \"$variable\",\n    label: \"选项\"\n  }\n};\nvar children$4 = {\n  allow: [],\n  dependence: [\"Form\"]\n};\nvar defaultProps$4 = {\n  name: \"$id\",\n  label: \"单选框\"\n};\nvar radioGroup = {\n  id: id$9,\n  name: name$9,\n  property: property$9,\n  children: children$4,\n  defaultProps: defaultProps$4\n};\nvar id$8 = \"ResetButton\";\nvar name$8 = \"重置按钮\";\nvar property$8 = {\n  type: {\n    label: \"按钮类型\",\n    \"input-type\": \"$select\",\n    \"input-options\": {\n      options: [{\n        value: \"\",\n        label: \"默认\"\n      }, {\n        value: \"primary\",\n        label: \"主要\"\n      }, {\n        value: \"ghost\",\n        label: \"幽灵\"\n      }, {\n        value: \"dashed\",\n        label: \"虚线\"\n      }, {\n        value: \"link\",\n        label: \"链接\"\n      }, {\n        value: \"text\",\n        label: \"文本\"\n      }]\n    }\n  },\n  size: {\n    \"input-type\": \"$radio\",\n    label: \"尺寸\",\n    \"input-options\": {\n      options: [{\n        label: \"小\",\n        value: \"small\"\n      }, {\n        label: \"中\",\n        value: \"middle\"\n      }, {\n        label: \"大\",\n        value: \"large\"\n      }]\n    }\n  },\n  block: {\n    label: \"是否是块级按钮\",\n    \"input-type\": \"$switch\"\n  },\n  danger: {\n    label: \"是否是危险按钮\",\n    \"input-type\": \"$switch\"\n  },\n  disabled: {\n    label: \"是否失效\",\n    \"input-type\": \"$switch\"\n  },\n  ghost: {\n    label: \"是否是幽灵属性\",\n    \"input-type\": \"$switch\"\n  }\n};\nvar children$3 = {\n  allow: [\"Text\", \"Icon\"],\n  dependence: [\"Form\"]\n};\nvar defaultProps$3 = {\n  children: \"提交\"\n};\nvar resetButton = {\n  id: id$8,\n  name: name$8,\n  property: property$8,\n  children: children$3,\n  defaultProps: defaultProps$3\n};\nvar id$7 = \"Select\";\nvar name$7 = \"下拉选择\";\nvar property$7 = {\n  label: {\n    \"input-type\": \"$input\",\n    label: \"label\"\n  },\n  name: {\n    \"input-type\": \"$input\",\n    label: \"name\"\n  },\n  rule: {\n    \"input-type\": \"$input\",\n    label: \"验证规则\"\n  },\n  interceptor: {\n    \"input-type\": \"$input\",\n    label: \"拦截器\"\n  },\n  options: {\n    \"input-type\": \"$variable\",\n    label: \"选项\"\n  },\n  allowClear: {\n    \"input-type\": \"$switch\",\n    label: \"可以点击清除图标删除内容\"\n  },\n  autoClearSearchValue: {\n    \"input-type\": \"$switch\",\n    label: \"是否在选中项后清空搜索框\",\n    \"default-value\": true\n  },\n  defaultActiveFirstOption: {\n    \"input-type\": \"$switch\",\n    label: \"是否默认高亮第一个选项\",\n    \"default-value\": true\n  },\n  defaultOpen: {\n    \"input-type\": \"$switch\",\n    label: \"是否默认展开下拉菜单\"\n  },\n  dropdownClassName: {\n    \"input-type\": \"$input\",\n    label: \"下拉菜单的 className 属性\"\n  },\n  labelInValue: {\n    \"input-type\": \"$switch\",\n    label: \"是否把每个选项的 label 包装到 value 中\"\n  },\n  listHeight: {\n    \"input-type\": \"$number\",\n    label: \"设置弹窗滚动高度\"\n  },\n  loading: {\n    \"input-type\": \"$switch\",\n    label: \"加载中状态\"\n  },\n  maxTagCount: {\n    \"input-type\": \"$number\",\n    label: \"最多显示多少个 tag\"\n  },\n  maxTagPlaceholder: {\n    \"input-type\": \"$input\",\n    label: \"隐藏 tag 时显示的内容\"\n  },\n  maxTagTextLength: {\n    \"input-type\": \"$number\",\n    label: \"最大显示的 tag 文本长度\"\n  },\n  mode: {\n    \"input-type\": \"$radio\",\n    label: \"设置 Select 的模式为多选或标签\",\n    \"input-options\": {\n      options: [{\n        label: \"多选\",\n        value: \"multiple\"\n      }, {\n        label: \"标签\",\n        value: \"tags\"\n      }]\n    }\n  },\n  placeholder: {\n    \"input-type\": \"$input\",\n    label: \"选择框默认文本\"\n  },\n  showArrow: {\n    \"input-type\": \"$switch\",\n    label: \"是否显示下拉小箭头\"\n  },\n  showSearch: {\n    \"input-type\": \"$switch\",\n    label: \"使单选模式可搜索\"\n  }\n};\nvar children$2 = {\n  allow: [],\n  dependence: [\"Form\"]\n};\nvar defaultProps$2 = {\n  name: \"$id\",\n  label: \"下拉选择\"\n};\nvar select = {\n  id: id$7,\n  name: name$7,\n  property: property$7,\n  children: children$2,\n  defaultProps: defaultProps$2\n};\nvar id$6 = \"TextArea\";\nvar name$6 = \"多行文本\";\nvar property$6 = {\n  label: {\n    \"input-type\": \"$input\",\n    label: \"label\"\n  },\n  name: {\n    \"input-type\": \"$input\",\n    label: \"name\"\n  },\n  rule: {\n    \"input-type\": \"$input\",\n    label: \"验证规则\"\n  },\n  interceptor: {\n    \"input-type\": \"$input\",\n    label: \"拦截器\"\n  },\n  noTrim: {\n    \"input-type\": \"$switch\",\n    label: \"是否不去掉两端空格\"\n  },\n  debounce: {\n    \"input-type\": \"$number\",\n    label: \"去抖动时间\"\n  },\n  allowClear: {\n    \"input-type\": \"$switch\",\n    label: \"可以点击清除图标删除内容\"\n  },\n  showCount: {\n    \"input-type\": \"$switch\",\n    label: \"是否展示字数\"\n  },\n  bordered: {\n    \"input-type\": \"$switch\",\n    label: \"是否有边框\",\n    \"default-value\": true\n  },\n  disabled: {\n    \"input-type\": \"$switch\",\n    label: \"是否禁用\"\n  },\n  maxLength: {\n    \"input-type\": \"$number\",\n    label: \"最大长度\"\n  },\n  readOnly: {\n    \"input-type\": \"$switch\",\n    label: \"只读\"\n  }\n};\nvar children$1 = {\n  allow: [],\n  dependence: [\"Form\"]\n};\nvar defaultProps$1 = {\n  placeholder: \"请输入\",\n  name: \"$id\",\n  label: \"多行文本\"\n};\nvar textArea = {\n  id: id$6,\n  name: name$6,\n  property: property$6,\n  children: children$1,\n  defaultProps: defaultProps$1\n};\nvar id$5 = \"Upload\";\nvar name$5 = \"文件上传\";\nvar property$5 = {\n  label: {\n    \"input-type\": \"$input\",\n    label: \"label\"\n  },\n  name: {\n    \"input-type\": \"$input\",\n    label: \"name\"\n  },\n  rule: {\n    \"input-type\": \"$input\",\n    label: \"验证规则\"\n  },\n  interceptor: {\n    \"input-type\": \"$input\",\n    label: \"拦截器\"\n  }\n};\nvar children = {\n  allow: [],\n  dependence: [\"Form\"]\n};\nvar defaultProps = {\n  label: \"文件上传\",\n  name: \"$id\"\n};\nvar upload = {\n  id: id$5,\n  name: name$5,\n  property: property$5,\n  children: children,\n  defaultProps: defaultProps\n};\nvar id$4 = \"Remote\";\nvar name$4 = \"远程加载\";\nvar property$4 = {\n  resource: {\n    \"input-type\": \"$functions\",\n    label: \"加载方法\",\n    required: true\n  }\n};\nvar remote = {\n  id: id$4,\n  name: name$4,\n  property: property$4\n};\nvar id$3 = \"Mapping\";\nvar name$3 = \"映射\";\nvar property$3 = {\n  resource: {\n    \"input-type\": \"$variable\",\n    label: \"数据源\",\n    required: true\n  },\n  expression: {\n    \"input-type\": \"$functions\",\n    label: \"映射函数\",\n    required: true\n  }\n};\nvar mapping = {\n  id: id$3,\n  name: name$3,\n  property: property$3\n};\nvar id$2 = \"State\";\nvar name$2 = \"状态\";\nvar property$2 = {\n  initValue: {\n    \"input-type\": \"$variable\",\n    label: \"初始状态\"\n  },\n  setStateName: {\n    \"input-type\": \"$input\",\n    label: \"设置状态方法名\"\n  }\n};\nvar state = {\n  id: id$2,\n  name: name$2,\n  property: property$2\n};\nvar id$1 = \"Space\";\nvar name$1 = \"间距\";\nvar property$1 = {\n  align: {\n    \"input-type\": \"$radio\",\n    label: \"对齐方式\",\n    \"input-options\": {\n      options: [{\n        label: \"开始\",\n        value: \"start\"\n      }, {\n        label: \"居中\",\n        value: \"center\"\n      }, {\n        label: \"结尾\",\n        value: \"end\"\n      }, {\n        label: \"基线\",\n        value: \"baseline\"\n      }]\n    }\n  },\n  direction: {\n    \"input-type\": \"$radio\",\n    label: \"间距方向\",\n    \"input-options\": {\n      options: [{\n        label: \"水平\",\n        value: \"horizontal\"\n      }, {\n        label: \"垂直\",\n        value: \"vertical\"\n      }]\n    }\n  },\n  size: {\n    \"input-type\": \"$radio\",\n    label: \"尺寸\",\n    \"input-options\": {\n      options: [{\n        label: \"小\",\n        value: \"small\"\n      }, {\n        label: \"中\",\n        value: \"middle\"\n      }, {\n        label: \"大\",\n        value: \"large\"\n      }]\n    }\n  },\n  wrap: {\n    \"input-type\": \"$switch\",\n    label: \"是否自动换行\"\n  },\n  split: {\n    \"input-type\": \"$input\",\n    label: \"拆分字符串\"\n  }\n};\nvar space = {\n  id: id$1,\n  name: name$1,\n  property: property$1\n};\nvar id = \"Div\";\nvar name = \"普通容器\";\nvar property = {};\nvar div = {\n  id: id,\n  name: name,\n  property: property\n};\nvar profile = {\n  'general': {\n    id: 'general',\n    label: '通用',\n    components: [button, text, img]\n  },\n  'layout': {\n    id: 'layout',\n    label: '布局',\n    components: [row, col, space, div]\n  },\n  'form': {\n    id: 'form',\n    label: '表单',\n    components: [form, input, submitButton, resetButton, avatar, cascader, checkboxGroup, datePicker, inputNumber, radioGroup, select, textArea, upload]\n  },\n  'logic': {\n    id: 'logic',\n    label: '逻辑',\n    components: [list, condition, remote, mapping, state]\n  }\n};\nvar profileMap = (_profileMap = {}, _defineProperty(_profileMap, button.id, button), _defineProperty(_profileMap, text.id, text), _defineProperty(_profileMap, row.id, row), _defineProperty(_profileMap, col.id, col), _defineProperty(_profileMap, list.id, list), _defineProperty(_profileMap, condition.id, condition), _defineProperty(_profileMap, input.id, input), _defineProperty(_profileMap, form.id, form), _defineProperty(_profileMap, avatar.id, avatar), _defineProperty(_profileMap, cascader.id, cascader), _defineProperty(_profileMap, checkboxGroup.id, checkboxGroup), _defineProperty(_profileMap, datePicker.id, datePicker), _defineProperty(_profileMap, inputNumber.id, inputNumber), _defineProperty(_profileMap, radioGroup.id, radioGroup), _defineProperty(_profileMap, select.id, select), _defineProperty(_profileMap, textArea.id, textArea), _defineProperty(_profileMap, upload.id, upload), _defineProperty(_profileMap, submitButton.id, submitButton), _defineProperty(_profileMap, resetButton.id, resetButton), _defineProperty(_profileMap, img.id, img), _defineProperty(_profileMap, remote.id, remote), _defineProperty(_profileMap, mapping.id, mapping), _defineProperty(_profileMap, state.id, state), _defineProperty(_profileMap, space.id, space), _defineProperty(_profileMap, div.id, div), _profileMap);\n\nvar render = function render(data) {\n  var target = Array.isArray(data) ? data : [data];\n  return target.map(function (item) {\n    if (typeof item === 'string') {\n      return item;\n    }\n\n    var id = item.id,\n        component = item.component,\n        props = item.props,\n        children = item.children;\n    var CurrentComponent = components[component];\n\n    if (!CurrentComponent) {\n      return null;\n    }\n\n    var newProps = Object.assign({}, props);\n\n    if (children) {\n      newProps.children = render(children);\n    }\n\n    return /*#__PURE__*/React.createElement(CurrentComponent, _extends({}, newProps, {\n      className: classnames(newProps.className, \"id_\".concat(id)),\n      $id: id,\n      key: id\n    }));\n  });\n};\n\nvar ErrorMsg = function ErrorMsg(_ref) {\n  var error = _ref.error;\n  useEffect(function () {\n    console.error(error);\n  }, [error]);\n  return /*#__PURE__*/React.createElement(\"div\", null, \"\\u6E32\\u67D3\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u8BF7\\u68C0\\u67E5\\u914D\\u7F6E\\u6216\\u56DE\\u6EDA\\u64CD\\u4F5C\");\n};\n\nvar Render = function Render(_ref2) {\n  var _ref2$lib = _ref2.lib,\n      _lib = _ref2$lib === void 0 ? {} : _ref2$lib,\n      content = _ref2.content,\n      emitter = _ref2.emitter;\n\n  var variable = Object.assign({}, content.variable);\n  var data = content.data || [];\n  var functions = Object.assign({}, content.functions);\n  return /*#__PURE__*/React.createElement(ErrorBoundary, {\n    errorComponent: ErrorMsg\n  }, /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      lib: _lib,\n      functions: functions,\n      data: data,\n      variable: variable,\n      emitter: emitter,\n      isEditor: !!emitter\n    }\n  }, render(data)));\n};\n\nexport { Provider as P, Render as R, _objectWithoutPropertiesLoose as _, _extends as a, profileMap as b, profile as p, useGlobalContext as u };","map":{"version":3,"sources":["../src/context.js","../src/components.js","../src/profile.js","../src/index.js"],"names":["context","createContext","Provider","useGlobalContext","useContext","components","List","loadable","Text","Row","Col","Space","Condition","Form","Input","InputNumber","RadioGroup","Select","Switch","DatePicker","Cascader","TextArea","Avatar","Upload","CheckboxGroup","SubmitButton","ResetButton","Remote","Mapping","State","Button","Img","Div","profile","id","label","profileMap","button","text","row","col","list","condition","input","form","avatar","cascader","checkboxGroup","datePicker","inputNumber","radioGroup","select","textArea","upload","submitButton","resetButton","img","remote","mapping","state","space","div","render","data","target","Array","item","children","CurrentComponent","newProps","Object","classnames","ErrorMsg","error","useEffect","console","Render","lib","emitter","variable","content","functions","isEditor"],"mappings":"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","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const context = createContext({});\n\nexport const { Provider } = context;\n\nexport const useGlobalContext = () => {\n  return useContext(context);\n};\n\nexport default context;","import loadable from '@loadable/component';\n\nconst components = {\n  List: loadable(() => import('./Logic/List')),\n  Text: loadable(() => import('./General/Text')),\n  Row: loadable(() => import('./Layout/Row')),\n  Col: loadable(() => import('./Layout/Col')),\n  Space: loadable(() => import('./Layout/Space')),\n  Condition: loadable(() => import('./Logic/Condition')),\n  Form: loadable(() => import('./Form/index')),\n  Input: loadable(() => import('./Form/Input')),\n  InputNumber: loadable(() => import('./Form/InputNumber')),\n  RadioGroup: loadable(() => import('./Form/RadioGroup')),\n  Select: loadable(() => import('./Form/Select')),\n  Switch: loadable(() => import('./Form/Switch')),\n  DatePicker: loadable(() => import('./Form/DatePicker')),\n  Cascader: loadable(() => import('./Form/Cascader')),\n  TextArea: loadable(() => import('./Form/TextArea')),\n  Avatar: loadable(() => import('./Form/Avatar')),\n  Upload: loadable(() => import('./Form/Upload')),\n  CheckboxGroup: loadable(() => import('./Form/CheckboxGroup')),\n  SubmitButton: loadable(() => import('./Form/SubmitButton')),\n  ResetButton: loadable(() => import('./Form/ResetButton')),\n  Remote: loadable(() => import('./Logic/Remote')),\n  Mapping: loadable(() => import('./Logic/Mapping')),\n  State: loadable(() => import('./Logic/State')),\n  Button: loadable(() => import('./General/Button')),\n  Img: loadable(() => import('./General/Img')),\n  Div: loadable(() => import('./Layout/Div'))\n};\n\nexport default components;","import button from './General/Button/profile.json';\nimport text from './General/Text/profile.json';\nimport row from './Layout/Row/profile.json';\nimport img from './General/Img/profile.json';\nimport col from './Layout/Col/profile.json';\nimport list from './Logic/List/profile.json';\nimport condition from './Logic/Condition/profile.json';\nimport form from './Form/profile.json';\nimport input from './Form/Input/profile.json';\nimport submitButton from './Form/SubmitButton/profile.json';\nimport avatar from './Form/Avatar/profile.json';\nimport cascader from './Form/Cascader/profile.json';\nimport datePicker from './Form/DatePicker/profile.json';\nimport checkboxGroup from './Form/CheckboxGroup/profile.json';\nimport inputNumber from './Form/InputNumber/profile.json';\nimport radioGroup from './Form/RadioGroup/profile.json';\nimport resetButton from './Form/ResetButton/profile.json';\nimport select from './Form/Select/profile.json';\nimport textArea from './Form/TextArea/profile.json';\nimport upload from './Form/Upload/profile.json';\nimport remote from './Logic/Remote/profile.json';\nimport mapping from './Logic/Mapping/profile.json';\nimport state from './Logic/State/profile.json';\nimport space from './Layout/Space/profile.json';\nimport div from './Layout/Div/profile.json';\n\nconst profile = {\n  'general': {\n    id: 'general',\n    label: '通用',\n    components: [button, text, img]\n  },\n  'layout': {\n    id: 'layout',\n    label: '布局',\n    components: [row, col, space, div]\n  },\n  'form': {\n    id: 'form',\n    label: '表单',\n    components: [form, input, submitButton, resetButton, avatar, cascader, checkboxGroup, datePicker, inputNumber, radioGroup, select, textArea, upload]\n  },\n  'logic': {\n    id: 'logic',\n    label: '逻辑',\n    components: [list, condition, remote, mapping, state]\n  }\n};\n\nexport default profile;\n\nexport const profileMap = {\n  [button.id]: button,\n  [text.id]: text,\n  [row.id]: row,\n  [col.id]: col,\n  [list.id]: list,\n  [condition.id]: condition,\n  [input.id]: input,\n  [form.id]: form,\n  [avatar.id]: avatar,\n  [cascader.id]: cascader,\n  [checkboxGroup.id]: checkboxGroup,\n  [datePicker.id]: datePicker,\n  [inputNumber.id]: inputNumber,\n  [radioGroup.id]: radioGroup,\n  [select.id]: select,\n  [textArea.id]: textArea,\n  [upload.id]: upload,\n  [submitButton.id]: submitButton,\n  [resetButton.id]: resetButton,\n  [img.id]: img,\n  [remote.id]: remote,\n  [mapping.id]: mapping,\n  [state.id]: state,\n  [space.id]: space,\n  [div.id]: div\n};","import React, { useEffect } from 'react';\nimport { Provider } from './context';\nimport components from './components';\nimport ErrorBoundary from '@kne/react-error-boundary';\nimport classnames from 'classnames';\n\nconst render = (data) => {\n  const target = Array.isArray(data) ? data : [data];\n\n  return target.map((item) => {\n    if (typeof item === 'string') {\n      return item;\n    }\n    const { id, component, props, children } = item;\n    const CurrentComponent = components[component];\n    if (!CurrentComponent) {\n      return null;\n    }\n\n    const newProps = Object.assign({}, props);\n\n    if (children) {\n      newProps.children = render(children);\n    }\n\n    return <CurrentComponent {...newProps} className={classnames(newProps.className, `id_${id}`)} $id={id} key={id}/>;\n  });\n};\n\nconst ErrorMsg = ({ error }) => {\n  useEffect(() => {\n    console.error(error);\n  }, [error]);\n  return <div>渲染发生错误，请检查配置或回滚操作</div>;\n};\n\nconst Render = ({ lib = {}, content, emitter }) => {\n  const variable = Object.assign({}, content.variable);\n  const data = content.data || [];\n  const functions = Object.assign({}, content.functions);\n  return (\n    <ErrorBoundary errorComponent={ErrorMsg}>\n      <Provider value={{\n        lib,\n        functions,\n        data,\n        variable,\n        emitter,\n        isEditor: !!emitter\n      }}>\n        {render(data)}\n      </Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default Render;\n\nexport { default as profile, profileMap } from './profile';\n\n"]},"metadata":{},"sourceType":"module"}