{"ast":null,"code":"import _toConsumableArray from \"/Users/linzhipeng/Documents/code_cloud/@kne/react-view-render/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { u as useGlobalContext, _ as _objectWithoutPropertiesLoose, P as Provider } from './index-d82fe889.js';\nimport React, { useEffect } from 'react';\nimport get from 'lodash/get';\nvar _excluded = [\"variable\", \"functions\"];\n\nvar escape = function escape(value) {\n  if (typeof value === 'string' && value.indexOf('\\\\$') === 0) {\n    return value.replace('\\\\$', '$');\n  }\n\n  return value;\n};\n\nvar parseVariable = function parseVariable(value) {\n  if (typeof value !== 'string') {\n    return {\n      name: value,\n      path: ''\n    };\n  }\n\n  if (!/[.\\[]/.test(value)) {\n    return {\n      name: value,\n      path: ''\n    };\n  }\n\n  var dotIndexList = ['[', '.'].map(function (sign) {\n    return value.indexOf(sign);\n  }).filter(function (index) {\n    return index > -1;\n  });\n\n  if (dotIndexList.length === 0) {\n    return {\n      name: value,\n      path: ''\n    };\n  }\n\n  var dotIndex = Math.min.apply(Math, _toConsumableArray(dotIndexList));\n  return {\n    name: value.substr(0, dotIndex),\n    path: value.substr(dotIndex).replace(/^\\./, '')\n  };\n};\n\nvar extractProps = function extractProps() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var output = {\n    props: {},\n    extract: {}\n  };\n  Object.keys(props).forEach(function (key) {\n    if (key.charAt(0) === '$') {\n      output.extract[key] = props[key];\n    } else {\n      output.props[escape(key)] = props[key];\n    }\n  });\n  return output;\n};\n\nvar applyVariable = function applyVariable(WrappedComponent) {\n  return function (originProps) {\n    var _useGlobalContext = useGlobalContext(),\n        variable = _useGlobalContext.variable,\n        functions = _useGlobalContext.functions,\n        otherContext = _objectWithoutPropertiesLoose(_useGlobalContext, _excluded);\n\n    var emitter = otherContext.emitter;\n\n    var _extractProps = extractProps(originProps),\n        props = _extractProps.props,\n        extract = _extractProps.extract;\n\n    var newProps = {},\n        currentVariable = Object.assign({}, variable, extract);\n    Object.keys(props).forEach(function (key) {\n      var propsValue = props[key],\n          parsedPropsValue = parseVariable(props[key]);\n\n      if (currentVariable.hasOwnProperty(propsValue)) {\n        newProps[key] = currentVariable[propsValue];\n        return;\n      }\n\n      if (currentVariable.hasOwnProperty(parsedPropsValue.name)) {\n        newProps[key] = get(currentVariable[parsedPropsValue.name], parsedPropsValue.path);\n        return;\n      }\n\n      if (functions.hasOwnProperty(propsValue)) {\n        if (typeof functions[propsValue] === 'string') {\n          newProps[key] = function () {\n            var newFunction = new Function('args', 'variable', 'functions', 'lib', functions[propsValue]);\n\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            return newFunction(args, currentVariable, functions, otherContext.lib);\n          };\n\n          return;\n        }\n\n        if (typeof functions[propsValue] === 'function') {\n          newProps[key] = functions[propsValue];\n          return;\n        }\n\n        return;\n      }\n\n      newProps[key] = escape(propsValue);\n    });\n    useEffect(function () {\n      emitter && emitter.emit('component-appended', currentVariable.$id);\n      return function () {\n        emitter && emitter.emit('component-removed', currentVariable.$id);\n      };\n    }, [emitter]);\n\n    if (Object.keys(extract).length > 0) {\n      return /*#__PURE__*/React.createElement(Provider, {\n        value: Object.assign({}, otherContext, {\n          functions: functions,\n          variable: currentVariable\n        })\n      }, /*#__PURE__*/React.createElement(WrappedComponent, newProps));\n    }\n\n    return /*#__PURE__*/React.createElement(WrappedComponent, newProps);\n  };\n};\n\nexport { applyVariable as a };","map":{"version":3,"sources":["../src/util.js"],"names":["escape","value","parseVariable","name","path","dotIndexList","sign","index","dotIndex","Math","extractProps","props","output","extract","Object","key","applyVariable","WrappedComponent","originProps","functions","useGlobalContext","emitter","newProps","currentVariable","propsValue","parsedPropsValue","get","newFunction","otherContext","useEffect","variable"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useGlobalContext, Provider } from './context';\nimport get from 'lodash/get';\n\nconst escape = (value) => {\n  if (typeof value === 'string' && value.indexOf('\\\\$') === 0) {\n    return value.replace('\\\\$', '$');\n  }\n  return value;\n};\n\nconst parseVariable = (value) => {\n  if (typeof value !== 'string') {\n    return {\n      name: value,\n      path: ''\n    };\n  }\n  if (!/[.\\[]/.test(value)) {\n    return {\n      name: value,\n      path: ''\n    };\n  }\n  const dotIndexList = ['[', '.'].map((sign) => value.indexOf(sign)).filter((index) => index > -1);\n  if (dotIndexList.length === 0) {\n    return {\n      name: value,\n      path: ''\n    };\n  }\n  const dotIndex = Math.min(...dotIndexList);\n  return {\n    name: value.substr(0, dotIndex),\n    path: value.substr(dotIndex).replace(/^\\./, '')\n  };\n};\n\nexport const extractProps = (props = {}) => {\n  const output = {\n    props: {}, extract: {}\n  };\n  Object.keys(props).forEach((key) => {\n    if (key.charAt(0) === '$') {\n      output.extract[key] = props[key];\n    } else {\n      output.props[escape(key)] = props[key];\n    }\n  });\n\n  return output;\n};\n\nexport const applyVariable = (WrappedComponent) => {\n  return (originProps) => {\n    const { variable, functions, ...otherContext } = useGlobalContext();\n    const { emitter } = otherContext;\n    const { props, extract } = extractProps(originProps);\n    const newProps = {}, currentVariable = Object.assign({}, variable, extract);\n    Object.keys(props).forEach((key) => {\n      const propsValue = props[key], parsedPropsValue = parseVariable(props[key]);\n\n      if (currentVariable.hasOwnProperty(propsValue)) {\n        newProps[key] = currentVariable[propsValue];\n        return;\n      }\n\n      if (currentVariable.hasOwnProperty(parsedPropsValue.name)) {\n        newProps[key] = get(currentVariable[parsedPropsValue.name], parsedPropsValue.path);\n        return;\n      }\n\n      if (functions.hasOwnProperty(propsValue)) {\n        if (typeof functions[propsValue] === 'string') {\n          newProps[key] = (...args) => {\n            const newFunction = new Function('args', 'variable', 'functions', 'lib', functions[propsValue]);\n            return newFunction(args, currentVariable, functions, otherContext.lib);\n          };\n          return;\n        }\n        if (typeof functions[propsValue] === 'function') {\n          newProps[key] = functions[propsValue];\n          return;\n        }\n        return;\n      }\n\n      newProps[key] = escape(propsValue);\n    });\n    useEffect(() => {\n      emitter && emitter.emit('component-appended', currentVariable.$id);\n      return () => {\n        emitter && emitter.emit('component-removed', currentVariable.$id);\n      };\n    }, [emitter]);\n    if (Object.keys(extract).length > 0) {\n      return <Provider\n        value={Object.assign({}, otherContext, { functions, variable: currentVariable })}>\n        <WrappedComponent {...newProps}/>\n      </Provider>;\n    }\n    return <WrappedComponent {...newProps}/>;\n  };\n};"]},"metadata":{},"sourceType":"module"}