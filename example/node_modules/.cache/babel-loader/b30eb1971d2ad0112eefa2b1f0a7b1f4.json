{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport React, { useRef, useState as useState$1, useEffect, useCallback, useImperativeHandle, forwardRef, memo } from 'react';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport axios from 'axios';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport get from 'lodash/get';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport hash from 'object-hash';\nimport _extends from '@babel/runtime/helpers/extends';\nimport isFunction from 'lodash/isFunction';\nimport memoize from 'lodash/memoize';\nimport pick from 'lodash/pick';\nimport merge from 'lodash/merge';\n\nvar useState = function useState() {\n  var isUnmount = useRef(false);\n\n  var _useState = useState$1.apply(void 0, arguments),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    return function () {\n      isUnmount.current = true;\n    };\n  }, []);\n  var setSafeState = useCallback(function () {\n    if (isUnmount.current === false) {\n      setState.apply(void 0, arguments);\n    }\n  }, [setState]);\n  return [state, setSafeState];\n};\n\nvar useFetchCreate = function useFetchCreate(_ref, ref) {\n  var fetcher = _ref.fetcher,\n      auto = _ref.auto;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isComplete = _useState4[0],\n      setIsComplete = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      results = _useState6[0],\n      setResults = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMsg = _useState8[0],\n      setErrorMsg = _useState8[1];\n\n  var isInit = useRef(true);\n  var send = useCallback(function (force) {\n    setIsLoading(true);\n    return fetcher(force).then(function (_ref2) {\n      var data = _ref2.data;\n\n      if (data.code === 200) {\n        setResults(data.results);\n        setIsComplete(true);\n      } else {\n        setErrorMsg(data.msg || '请求错误');\n      }\n    })[\"finally\"](function () {\n      setIsLoading(false);\n    });\n  }, [fetcher]);\n  var refresh = useCallback(function () {\n    var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return send(force);\n  }, [send]);\n  var setData = useCallback(function (newResults) {\n    setResults(newResults);\n  }, [setResults]);\n  useImperativeHandle(ref, function () {\n    return {\n      data: results,\n      refresh: refresh,\n      setData: setData\n    };\n  }, [results, refresh, setData]);\n  useEffect(function () {\n    auto && send(isInit.current);\n    isInit.current = false;\n  }, [auto, send]);\n  return {\n    isLoading: isLoading,\n    isComplete: isComplete,\n    errorMsg: errorMsg,\n    results: results,\n    refresh: refresh,\n    setData: setData\n  };\n};\n\nvar defaults = {\n  expire: 1000 * 60 * 5,\n  // 过期时间  默认5分钟; 0:表示不过期\n  storage: false,\n  // 是否开启本地缓存\n  storage_expire: 1000 * 60 * 5,\n  // 本地缓存过期时间  默认一小时; 0:表示不过期\n  max_cache_size: 15 // 指定最多可缓存的条目数，超过这个数量时最早的缓存会被删除，默认为 15\n\n};\n\nvar Cache = /*#__PURE__*/function () {\n  function Cache(options) {\n    _classCallCheck(this, Cache);\n\n    this.cacheMap = new Map();\n    validateOptions(options);\n    this.options = Object.assign({}, defaults, options);\n  } // 设置缓存的值\n\n\n  _createClass(Cache, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      validateOptions(options);\n      this.options = Object.assign({}, defaults, options);\n    } // 清除本地缓存\n\n  }, {\n    key: \"removeStorage\",\n    value: function removeStorage() {\n      localStorage.clear();\n    } // 清除本地缓存\n\n  }, {\n    key: \"removeStorageByKey\",\n    value: function removeStorageByKey(key) {\n      localStorage.removeItem(key);\n    } // 设置缓存\n\n  }, {\n    key: \"setStorage\",\n    value: function setStorage(key, value) {\n      // 清除过期缓存\n      this.clearExpireCache();\n      var expire = getExpireTime(); // 如果启用本地缓存\n\n      localStorage.setItem(key, JSON.stringify({\n        expire: expire,\n        value: value\n      })); // 校验本地现有缓存数量\n\n      if (localStorage.length > this.options.max_cache_size && localStorage.length > 0) {\n        // 移除最早的缓存\n        var lastedKey = localStorage.key(0);\n        this.removeStorageByKey(lastedKey);\n      }\n    }\n  }, {\n    key: \"hasStorage\",\n    value: function hasStorage(key) {\n      this.clearExpireCache();\n      return this.getStorage(key);\n    } // 获取缓存\n\n  }, {\n    key: \"getStorage\",\n    value: function getStorage(key) {\n      var data = localStorage.getItem(key);\n      return JSON.parse(data);\n    } // 添加缓存\n\n  }, {\n    key: \"setCache\",\n    value: function setCache(key, value) {\n      // 清除过期缓存\n      this.clearExpireCache();\n      var expire = getExpireTime(); // 添加缓存\n\n      this.cacheMap.set(key, {\n        expire: expire,\n        value: value\n      }); // 校验现有缓存数量\n\n      if (this.cacheMap.size > this.options.max_cache_size) {\n        // 移除最早的缓存\n        this.cacheMap[\"delete\"](_toConsumableArray(this.cacheMap.keys())[0]);\n      }\n    } // 获取缓存\n\n  }, {\n    key: \"getCache\",\n    value: function getCache(key) {\n      return this.cacheMap.get(key);\n    } // 查看是否有该缓存\n\n  }, {\n    key: \"hasCache\",\n    value: function hasCache(key) {\n      this.clearExpireCache();\n      return this.cacheMap.has(key);\n    } // 删除缓存\n\n  }, {\n    key: \"removeCache\",\n    value: function removeCache(key) {\n      this.cacheMap[\"delete\"](key);\n      this.removeStorageByKey(key);\n    } // 清除过期缓存\n\n  }, {\n    key: \"clearExpireCache\",\n    value: function clearExpireCache() {\n      var _this = this;\n\n      var expire = getExpireTime();\n      var arr_expire_keys = [];\n\n      if (this.options.expire !== 0) {\n        this.cacheMap.forEach(function (item, key, mapObj) {\n          if (expire - item.expire > _this.options.expire) {\n            arr_expire_keys.push(key);\n          }\n        }); // 清除内存中的过期缓存\n\n        for (var i = 0; i < arr_expire_keys.length; i++) {\n          this.cacheMap[\"delete\"](i);\n        }\n      } // 清除本地种的过期缓存\n\n\n      if (this.options.storage_expire !== 0) {\n        for (var _i = 0; _i < localStorage.length; _i++) {\n          var key = localStorage.key(_i);\n          var tempCache = this.getStorage(key);\n\n          if (expire - tempCache.expire > this.options.storage_expire) {\n            this.removeStorageByKey(key);\n          }\n        }\n      }\n    } // 生成唯一的key\n\n  }, {\n    key: \"buildUniqueKey\",\n    value: function buildUniqueKey(config) {\n      var url = config.url,\n          params = config.params,\n          method = config.method,\n          data = config.data;\n      return hash({\n        url: url,\n        params: params,\n        method: method,\n        data: data\n      });\n    }\n  }]);\n\n  return Cache;\n}(); // 设置过期时间\n\n\nfunction getExpireTime() {\n  return new Date().getTime();\n} // 校验参数类型\n\n\nfunction validateOptions(options) {\n  var toString = Object.prototype.toString;\n\n  if (toString.call(get(options, 'expire', 1000 * 60 * 5)) !== '[object Number]') {\n    throw new Error('expire:应为数值类型');\n  }\n\n  if (toString.call(get(options, 'storage', false)) !== '[object Boolean]') {\n    throw new Error('storage:应为布尔类型');\n  }\n\n  if (toString.call(get(options, 'storage_expire', 1000 * 60 * 5)) !== '[object Number]') {\n    throw new Error('storage_expire:应为数值类型');\n  }\n\n  if (toString.call(get(options, 'max_cache_size', 15)) !== '[object Number]') {\n    throw new Error('max_cache_size:应为数值类型');\n  }\n}\n\nfunction withAxios(instance, option) {\n  var cacher = new Cache({});\n\n  function axiosWithCache() {\n    for (var _len = arguments.length, arg = new Array(_len), _key = 0; _key < _len; _key++) {\n      arg[_key] = arguments[_key];\n    }\n\n    var allOptions = getCacheOption.apply(void 0, arg);\n    cacher.setOptions(allOptions); // 校验参数中是否定义了cache属性\n\n    var needCache = validNeedCache.apply(void 0, arg);\n\n    if (needCache) {\n      var config = arg[0]; // 判断当前请求的缓存是否存在，存在返回缓存信息，不存在请求数据\n\n      var cacheKey = cacher.buildUniqueKey(config);\n      var responsePromise = null;\n\n      if (cacher.hasCache(cacheKey)) {\n        responsePromise = cacher.getCache(cacheKey).value;\n        var tempOptions = JSON.stringify(cacher.options);\n        return responsePromise.then(function (response) {\n          responseJob(response, cacher, JSON.parse(tempOptions), cacheKey);\n          return JSON.parse(JSON.stringify(response));\n        });\n      } else if (cacher.getStorage(cacheKey)) {\n        var resultResponse = cacher.getStorage(cacheKey).value;\n        return Promise.resolve(resultResponse).then(function (data) {\n          return JSON.parse(JSON.stringify(data));\n        });\n      } else {\n        var _tempOptions = JSON.stringify(cacher.options);\n\n        responsePromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return instance.apply(void 0, arg);\n\n                case 3:\n                  response = _context.sent;\n                  responseJob(response, cacher, JSON.parse(_tempOptions), cacheKey);\n                  return _context.abrupt(\"return\", Promise.resolve(response));\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  cacher.removeCache(cacheKey);\n                  cacher.removeStorageByKey(cacheKey);\n                  return _context.abrupt(\"return\", Promise.reject(_context.t0));\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 8]]);\n        }))(); // 添加缓存, 为了并发多次请求的情况下，故添加内存的promise缓存\n\n        cacher.setCache(cacheKey, responsePromise); // 添加定时器，时间到自动清除缓存\n\n        if (cacher.options.expire && cacher.options.expire !== 0) {\n          setTimeout(function () {\n            console.log('cacher.expire---setTimeout', cacheKey);\n            cacher.removeCache(cacheKey);\n          }, cacher.options.expire);\n        }\n\n        if (cacher.options.storage_expire && cacher.options.storage_expire !== 0) {\n          setTimeout(function () {\n            console.log('cacher.storage_expire---setTimeout', cacheKey);\n            cacher.removeStorageByKey(cacheKey);\n          }, cacher.options.storage_expire);\n        }\n\n        return responsePromise.then(function (data) {\n          return JSON.parse(JSON.stringify(data));\n        });\n      }\n    } else {\n      return instance.apply(void 0, arg);\n    }\n  } // 处理返回结果\n\n\n  function responseJob(response, cacher, options, cacheKey) {\n    var result = option.transformResponse(response); // 将正确的结果放入缓存中; 如果返回的结果不正确，则不进行缓存，并且清除内存中的Promise缓存\n\n    if (result.data.code !== 200) {\n      cacher.removeCache(cacheKey);\n      cacher.removeStorageByKey(cacheKey);\n    } else {\n      // 如果启用本地缓存则将返回结果放入本地缓存中\n      if (options.storage && options.storage === true) {\n        cacher.setStorage(cacheKey, response);\n      }\n    }\n  } // 校验是否需要缓存该请求\n\n\n  function validNeedCache() {\n    var needCache = false;\n\n    for (var _len2 = arguments.length, arg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      arg[_key2] = arguments[_key2];\n    }\n\n    if (arg.length === 1 && arg[0].hasOwnProperty('cache')) {\n      var type = Object.prototype.toString.call(arg[0].cache);\n\n      if (type === '[object Boolean]' && arg[0].cache === true) {\n        needCache = true;\n      } else if (type === '[object Object]') {\n        needCache = true;\n      }\n    }\n\n    return needCache;\n  } // 获取参数中缓存的配置项\n\n\n  function getCacheOption() {\n    var toString = Object.prototype.toString;\n    var option = {}; // 默认如果有cache属性且是bool为true的类型或者对象类型则表示启用请求缓存，\n\n    for (var _len3 = arguments.length, arg = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      arg[_key3] = arguments[_key3];\n    }\n\n    if (validNeedCache.apply(void 0, arg)) {\n      var type = toString.call(arg[0].cache);\n\n      if (type === '[object Object]') {\n        if (arg[0].cache.hasOwnProperty('expire')) {\n          option['expire'] = get(arg[0].cache, 'expire');\n        }\n\n        if (arg[0].cache.hasOwnProperty('storage')) {\n          option['storage'] = get(arg[0].cache, 'storage');\n        }\n\n        if (arg[0].cache.hasOwnProperty('storage_expire')) {\n          option['storage_expire'] = get(arg[0].cache, 'storage_expire');\n        }\n\n        if (arg[0].cache.hasOwnProperty('max_cache_size')) {\n          option['max_cache_size'] = get(arg[0].cache, 'max_cache_size');\n        }\n      }\n    }\n\n    return option;\n  }\n\n  return axiosWithCache;\n}\n\nvar globalParams = {\n  ajax: axios.create(),\n  createConfig: null,\n  loading: null,\n  error: null,\n  empty: null,\n  transformResponse: function transformResponse(response) {\n    var data = response.data;\n    response.data = {\n      code: data.code,\n      msg: data.msg,\n      results: data.results\n    };\n    return response;\n  }\n};\nvar instance = withAxios(globalParams.ajax, globalParams);\n\nvar preset = function preset(newOptions) {\n  var newParams = Object.assign(globalParams, newOptions);\n  instance = withAxios(newParams.ajax, newParams);\n  return newParams;\n};\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar useFetch = function useFetch(_ref, ref) {\n  var _ref$auto = _ref.auto,\n      auto = _ref$auto === void 0 ? true : _ref$auto,\n      url = _ref.url,\n      params = _ref.params,\n      data = _ref.data,\n      options = _ref.options;\n  var fetcher = useCallback(function () {\n    return instance(_objectSpread({}, options, {\n      url: url,\n      params: params,\n      data: data\n    })).then(function (response) {\n      return globalParams.transformResponse(response);\n    });\n  }, [url, params, data, options]);\n  return useFetchCreate({\n    fetcher: fetcher,\n    auto: auto\n  }, ref);\n};\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar useFetchRender = function useFetchRender(_ref) {\n  var loading = _ref.loading,\n      empty = _ref.empty,\n      error = _ref.error,\n      component = _ref.component,\n      render = _ref.render,\n      isLoading = _ref.isLoading,\n      isComplete = _ref.isComplete,\n      errorMsg = _ref.errorMsg,\n      results = _ref.results,\n      refresh = _ref.refresh,\n      setData = _ref.setData,\n      props = _ref.props;\n\n  if (isLoading) {\n    return loading;\n  }\n\n  if (errorMsg !== undefined) {\n    if (isFunction(error)) {\n      return error(errorMsg);\n    }\n\n    return error;\n  }\n\n  if (!isComplete) {\n    //防止isLoading初始化渲染\n    return empty;\n  }\n\n  if (component) {\n    var FetchComponent = component;\n    return /*#__PURE__*/React.createElement(FetchComponent, _extends({}, props, {\n      data: results,\n      refresh: refresh,\n      setData: setData\n    }));\n  }\n\n  if (render) {\n    return render(_objectSpread$1({}, props, {\n      data: results,\n      refresh: refresh,\n      setData: setData\n    }));\n  }\n\n  throw new Error('请传入component参数或者render参数');\n};\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$2(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar Fetch = forwardRef(function (_ref, ref) {\n  var url = _ref.url,\n      _ref$auto = _ref.auto,\n      auto = _ref$auto === void 0 ? true : _ref$auto,\n      data = _ref.data,\n      params = _ref.params,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? globalParams.loading : _ref$loading,\n      _ref$empty = _ref.empty,\n      empty = _ref$empty === void 0 ? globalParams.empty : _ref$empty,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? globalParams.error : _ref$error,\n      component = _ref.component,\n      render = _ref.render,\n      options = _ref.options,\n      props = _objectWithoutProperties(_ref, [\"url\", \"auto\", \"data\", \"params\", \"loading\", \"empty\", \"error\", \"component\", \"render\", \"options\"]);\n\n  var fetcher = useFetch({\n    url: url,\n    auto: auto,\n    params: params,\n    data: data,\n    options: options\n  }, ref);\n  return useFetchRender(_objectSpread$2({\n    loading: loading,\n    error: error,\n    empty: empty,\n    component: component,\n    render: render,\n    props: props\n  }, fetcher));\n});\n\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$3(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$3(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar fetchMemo = memoize(function (_ref) {\n  var url = _ref.url,\n      options = _ref.options,\n      data = _ref.data;\n  return instance(_objectSpread$3({\n    url: url,\n    data: data\n  }, options));\n}, function (object, force) {\n  if (force === true) {\n    return Symbol();\n  }\n\n  return hash(object);\n});\n\nvar resultsMerge = function resultsMerge(list) {\n  if (list.length === 0) {\n    return {};\n  }\n\n  var allKeys = Object.keys(Object.assign.apply(Object, [{}].concat(_toConsumableArray(list))));\n\n  var reduceCallback = function reduceCallback(current, next, index) {\n    var obj = {};\n    allKeys.forEach(function (key) {\n      if (key === 'code') {\n        obj[key] = current[key];\n      } else {\n        if (index <= 1) {\n          obj[key] = [current[key]];\n        } else {\n          obj[key] = current[key];\n        }\n\n        if (index > 0) {\n          obj[key].push(next[key]);\n        }\n      }\n    });\n    return obj;\n  };\n\n  if (list.length === 1) {\n    return reduceCallback(list[0], null, 0);\n  }\n\n  return list.reduce(reduceCallback);\n};\n\nvar useFetchAll = function useFetchAll(_ref, ref) {\n  var _ref$auto = _ref.auto,\n      auto = _ref$auto === void 0 ? true : _ref$auto,\n      fetchers = _ref.fetchers;\n  var fetcher = useCallback(function (force) {\n    return Promise.all(fetchers.map(function (item) {\n      return fetchMemo(item, force);\n    })).then(function (list) {\n      var dataList = list.map(function (response) {\n        return globalParams.transformResponse(response).data;\n      });\n\n      if (dataList.every(function (data) {\n        return data.code === 200;\n      })) {\n        return {\n          data: resultsMerge(dataList)\n        };\n      } else {\n        var resData = dataList.find(function (_ref2) {\n          var data = _ref2.data;\n          return data.code !== 200;\n        });\n        return {\n          data: resData\n        };\n      }\n    });\n  }, [fetchers]);\n  return useFetchCreate({\n    fetcher: fetcher,\n    auto: auto\n  }, ref);\n};\n\nfunction ownKeys$4(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$4(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$4(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$4(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar FetchAll = memo(forwardRef(function (_ref, ref) {\n  var fetchers = _ref.fetchers,\n      _ref$auto = _ref.auto,\n      auto = _ref$auto === void 0 ? true : _ref$auto,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? globalParams.loading : _ref$loading,\n      _ref$empty = _ref.empty,\n      empty = _ref$empty === void 0 ? globalParams.empty : _ref$empty,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? globalParams.error : _ref$error,\n      component = _ref.component,\n      render = _ref.render,\n      props = _objectWithoutProperties(_ref, [\"fetchers\", \"auto\", \"loading\", \"empty\", \"error\", \"component\", \"render\"]);\n\n  var fetcher = useFetchAll({\n    fetchers: fetchers,\n    auto: auto\n  }, ref);\n  return useFetchRender(_objectSpread$4({\n    loading: loading,\n    error: error,\n    empty: empty,\n    component: component,\n    render: render,\n    props: props\n  }, fetcher));\n}, function (prevProps, nextProps) {\n  return hash(prevProps) !== hash(nextProps);\n}));\n\nvar withFetch = function withFetch(WrappedComponent) {\n  return forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(Fetch, _extends({}, props, {\n      component: WrappedComponent,\n      ref: ref\n    }));\n  });\n};\n\nvar createWithFetch = function createWithFetch(params) {\n  return function (WrappedComponent) {\n    var pickParams = pick(params, ['url', 'params', 'data', 'options', 'loading', 'error', 'auto']);\n    var FetchComponent = withFetch(WrappedComponent);\n    return forwardRef(function (props, ref) {\n      return /*#__PURE__*/React.createElement(FetchComponent, _extends({}, merge({}, pickParams, props), {\n        ref: ref\n      }));\n    });\n  };\n};\n\nvar withFetchAll = function withFetchAll(WrappedComponent) {\n  return forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(FetchAll, _extends({}, props, {\n      component: WrappedComponent,\n      ref: ref\n    }));\n  });\n};\n\nvar createWithFetchAll = function createWithFetchAll(params) {\n  return function (WrappedComponent) {\n    var pickParams = pick(params, ['fetchers', 'loading', 'error', 'auto']);\n    var FetchComponent = withFetchAll(WrappedComponent);\n    return forwardRef(function (props, ref) {\n      return /*#__PURE__*/React.createElement(FetchComponent, _extends({}, merge({}, pickParams, props), {\n        ref: ref\n      }));\n    });\n  };\n};\n\nexport default Fetch;\nexport { FetchAll, createWithFetch, createWithFetchAll, preset, useFetch, useFetchAll, withFetch, withFetchAll };","map":{"version":3,"sources":["../src/useSafeState.js","../src/useFetchCreate.js","../src/axiosCache/cache.js","../src/axiosCache/index.js","../src/preset.js","../src/useFetch.js","../src/useFetchRender.js","../src/Fetch.js","../src/fetchMemo.js","../src/resultsMerge.js","../src/useFetchAll.js","../src/FetchAll.js","../src/withFetch.js","../src/withFetchAll.js"],"names":["isUnmount","useRef","state","setState","useState","useEffect","setSafeState","useCallback","fetcher","auto","isLoading","setIsLoading","isComplete","setIsComplete","results","setResults","errorMsg","setErrorMsg","isInit","send","data","refresh","force","setData","useImperativeHandle","defaults","expire","storage","storage_expire","max_cache_size","Cache","validateOptions","Object","options","localStorage","key","value","getExpireTime","lastedKey","JSON","arr_expire_keys","item","i","tempCache","config","url","params","method","hash","toString","get","cacher","arg","allOptions","getCacheOption","needCache","validNeedCache","cacheKey","responsePromise","tempOptions","responseJob","resultResponse","response","instance","Promise","setTimeout","console","result","option","type","globalParams","ajax","axios","createConfig","loading","error","empty","transformResponse","code","msg","withAxios","newParams","useFetchCreate","component","render","props","isFunction","FetchComponent","forwardRef","useFetch","useFetchRender","memoize","Symbol","list","allKeys","reduceCallback","obj","current","index","next","fetchers","fetchMemo","dataList","resultsMerge","resData","memo","useFetchAll","objectHash","withFetch","ref","createWithFetch","pickParams","pick","merge","withFetchAll","createWithFetchAll"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\n\nexport default (...props) => {\n  const isUnmount = useRef(false);\n  const [state, setState] = useState(...props);\n  useEffect(() => {\n    return () => {\n      isUnmount.current = true;\n    };\n  }, []);\n\n  const setSafeState = useCallback((...props) => {\n    if (isUnmount.current === false) {\n      setState(...props);\n    }\n  }, [setState]);\n\n  return [state, setSafeState];\n};\n","import {useRef, useCallback, useEffect, useImperativeHandle} from 'react';\nimport useState from './useSafeState';\n\nexport default ({fetcher, auto}, ref) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n  const [results, setResults] = useState({});\n  const [errorMsg, setErrorMsg] = useState();\n  const isInit = useRef(true);\n  const send = useCallback((force) => {\n    setIsLoading(true);\n    return fetcher(force).then(({data}) => {\n      if (data.code === 200) {\n        setResults(data.results);\n        setIsComplete(true);\n      } else {\n        setErrorMsg(data.msg || '请求错误');\n      }\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, [fetcher]);\n\n  const refresh = useCallback((force = true) => send(force), [send]);\n  const setData = useCallback((newResults) => {\n    setResults(newResults);\n  }, [setResults]);\n\n  useImperativeHandle(ref, () => {\n    return {data: results, refresh, setData};\n  }, [results, refresh, setData]);\n\n  useEffect(() => {\n    auto && send(isInit.current);\n    isInit.current = false;\n  }, [auto, send]);\n\n  return {isLoading, isComplete, errorMsg, results, refresh, setData};\n};\n","import get from 'lodash/get';\nimport hash from 'object-hash';\nconst defaults = {\n    expire: 1000 * 60 * 5, // 过期时间  默认5分钟; 0:表示不过期\n    storage: false, // 是否开启本地缓存\n    storage_expire: 1000 * 60 * 5, // 本地缓存过期时间  默认一小时; 0:表示不过期\n    max_cache_size: 15, // 指定最多可缓存的条目数，超过这个数量时最早的缓存会被删除，默认为 15\n};\nexport default class Cache {\n    constructor(options) {\n        this.cacheMap = new Map();\n        validateOptions(options);\n        this.options = Object.assign({}, defaults, options);\n    }\n    // 设置缓存的值\n    setOptions(options) {\n        validateOptions(options);\n        this.options = Object.assign({}, defaults, options);\n    }\n    // 清除本地缓存\n    removeStorage() {\n        localStorage.clear()\n    }\n    // 清除本地缓存\n    removeStorageByKey(key) {\n        localStorage.removeItem(key)\n    }\n    // 设置缓存\n    setStorage(key, value) {\n        // 清除过期缓存\n        this.clearExpireCache();\n        let expire = getExpireTime();\n        // 如果启用本地缓存\n        localStorage.setItem(key, JSON.stringify({\n            expire,\n            value\n        }))\n        // 校验本地现有缓存数量\n        if (localStorage.length > this.options.max_cache_size && localStorage.length > 0) {\n            // 移除最早的缓存\n            let lastedKey = localStorage.key(0);\n            this.removeStorageByKey(lastedKey);\n        }\n    }\n    hasStorage(key) {\n        this.clearExpireCache();\n        return this.getStorage(key);\n    }\n    // 获取缓存\n    getStorage(key) {\n        let data = localStorage.getItem(key)\n        return JSON.parse(data)\n    }\n    // 添加缓存\n    setCache(key, value) {\n        // 清除过期缓存\n        this.clearExpireCache();\n        let expire = getExpireTime();\n        // 添加缓存\n        this.cacheMap.set(key, {\n            expire,\n            value\n        });\n        // 校验现有缓存数量\n        if (this.cacheMap.size > this.options.max_cache_size) {\n            // 移除最早的缓存\n            this.cacheMap.delete([...(this.cacheMap).keys()][0]);\n        }\n    }\n    // 获取缓存\n    getCache(key) {\n        return this.cacheMap.get(key);\n    }\n    // 查看是否有该缓存\n    hasCache(key) {\n        this.clearExpireCache();\n        return this.cacheMap.has(key);\n    }\n    // 删除缓存\n    removeCache(key) {\n        this.cacheMap.delete(key);\n        this.removeStorageByKey(key);\n    }\n    // 清除过期缓存\n    clearExpireCache() {\n        let expire = getExpireTime();\n        let arr_expire_keys = [];\n        if (this.options.expire !== 0) {\n            this.cacheMap.forEach((item, key, mapObj) => {\n                if (expire - item.expire > this.options.expire) {\n                    arr_expire_keys.push(key)\n                }\n            })\n            // 清除内存中的过期缓存\n            for (let i = 0; i < arr_expire_keys.length; i++) {\n                this.cacheMap.delete(i)\n            }\n        }\n        // 清除本地种的过期缓存\n        if (this.options.storage_expire !== 0) {\n            for (let i = 0; i < localStorage.length; i++) {\n                let key = localStorage.key(i);\n                let tempCache = this.getStorage(key);\n                if (expire - tempCache.expire > this.options.storage_expire) {\n                    this.removeStorageByKey(key);\n                }\n            }\n        }\n    }\n    // 生成唯一的key\n    buildUniqueKey(config) {\n        const { url, params, method, data } = config;\n        return hash({\n            url, params, method, data\n        });\n    }\n}\n// 设置过期时间\nfunction getExpireTime() {\n    return new Date().getTime()\n}\n// 校验参数类型\nfunction validateOptions(options) {\n    const toString = Object.prototype.toString;\n    if (toString.call(get(options, 'expire', 1000 * 60 * 5)) !== '[object Number]') {\n        throw new Error('expire:应为数值类型')\n    }\n    if (toString.call(get(options, 'storage', false)) !== '[object Boolean]') {\n        throw new Error('storage:应为布尔类型')\n    }\n    if (toString.call(get(options, 'storage_expire', 1000 * 60 * 5)) !== '[object Number]') {\n        throw new Error('storage_expire:应为数值类型')\n    }\n    if (toString.call(get(options, 'max_cache_size', 15)) !== '[object Number]') {\n        throw new Error('max_cache_size:应为数值类型')\n    }\n}\n\n","import get from 'lodash/get';\nimport Cache from './cache.js'\n\nexport default function withAxios(instance, option) {\n    const cacher = new Cache({});\n    function axiosWithCache(...arg) {\n        let allOptions = getCacheOption(...arg);\n        cacher.setOptions(allOptions);\n        // 校验参数中是否定义了cache属性\n        let needCache = validNeedCache(...arg);\n        if (needCache) {\n            let config = arg[0];\n            // 判断当前请求的缓存是否存在，存在返回缓存信息，不存在请求数据\n            let cacheKey = cacher.buildUniqueKey(config)\n            let responsePromise = null;\n            if (cacher.hasCache(cacheKey)) {\n                responsePromise = cacher.getCache(cacheKey).value;\n                let tempOptions = JSON.stringify(cacher.options)\n                return responsePromise.then(response => {\n                    responseJob(response, cacher, JSON.parse(tempOptions), cacheKey);\n                    return JSON.parse(JSON.stringify(response))\n                });\n            } else if (cacher.getStorage(cacheKey)) {\n                let resultResponse = cacher.getStorage(cacheKey).value;\n                return Promise.resolve(resultResponse).then(data => JSON.parse(JSON.stringify(data)));\n            } else {\n                let tempOptions = JSON.stringify(cacher.options)\n                responsePromise = (async () => {\n                    try {\n                        const response = await instance(...arg);\n                        responseJob(response, cacher, JSON.parse(tempOptions), cacheKey);\n                        return Promise.resolve(response);\n                    } catch (reason) {\n                        cacher.removeCache(cacheKey)\n                        cacher.removeStorageByKey(cacheKey)\n                        return Promise.reject(reason)\n                    }\n                })()\n                // 添加缓存, 为了并发多次请求的情况下，故添加内存的promise缓存\n                cacher.setCache(cacheKey, responsePromise)\n                // 添加定时器，时间到自动清除缓存\n                if (cacher.options.expire && cacher.options.expire !== 0) {\n                    setTimeout(() => {\n                        console.log('cacher.expire---setTimeout', cacheKey)\n                        cacher.removeCache(cacheKey)\n                    }, cacher.options.expire)\n                }\n                if (cacher.options.storage_expire && cacher.options.storage_expire !== 0) {\n                    setTimeout(() => {\n                        console.log('cacher.storage_expire---setTimeout', cacheKey)\n                        cacher.removeStorageByKey(cacheKey)\n                    }, cacher.options.storage_expire)\n                }\n                return responsePromise.then(data => JSON.parse(JSON.stringify(data)));\n            }\n        } else {\n            return instance(...arg);\n        }\n    }\n    // 处理返回结果\n    function responseJob(response, cacher, options, cacheKey) {\n        const result = option.transformResponse(response);\n        // 将正确的结果放入缓存中; 如果返回的结果不正确，则不进行缓存，并且清除内存中的Promise缓存\n        if (result.data.code !== 200) {\n            cacher.removeCache(cacheKey)\n            cacher.removeStorageByKey(cacheKey)\n        } else {\n            // 如果启用本地缓存则将返回结果放入本地缓存中\n            if (options.storage && options.storage === true) {\n                cacher.setStorage(cacheKey, response)\n            }\n        }\n    }\n    // 校验是否需要缓存该请求\n    function validNeedCache(...arg) {\n        let needCache = false;\n        if (arg.length === 1 && arg[0].hasOwnProperty('cache')) {\n            let type = Object.prototype.toString.call(arg[0].cache);\n            if (type === '[object Boolean]' && arg[0].cache === true) {\n                needCache = true\n            } else if (type === '[object Object]') {\n                needCache = true\n            }\n        }\n        return needCache;\n    }\n    // 获取参数中缓存的配置项\n    function getCacheOption(...arg) {\n        let toString = Object.prototype.toString;\n        let option = {};\n        // 默认如果有cache属性且是bool为true的类型或者对象类型则表示启用请求缓存，\n        if (validNeedCache(...arg)) {\n            let type = toString.call(arg[0].cache);\n            if (type === '[object Object]') {\n                if (arg[0].cache.hasOwnProperty('expire')) {\n                    option['expire'] = get(arg[0].cache, 'expire')\n                }\n                if (arg[0].cache.hasOwnProperty('storage')) {\n                    option['storage'] = get(arg[0].cache, 'storage')\n                }\n                if (arg[0].cache.hasOwnProperty('storage_expire')) {\n                    option['storage_expire'] = get(arg[0].cache, 'storage_expire')\n                }\n                if (arg[0].cache.hasOwnProperty('max_cache_size')) {\n                    option['max_cache_size'] = get(arg[0].cache, 'max_cache_size')\n                }\n            }\n        }\n        return option;\n    }\n    return axiosWithCache;\n}","import axios from 'axios';\nimport withAxios from './axiosCache/index';\n\nexport const globalParams = {\n  ajax: axios.create(),\n  createConfig: null,\n  loading: null,\n  error: null,\n  empty: null,\n  transformResponse: (response) => {\n    const { data } = response;\n    response.data = {\n      code: data.code,\n      msg: data.msg,\n      results: data.results\n    };\n    return response;\n  }\n};\n\nexport let instance = withAxios(globalParams.ajax, globalParams);\n\nexport default (newOptions) => {\n  let newParams = Object.assign(globalParams, newOptions);\n  instance = withAxios(newParams.ajax, newParams);\n  return newParams;\n};\n\n\n","import {useCallback} from 'react';\nimport useFetchCreate from './useFetchCreate';\nimport {globalParams, instance} from './preset';\n\nexport default ({auto = true, url, params, data, options}, ref) => {\n    const fetcher = useCallback(() => {\n        return instance({\n            ...options,\n            url,\n            params,\n            data\n        }).then((response) => {\n            return globalParams.transformResponse(response);\n        })\n    }, [url, params, data, options]);\n    return useFetchCreate({\n        fetcher,\n        auto\n    }, ref);\n};\n","import React from 'react';\nimport isFunction from \"lodash/isFunction\";\n\nexport default ({loading, empty, error, component, render, isLoading, isComplete, errorMsg, results, refresh, setData, props}) => {\n    if (isLoading) {\n        return loading;\n    }\n\n    if (errorMsg !== undefined) {\n        if (isFunction(error)) {\n            return error(errorMsg);\n        }\n        return error;\n    }\n\n    if (!isComplete) {\n        //防止isLoading初始化渲染\n        return empty;\n    }\n\n    if (component) {\n        const FetchComponent = component;\n        return <FetchComponent {...props} data={results} refresh={refresh} setData={setData}/>;\n    }\n\n    if (render) {\n        return render({...props, data: results, refresh, setData});\n    }\n\n    throw new Error('请传入component参数或者render参数');\n};\n","import React, {forwardRef} from 'react';\nimport useFetch from './useFetch';\nimport {globalParams} from './preset';\nimport useFetchRender from './useFetchRender';\n\nexport default forwardRef(({url, auto = true, data, params, loading = globalParams.loading, empty = globalParams.empty, error = globalParams.error, component, render, options, ...props}, ref) => {\n    const fetcher = useFetch({url, auto, params, data, options}, ref);\n    return useFetchRender({loading, error, empty, component, render, props, ...fetcher});\n});\n","import memoize from \"lodash/memoize\";\nimport {globalParams, instance} from \"./preset\";\nimport hash from \"object-hash\";\n\nexport default memoize(({url, options, data}) => {\n  return instance({url, data, ...options});\n}, (object, force) => {\n  if (force === true) {\n    return Symbol();\n  }\n  return hash(object);\n});\n","export default (list) => {\n    if (list.length === 0) {\n        return {};\n    }\n\n    const allKeys = Object.keys(Object.assign({}, ...list));\n\n    const reduceCallback = (current, next, index) => {\n        const obj = {};\n        allKeys.forEach((key) => {\n            if (key === 'code') {\n                obj[key] = current[key];\n            } else {\n                if (index <= 1) {\n                    obj[key] = [current[key]];\n                } else {\n                    obj[key] = current[key];\n                }\n                if (index > 0) {\n                    obj[key].push(next[key]);\n                }\n            }\n        });\n        return obj;\n    }\n\n    if (list.length === 1) {\n        return reduceCallback(list[0], null, 0);\n    }\n\n    return list.reduce(reduceCallback);\n};\n","import { useCallback } from 'react';\nimport useFetchCreate from './useFetchCreate';\nimport { globalParams } from './preset';\nimport fetchMemo from './fetchMemo';\nimport resultsMerge from './resultsMerge';\n\nexport default ({ auto = true, fetchers }, ref) => {\n    const fetcher = useCallback((force) => {\n        return Promise.all(fetchers.map((item) => fetchMemo(item, force))).then((list) => {\n            const dataList = list.map((response) => globalParams.transformResponse(response).data);\n            if (dataList.every((data) => data.code === 200)) {\n                return {\n                    data: resultsMerge(dataList)\n                };\n            } else {\n                const resData = dataList.find(({data})=>data.code!==200);\n                return {\n                    data:resData\n                };\n            }\n        });\n    }, [fetchers]);\n    return useFetchCreate({\n        fetcher,\n        auto\n    }, ref);\n};\n","import React, {memo, forwardRef} from 'react';\nimport objectHash from 'object-hash';\nimport useFetchAll from './useFetchAll';\nimport {globalParams} from './preset';\nimport useFetchRender from './useFetchRender';\n\nexport default memo(forwardRef(({fetchers, auto = true, loading = globalParams.loading, empty = globalParams.empty, error = globalParams.error, component, render, ...props}, ref) => {\n    const fetcher = useFetchAll({fetchers, auto}, ref);\n    return useFetchRender({loading, error, empty, component, render, props, ...fetcher});\n}, (prevProps, nextProps) => {\n    return objectHash(prevProps) !== objectHash(nextProps);\n}));\n","import React, {forwardRef} from 'react';\nimport Fetch from './Fetch';\nimport pick from 'lodash/pick';\nimport merge from 'lodash/merge';\n\nconst withFetch = (WrappedComponent) => {\n    return forwardRef((props, ref) => <Fetch {...props} component={WrappedComponent} ref={ref}/>);\n};\n\nexport default withFetch;\n\nexport const createWithFetch = (params) => (WrappedComponent) => {\n    const pickParams = pick(params, ['url', 'params', 'data', 'options', 'loading', 'error', 'auto']);\n    const FetchComponent = withFetch(WrappedComponent);\n    return forwardRef((props, ref) => <FetchComponent {...merge({}, pickParams, props)} ref={ref}/>);\n};\n","import React, {forwardRef} from 'react';\nimport FetchAll from './FetchAll';\nimport pick from 'lodash/pick';\nimport merge from 'lodash/merge';\n\nconst withFetchAll = (WrappedComponent) => {\n  return forwardRef((props, ref) => <FetchAll {...props} component={WrappedComponent} ref={ref}/>);\n};\n\nexport default withFetchAll;\n\nexport const createWithFetchAll = (params) => (WrappedComponent) => {\n  const pickParams = pick(params, ['fetchers', 'loading', 'error', 'auto']);\n  const FetchComponent = withFetchAll(WrappedComponent);\n  return forwardRef((props, ref) => <FetchComponent {...merge({}, pickParams, props)} ref={ref}/>);\n};\n"]},"metadata":{},"sourceType":"module"}