{"ast":null,"code":"import memoize from 'lodash/memoize';\n/**\n * @name: text-width ;\n * @author: lingtong ;\n * @description: 获取字符串宽度 ;\n * */\n\nvar index = memoize(function (text, fontSize, options) {\n  var _Object$assign = Object.assign({\n    fontFamily: 'Arial',\n    fontWeight: 'normal'\n  }, options),\n      fontFamily = _Object$assign.fontFamily,\n      fontWeight = _Object$assign.fontWeight;\n\n  var canvas = document.createElement('canvas'),\n      ctx = canvas.getContext('2d');\n  ctx.font = \"\".concat(fontSize, \" \").concat(fontFamily, \" \").concat(fontWeight);\n  return ctx.measureText(text).width;\n}, function (text, fontSize, options) {\n  var obj = Object.assign({}, options, {\n    text: text,\n    fontSize: fontSize\n  });\n  return Object.keys(obj).map(function (key) {\n    return \"\".concat(key, \"-\").concat(obj[key]);\n  }).join(',');\n});\nexport default index;","map":{"version":3,"sources":["../src/index.js"],"names":["memoize","fontFamily","fontWeight","canvas","document","ctx","obj","text","fontSize"],"mappings":";AAAA;;;;;;AAOA,IAAA,KAAA,GAAeA,OAAO,CAAC,UAAA,IAAA,EAAA,QAAA,EAAA,OAAA,EAA6B;uBACf,MAAM,CAAN,MAAA,CAAc;AAACC,IAAAA,UAAU,EAAX,OAAA;AAAsBC,IAAAA,UAAU,EAAE;AAAlC,GAAd,EADe,OACf,C;MAA1BD,UADyC,GAAA,cAAA,CAAA,U;MAC7BC,UAD6B,GAAA,cAAA,CAAA,U;;MAE1CC,MAAM,GAAGC,QAAQ,CAARA,aAAAA,CAAf,QAAeA,C;MACXC,GAAG,GAAGF,MAAM,CAANA,UAAAA,CADV,IACUA,C;AACVE,EAAAA,GAAG,CAAHA,IAAAA,GAAAA,GAAAA,MAAAA,CAAAA,QAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAAA,UAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAAA,UAAAA,CAAAA;SACOA,GAAG,CAAHA,WAAAA,CAAAA,IAAAA,EAAP,K;AALkB,CAAA,EAMnB,UAAA,IAAA,EAAA,QAAA,EAAA,OAAA,EAA6B;MACtBC,GAAG,GAAG,MAAM,CAAN,MAAA,CAAA,EAAA,EAAA,OAAA,EAA2B;AAACC,IAAAA,IAAI,EAAL,IAAA;AAAOC,IAAAA,QAAQ,EAARA;AAAP,GAA3B,C;SACL,MAAM,CAAN,IAAA,CAAA,GAAA,EAAA,GAAA,CAAqB,UAAA,GAAA,EAAA;qBAAA,G,EAAA,G,EAAA,M,CAAmBF,GAAG,CAAtB,GAAsB,C;AAA3C,GAAA,EAAA,IAAA,CAAP,GAAO,C;AARX,CAAsB,CAAtB","sourcesContent":["/**\n * @name: text-width ;\n * @author: lingtong ;\n * @description: 获取字符串宽度 ;\n * */\nimport memoize from 'lodash/memoize';\n\nexport default memoize((text, fontSize, options) => {\n    const {fontFamily, fontWeight} = Object.assign({fontFamily: 'Arial', fontWeight: 'normal'}, options);\n    const canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d');\n    ctx.font = `${fontSize} ${fontFamily} ${fontWeight}`;\n    return ctx.measureText(text).width;\n}, (text, fontSize, options) => {\n    const obj = Object.assign({}, options, {text, fontSize});\n    return Object.keys(obj).map((key) => `${key}-${obj[key]}`).join(',');\n});\n"]},"metadata":{},"sourceType":"module"}