{"ast":null,"code":"import { render, unmountComponentAtNode } from 'react-dom';\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\"; // We only handle element & text node.\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\nvar ellipsisContainer;\nvar wrapperStyle = {\n  padding: 0,\n  margin: 0,\n  display: 'inline',\n  lineHeight: 'inherit'\n};\n\nfunction pxToNumber(value) {\n  if (!value) {\n    return 0;\n  }\n\n  var match = value.match(/^\\d*(\\.\\d*)?/);\n  return match ? Number(match[0]) : 0;\n}\n\nfunction styleToString(style) {\n  // There are some different behavior between Firefox & Chrome.\n  // We have to handle this ourself.\n  var styleNames = Array.prototype.slice.apply(style);\n  return styleNames.map(function (name) {\n    return \"\".concat(name, \": \").concat(style.getPropertyValue(name), \";\");\n  }).join('');\n}\n\nfunction mergeChildren(children) {\n  var childList = [];\n  children.forEach(function (child) {\n    var prevChild = childList[childList.length - 1];\n\n    if (typeof child === 'string' && typeof prevChild === 'string') {\n      childList[childList.length - 1] += child;\n    } else {\n      childList.push(child);\n    }\n  });\n  return childList;\n}\n\nfunction resetDomStyles(target, origin) {\n  target.setAttribute('aria-hidden', 'true');\n  var originStyle = window.getComputedStyle(origin);\n  var originCSS = styleToString(originStyle); // Set shadow\n\n  target.setAttribute('style', originCSS);\n  target.style.position = 'fixed';\n  target.style.left = '0';\n  target.style.height = 'auto';\n  target.style.minHeight = 'auto';\n  target.style.maxHeight = 'auto';\n  target.style.top = '-999999px';\n  target.style.zIndex = '-1000'; // clean up css overflow\n\n  target.style.textOverflow = 'clip';\n  target.style.whiteSpace = 'normal';\n  target.style.webkitLineClamp = 'none';\n}\n\nfunction getRealLineHeight(originElement) {\n  var heightContainer = document.createElement('div');\n  resetDomStyles(heightContainer, originElement);\n  heightContainer.appendChild(document.createTextNode('text'));\n  document.body.appendChild(heightContainer);\n  var offsetHeight = heightContainer.offsetHeight;\n  var lineHeight = pxToNumber(window.getComputedStyle(originElement).lineHeight);\n  document.body.removeChild(heightContainer);\n  return offsetHeight > lineHeight ? offsetHeight : lineHeight;\n}\n\nexport default (function (originElement, option, content, fixedContent, ellipsisStr) {\n  if (!ellipsisContainer) {\n    ellipsisContainer = document.createElement('div');\n    ellipsisContainer.setAttribute('aria-hidden', 'true');\n  } // HMR will remove this from body which should patch back\n\n\n  if (!ellipsisContainer.parentNode) {\n    document.body.appendChild(ellipsisContainer);\n  }\n\n  var rows = option.rows,\n      _option$suffix = option.suffix,\n      suffix = _option$suffix === void 0 ? '' : _option$suffix; // Get origin style\n\n  var originStyle = window.getComputedStyle(originElement);\n  var lineHeight = getRealLineHeight(originElement);\n  var maxHeight = Math.floor(lineHeight) * (rows + 1) + pxToNumber(originStyle.paddingTop) + pxToNumber(originStyle.paddingBottom);\n  resetDomStyles(ellipsisContainer, originElement); // Render in the fake container\n\n  var contentList = mergeChildren(toArray(content));\n  render( /*#__PURE__*/React.createElement(\"div\", {\n    style: wrapperStyle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: wrapperStyle\n  }, contentList, suffix), /*#__PURE__*/React.createElement(\"span\", {\n    style: wrapperStyle\n  }, fixedContent)), ellipsisContainer); // wrap in an div for old version react\n  // Check if ellipsis in measure div is height enough for content\n\n  function inRange() {\n    return Math.ceil(ellipsisContainer.getBoundingClientRect().height) < maxHeight;\n  } // Skip ellipsis if already match\n\n\n  if (inRange()) {\n    unmountComponentAtNode(ellipsisContainer);\n    return {\n      content: content,\n      text: ellipsisContainer.innerHTML,\n      ellipsis: false\n    };\n  } // We should clone the childNode since they're controlled by React and we can't reuse it without warning\n\n\n  var childNodes = Array.prototype.slice.apply(ellipsisContainer.childNodes[0].childNodes[0].cloneNode(true).childNodes).filter(function (_ref) {\n    var nodeType = _ref.nodeType;\n    return nodeType !== COMMENT_NODE;\n  });\n  var fixedNodes = Array.prototype.slice.apply(ellipsisContainer.childNodes[0].childNodes[1].cloneNode(true).childNodes);\n  unmountComponentAtNode(ellipsisContainer); // ========================= Find match ellipsis content =========================\n\n  var ellipsisChildren = [];\n  ellipsisContainer.innerHTML = ''; // Create origin content holder\n\n  var ellipsisContentHolder = document.createElement('span');\n  ellipsisContainer.appendChild(ellipsisContentHolder);\n  var ellipsisTextNode = document.createTextNode(ellipsisStr + suffix);\n  ellipsisContentHolder.appendChild(ellipsisTextNode);\n  fixedNodes.forEach(function (childNode) {\n    ellipsisContainer.appendChild(childNode);\n  }); // Append before fixed nodes\n\n  function appendChildNode(node) {\n    ellipsisContentHolder.insertBefore(node, ellipsisTextNode);\n  } // Get maximum text\n\n\n  function measureText(textNode, fullText) {\n    var startLoc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var endLoc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : fullText.length;\n    var lastSuccessLoc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var midLoc = Math.floor((startLoc + endLoc) / 2);\n    var currentText = fullText.slice(0, midLoc);\n    textNode.textContent = currentText;\n\n    if (startLoc >= endLoc - 1) {\n      // Loop when step is small\n      for (var step = endLoc; step >= startLoc; step -= 1) {\n        var currentStepText = fullText.slice(0, step);\n        textNode.textContent = currentStepText;\n\n        if (inRange() || !currentStepText) {\n          return step === fullText.length ? {\n            finished: false,\n            reactNode: fullText\n          } : {\n            finished: true,\n            reactNode: currentStepText\n          };\n        }\n      }\n    }\n\n    if (inRange()) {\n      return measureText(textNode, fullText, midLoc, endLoc, midLoc);\n    }\n\n    return measureText(textNode, fullText, startLoc, midLoc, lastSuccessLoc);\n  }\n\n  function measureNode(childNode, index) {\n    var type = childNode.nodeType;\n\n    if (type === ELEMENT_NODE) {\n      // We don't split element, it will keep if whole element can be displayed.\n      appendChildNode(childNode);\n\n      if (inRange()) {\n        return {\n          finished: false,\n          reactNode: contentList[index]\n        };\n      } // Clean up if can not pull in\n\n\n      ellipsisContentHolder.removeChild(childNode);\n      return {\n        finished: true,\n        reactNode: null\n      };\n    }\n\n    if (type === TEXT_NODE) {\n      var fullText = childNode.textContent || '';\n      var textNode = document.createTextNode(fullText);\n      appendChildNode(textNode);\n      return measureText(textNode, fullText);\n    } // Not handle other type of content\n    // PS: This code should not be attached after react 16\n\n    /* istanbul ignore next */\n\n\n    return {\n      finished: false,\n      reactNode: null\n    };\n  }\n\n  childNodes.some(function (childNode, index) {\n    var _measureNode = measureNode(childNode, index),\n        finished = _measureNode.finished,\n        reactNode = _measureNode.reactNode;\n\n    if (reactNode) {\n      ellipsisChildren.push(reactNode);\n    }\n\n    return finished;\n  });\n  return {\n    content: ellipsisChildren,\n    text: ellipsisContainer.innerHTML,\n    ellipsis: true\n  };\n});","map":{"version":3,"sources":["/Users/linzhipeng/Documents/code_cloud/@kne/react-view-render/node_modules/antd/es/typography/util.js"],"names":["render","unmountComponentAtNode","React","toArray","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","ellipsisContainer","wrapperStyle","padding","margin","display","lineHeight","pxToNumber","value","match","Number","styleToString","style","styleNames","Array","prototype","slice","apply","map","name","concat","getPropertyValue","join","mergeChildren","children","childList","forEach","child","prevChild","length","push","resetDomStyles","target","origin","setAttribute","originStyle","window","getComputedStyle","originCSS","position","left","height","minHeight","maxHeight","top","zIndex","textOverflow","whiteSpace","webkitLineClamp","getRealLineHeight","originElement","heightContainer","document","createElement","appendChild","createTextNode","body","offsetHeight","removeChild","option","content","fixedContent","ellipsisStr","parentNode","rows","_option$suffix","suffix","Math","floor","paddingTop","paddingBottom","contentList","inRange","ceil","getBoundingClientRect","text","innerHTML","ellipsis","childNodes","cloneNode","filter","_ref","nodeType","fixedNodes","ellipsisChildren","ellipsisContentHolder","ellipsisTextNode","childNode","appendChildNode","node","insertBefore","measureText","textNode","fullText","startLoc","arguments","undefined","endLoc","lastSuccessLoc","midLoc","currentText","textContent","step","currentStepText","finished","reactNode","measureNode","index","type","some","_measureNode"],"mappings":"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","sourcesContent":["import { render, unmountComponentAtNode } from 'react-dom';\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\"; // We only handle element & text node.\n\nvar ELEMENT_NODE = 1;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\nvar ellipsisContainer;\nvar wrapperStyle = {\n  padding: 0,\n  margin: 0,\n  display: 'inline',\n  lineHeight: 'inherit'\n};\n\nfunction pxToNumber(value) {\n  if (!value) {\n    return 0;\n  }\n\n  var match = value.match(/^\\d*(\\.\\d*)?/);\n  return match ? Number(match[0]) : 0;\n}\n\nfunction styleToString(style) {\n  // There are some different behavior between Firefox & Chrome.\n  // We have to handle this ourself.\n  var styleNames = Array.prototype.slice.apply(style);\n  return styleNames.map(function (name) {\n    return \"\".concat(name, \": \").concat(style.getPropertyValue(name), \";\");\n  }).join('');\n}\n\nfunction mergeChildren(children) {\n  var childList = [];\n  children.forEach(function (child) {\n    var prevChild = childList[childList.length - 1];\n\n    if (typeof child === 'string' && typeof prevChild === 'string') {\n      childList[childList.length - 1] += child;\n    } else {\n      childList.push(child);\n    }\n  });\n  return childList;\n}\n\nfunction resetDomStyles(target, origin) {\n  target.setAttribute('aria-hidden', 'true');\n  var originStyle = window.getComputedStyle(origin);\n  var originCSS = styleToString(originStyle); // Set shadow\n\n  target.setAttribute('style', originCSS);\n  target.style.position = 'fixed';\n  target.style.left = '0';\n  target.style.height = 'auto';\n  target.style.minHeight = 'auto';\n  target.style.maxHeight = 'auto';\n  target.style.top = '-999999px';\n  target.style.zIndex = '-1000'; // clean up css overflow\n\n  target.style.textOverflow = 'clip';\n  target.style.whiteSpace = 'normal';\n  target.style.webkitLineClamp = 'none';\n}\n\nfunction getRealLineHeight(originElement) {\n  var heightContainer = document.createElement('div');\n  resetDomStyles(heightContainer, originElement);\n  heightContainer.appendChild(document.createTextNode('text'));\n  document.body.appendChild(heightContainer);\n  var offsetHeight = heightContainer.offsetHeight;\n  var lineHeight = pxToNumber(window.getComputedStyle(originElement).lineHeight);\n  document.body.removeChild(heightContainer);\n  return offsetHeight > lineHeight ? offsetHeight : lineHeight;\n}\n\nexport default (function (originElement, option, content, fixedContent, ellipsisStr) {\n  if (!ellipsisContainer) {\n    ellipsisContainer = document.createElement('div');\n    ellipsisContainer.setAttribute('aria-hidden', 'true');\n  } // HMR will remove this from body which should patch back\n\n\n  if (!ellipsisContainer.parentNode) {\n    document.body.appendChild(ellipsisContainer);\n  }\n\n  var rows = option.rows,\n      _option$suffix = option.suffix,\n      suffix = _option$suffix === void 0 ? '' : _option$suffix; // Get origin style\n\n  var originStyle = window.getComputedStyle(originElement);\n  var lineHeight = getRealLineHeight(originElement);\n  var maxHeight = Math.floor(lineHeight) * (rows + 1) + pxToNumber(originStyle.paddingTop) + pxToNumber(originStyle.paddingBottom);\n  resetDomStyles(ellipsisContainer, originElement); // Render in the fake container\n\n  var contentList = mergeChildren(toArray(content));\n  render( /*#__PURE__*/React.createElement(\"div\", {\n    style: wrapperStyle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: wrapperStyle\n  }, contentList, suffix), /*#__PURE__*/React.createElement(\"span\", {\n    style: wrapperStyle\n  }, fixedContent)), ellipsisContainer); // wrap in an div for old version react\n  // Check if ellipsis in measure div is height enough for content\n\n  function inRange() {\n    return Math.ceil(ellipsisContainer.getBoundingClientRect().height) < maxHeight;\n  } // Skip ellipsis if already match\n\n\n  if (inRange()) {\n    unmountComponentAtNode(ellipsisContainer);\n    return {\n      content: content,\n      text: ellipsisContainer.innerHTML,\n      ellipsis: false\n    };\n  } // We should clone the childNode since they're controlled by React and we can't reuse it without warning\n\n\n  var childNodes = Array.prototype.slice.apply(ellipsisContainer.childNodes[0].childNodes[0].cloneNode(true).childNodes).filter(function (_ref) {\n    var nodeType = _ref.nodeType;\n    return nodeType !== COMMENT_NODE;\n  });\n  var fixedNodes = Array.prototype.slice.apply(ellipsisContainer.childNodes[0].childNodes[1].cloneNode(true).childNodes);\n  unmountComponentAtNode(ellipsisContainer); // ========================= Find match ellipsis content =========================\n\n  var ellipsisChildren = [];\n  ellipsisContainer.innerHTML = ''; // Create origin content holder\n\n  var ellipsisContentHolder = document.createElement('span');\n  ellipsisContainer.appendChild(ellipsisContentHolder);\n  var ellipsisTextNode = document.createTextNode(ellipsisStr + suffix);\n  ellipsisContentHolder.appendChild(ellipsisTextNode);\n  fixedNodes.forEach(function (childNode) {\n    ellipsisContainer.appendChild(childNode);\n  }); // Append before fixed nodes\n\n  function appendChildNode(node) {\n    ellipsisContentHolder.insertBefore(node, ellipsisTextNode);\n  } // Get maximum text\n\n\n  function measureText(textNode, fullText) {\n    var startLoc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var endLoc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : fullText.length;\n    var lastSuccessLoc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var midLoc = Math.floor((startLoc + endLoc) / 2);\n    var currentText = fullText.slice(0, midLoc);\n    textNode.textContent = currentText;\n\n    if (startLoc >= endLoc - 1) {\n      // Loop when step is small\n      for (var step = endLoc; step >= startLoc; step -= 1) {\n        var currentStepText = fullText.slice(0, step);\n        textNode.textContent = currentStepText;\n\n        if (inRange() || !currentStepText) {\n          return step === fullText.length ? {\n            finished: false,\n            reactNode: fullText\n          } : {\n            finished: true,\n            reactNode: currentStepText\n          };\n        }\n      }\n    }\n\n    if (inRange()) {\n      return measureText(textNode, fullText, midLoc, endLoc, midLoc);\n    }\n\n    return measureText(textNode, fullText, startLoc, midLoc, lastSuccessLoc);\n  }\n\n  function measureNode(childNode, index) {\n    var type = childNode.nodeType;\n\n    if (type === ELEMENT_NODE) {\n      // We don't split element, it will keep if whole element can be displayed.\n      appendChildNode(childNode);\n\n      if (inRange()) {\n        return {\n          finished: false,\n          reactNode: contentList[index]\n        };\n      } // Clean up if can not pull in\n\n\n      ellipsisContentHolder.removeChild(childNode);\n      return {\n        finished: true,\n        reactNode: null\n      };\n    }\n\n    if (type === TEXT_NODE) {\n      var fullText = childNode.textContent || '';\n      var textNode = document.createTextNode(fullText);\n      appendChildNode(textNode);\n      return measureText(textNode, fullText);\n    } // Not handle other type of content\n    // PS: This code should not be attached after react 16\n\n    /* istanbul ignore next */\n\n\n    return {\n      finished: false,\n      reactNode: null\n    };\n  }\n\n  childNodes.some(function (childNode, index) {\n    var _measureNode = measureNode(childNode, index),\n        finished = _measureNode.finished,\n        reactNode = _measureNode.reactNode;\n\n    if (reactNode) {\n      ellipsisChildren.push(reactNode);\n    }\n\n    return finished;\n  });\n  return {\n    content: ellipsisChildren,\n    text: ellipsisContainer.innerHTML,\n    ellipsis: true\n  };\n});"]},"metadata":{},"sourceType":"module"}