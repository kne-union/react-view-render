{"version":3,"sources":["../../src/util.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../src/General/Text/index.js"],"names":["escape","value","applyVariable","WrappedComponent","originProps","useGlobalContext","components","emitter","props","output","extract","Object","key","extractProps","newProps","currentVariable","propsValue","parsedPropsValue","name","path","test","dotIndexList","map","sign","index","dotIndex","Math","parseVariable","functions","newFunction","Function","args","otherContext","content","lib","get","useEffect","variable","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","length","i","arr2","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","Text"],"mappings":"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","file":"static/js/20.c9ad8f51.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport {useGlobalContext, Provider} from './context';\nimport Render from './index';\nimport get from 'lodash/get';\n\nconst escape = (value) => {\n    if (typeof value === 'string' && value.indexOf('\\\\$') === 0) {\n        return value.replace('\\\\$', '$');\n    }\n    return value;\n};\n\nconst parseVariable = (value) => {\n    if (typeof value !== 'string') {\n        return {\n            name: value,\n            path: ''\n        };\n    }\n    if (!/[.\\[]/.test(value)) {\n        return {\n            name: value,\n            path: ''\n        };\n    }\n    const dotIndexList = ['[', '.'].map((sign) => value.indexOf(sign)).filter((index) => index > -1);\n    if (dotIndexList.length === 0) {\n        return {\n            name: value,\n            path: ''\n        };\n    }\n    const dotIndex = Math.min(...dotIndexList);\n    return {\n        name: value.substr(0, dotIndex),\n        path: value.substr(dotIndex).replace(/^\\./, '')\n    };\n};\n\nexport const extractProps = (props = {}) => {\n    const output = {\n        props: {}, extract: {}\n    };\n    Object.keys(props).forEach((key) => {\n        if (key.charAt(0) === '$') {\n            output.extract[key] = props[key];\n        } else {\n            output.props[escape(key)] = props[key];\n        }\n    });\n\n    return output;\n};\n\nexport const applyVariable = (WrappedComponent) => {\n    return (originProps) => {\n        const {variable, functions, components, ...otherContext} = useGlobalContext();\n        const {emitter} = otherContext;\n        const {props, extract} = extractProps(originProps);\n        const newProps = {}, currentVariable = Object.assign({}, variable, extract);\n        Object.keys(props).forEach((key) => {\n            const propsValue = props[key], parsedPropsValue = parseVariable(props[key]);\n\n            if (currentVariable.hasOwnProperty(propsValue)) {\n                newProps[key] = currentVariable[propsValue];\n                return;\n            }\n\n            if (currentVariable.hasOwnProperty(parsedPropsValue.name)) {\n                newProps[key] = get(currentVariable[parsedPropsValue.name], parsedPropsValue.path);\n                return;\n            }\n\n            if (functions.hasOwnProperty(propsValue)) {\n                if (typeof functions[propsValue] === 'string') {\n                    newProps[key] = (...args) => {\n                        const newFunction = new Function('args', 'variable', 'functions', 'lib', functions[propsValue]);\n                        return newFunction(args, currentVariable, functions, otherContext.lib);\n                    };\n                    return;\n                }\n                if (typeof functions[propsValue] === 'function') {\n                    newProps[key] = functions[propsValue];\n                    return;\n                }\n                return;\n            }\n\n            if (components.hasOwnProperty(propsValue)) {\n                newProps[key] =\n                    <Render content={components[propsValue]} lib={otherContext.lib} emitter={otherContext.emitter}/>;\n                return;\n            }\n\n            newProps[key] = escape(propsValue);\n        });\n        useEffect(() => {\n            emitter && emitter.emit('component-appended', currentVariable.$id);\n            return () => {\n                emitter && emitter.emit('component-removed', currentVariable.$id);\n            };\n        }, [emitter]);\n        if (Object.keys(extract).length > 0) {\n            return <Provider\n                value={Object.assign({}, otherContext, {functions, components, variable: currentVariable})}>\n                <WrappedComponent {...newProps}/>\n            </Provider>;\n        }\n        return <WrappedComponent {...newProps}/>;\n    };\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import React from 'react';\nimport { applyVariable } from '../../util';\n\nconst Text = ({ content, ...props }) => {\n  return (\n    <span {...props}>\n      {content}\n    </span>\n  );\n};\n\nText.defaultProps = {\n  content: '请输入内容'\n};\n\nexport default applyVariable(Text);"],"sourceRoot":""}